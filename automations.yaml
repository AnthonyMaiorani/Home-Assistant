- id: '1546210609741'
  alias: Morning Automation
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.anthony_s_echo_show_next_alarm''),
      999999999999) %} {% set current_time = as_timestamp(states(''sensor.date_time'').replace('','',
      ''''), 0) %} {% set pre_time = 12 %} {{ current_time >= alarm_time - pre_time
      }}

      '
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.anthony_s_echo_show_next_alarm
  - delay:
      hours: 0
      minutes: 0
      seconds: 9
      milliseconds: 0
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.alarm_display
      state: '0'
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: automation.turn_off
    data:
      stop_actions: true
    target:
      entity_id:
      - automation.bed_occupancy
      - automation.nanoleaf_scene_changer_and_auto_brightness
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bedroom_lights
  - continue_on_error: true
    parallel:
    - if:
      - condition: and
        conditions:
        - condition: state
          entity_id: light.wyze_bulb_1
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_2
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_3
          state: unavailable
        alias: relay was turned off
      then:
      - repeat:
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: 100
              hs_color:
              - 30.353
              - 33.597
              effect: None
            target:
              entity_id: light.fan_lights
          until:
          - condition: state
            entity_id: light.wyze_bulb_1
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
          - condition: state
            entity_id: light.wyze_bulb_2
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
          - condition: state
            entity_id: light.wyze_bulb_3
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
      else:
      - service: light.turn_on
        data:
          brightness_pct: 100
          hs_color:
          - 30.353
          - 33.597
          effect: None
        target:
          entity_id: light.fan_lights
    - service: light.turn_on
      continue_on_error: true
      data:
        effect: Vibrant Sunrise
        brightness_pct: 100
        transition: 45
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
        - light.shapes_4948
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.play_music
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.light_switch_relay
  - delay:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - service: script.turn_on
    data: {}
    target:
      entity_id:
      - script.morning
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.bedmotion
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.bed_occupancy
      - automation.nanoleaf_scene_changer_and_auto_brightness
  - event: event_change_nanoleaf
    event_data: {}
  - delay:
      hours: 0
      minutes: 4
      seconds: 0
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.anthony_s_echo_show_next_alarm
  mode: single
- id: '1653601692731'
  alias: AC Boost Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    id: buttonpress
    to: 'on'
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    - switch.ac
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: person.taylor
      state: home
  action:
  - if:
    - condition: trigger
      id: buttonpress
    then:
    - data:
        hvac_mode: cool
      target:
        entity_id: climate.bedroom_ac
      action: climate.set_hvac_mode
    - data:
        duration: 0:25:00
      target:
        entity_id: timer.ac
      action: timer.start
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'off'
      - condition: state
        state: 'off'
        entity_id: binary_sensor.bedroom_chair
      then:
      - action: eight_sleep.heat_set
        metadata: {}
        data:
          sleep_stage: current
          duration: 1500
          target: -100
        target:
          device_id: 1807d01837ccf4f85178b48dd72b10f6
    else:
    - if:
      - condition: state
        entity_id: binary_sensor.shower
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: person.taylor
          state: home
        - condition: state
          entity_id: input_select.anthony
          state: Home
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      then:
      - data: {}
        target:
          entity_id: timer.ac
        action: timer.start
      else:
      - data: {}
        target:
          entity_id: input_boolean.ac_boost
        action: input_boolean.turn_off
      - data: {}
        target:
          entity_id: timer.ac
        action: timer.cancel
      - if:
        - condition: state
          entity_id: person.taylor
          state: home
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'on'
        - condition: not
          conditions:
          - condition: state
            entity_id: light.bedroom_lights
            state: 'on'
        - condition: sun
          before: sunrise
          after: sunset
        then:
        - data: {}
          target:
            entity_id: switch.acfanhigh
          action: switch.turn_on
        alias: ac fan high if night and taylor home
  mode: restart
- id: 43a25b65afed4a4680f5ec81172f11e8
  alias: Startup Actions
  description: Set Theme, Ensure Location Input Select is Updated
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.ac_controls
  - parallel:
    - data:
        name: ios-dark-mode-dark-blue
        mode: light
      service: frontend.set_theme
    - if:
      - condition: state
        entity_id: person.anthony
        state: home
      then:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
      else:
      - condition: template
        value_template: '{{ states(''person.anthony'')|lower in [''utd'', ''raytheon'',
          ''away'', ''not_home''] }}'
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.anthony
    - if:
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: timer.start
        data:
          duration: 0
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
    - service: automation.trigger
      data:
        skip_condition: true
      target:
        entity_id: automation.ping_z_wave_devices
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
    - service: switch.turn_on
      data: {}
      target:
        entity_id:
        - switch.airport_express
        - switch.lumi_lumi_plug_maus01_switch_3
        - switch.soundbar_airport
        - switch.headphone_charger
        - switch.sonoff_s31_lite_zb_switch_3
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'off'
      - condition: time
        after: 00:00:00
      - condition: sun
        before: sunrise
      then:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.usb_hub
    - service: mqtt.publish
      data:
        topic: homeassistant/binary_sensor/mailbox/state
        payload: empty
    - service: automation.trigger
      target:
        entity_id: automation.adjust_kitchen_homepod_volume
      data:
        skip_condition: true
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_soundbar
    - service: button.press
      target:
        entity_id: button.desktop_pc_satellite_restart_iotlink
      data: {}
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.ac_controls
  - if:
    - condition: state
      entity_id: media_player.owntone_output_bathroom
      state: 'on'
    - condition: state
      entity_id: light.bathroom_lights
      state: 'off'
    then:
    - service: media_player.turn_off
      data: {}
      target:
        entity_id: media_player.owntone_output_bathroom
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: unavailable
    then:
    - service: script.turn_on
      target:
        entity_id: script.lofi
      data: {}
  - parallel:
    - service: browser_mod.refresh
      data:
        browser_id:
        - 2c8b769e-f4d4e0e9
      alias: refresh doorbell cam tablet
    - alias: refresh medicine tablet
      service: browser_mod.refresh
      data:
        browser_id:
        - 92e9f5b7-92d2f3c4
    - alias: refresh food tablet
      service: browser_mod.refresh
      data:
        browser_id:
        - b8229aec-8e77c6cd
    - alias: refresh bedroom tablet
      service: browser_mod.refresh
      data:
        browser_id:
        - f1e02257-8ed3a647
  initial_state: true
  mode: single
- id: '1620642299524'
  alias: Motion Bypass Control
  description: Turn lights on if bed motion sensing bypass is enabled
  trigger:
  - platform: state
    entity_id: input_boolean.bedmotion
    to: 'on'
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - service: script.morning
    data: {}
  mode: single
- id: '1621577255605'
  alias: Left Home
  description: Turns bedroom off when leaving home, and ensures bedroom stays off
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    from: Home
    to: Just Left
  - platform: state
    entity_id:
    - input_select.taylor_presence
    from: Home
    to: Just Left
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.anthony
        state: unavailable
      - condition: state
        entity_id: person.anthony
        state: unknown
    - condition: state
      entity_id: person.taylor
      state: home
  action:
  - parallel:
    - data: {}
      target:
        entity_id: script.night
      alias: Turn off room
      action: script.turn_on
    - data: {}
      target:
        entity_id: timer.ac
      action: timer.cancel
    - data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - switch.ac
        - input_boolean.privacy
        - media_player.owntone_server
        - switch.brtv
      action: homeassistant.turn_off
    - if:
      - condition: numeric_state
        entity_id: zone.home
        below: 1
        alias: If home empty
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        alias: And back door closed
      then:
      - data: {}
        target:
          entity_id:
          - light.living_room_lights
          - light.kitchen_lights
          - light.hallway_lights
          - light.bathroom_lights
          - switch.living_room_fan
          - switch.laundry_room_light
          - light.living_room_fan
          - switch.guesttv
        action: homeassistant.turn_off
      - if:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        then:
        - data: {}
          action: script.stop_music
      alias: If home empty, turn off
    - if:
      - condition: state
        entity_id: switch.exhaust_fan
        state: 'on'
        alias: If exhaust fan on
      - condition: state
        entity_id: timer.exhaust
        state: idle
        alias: And Timer not running
      then:
      - data:
          duration: 0
        target:
          entity_id: timer.exhaust
        alias: Start timer
        action: timer.start
      alias: Start exhaust fan timer if not running
    - target:
        entity_id: select.home_current_mode
      data:
        option: away
      enabled: false
      action: select.select_option
    - target:
        device_id: 1807d01837ccf4f85178b48dd72b10f6
      data: {}
      action: eight_sleep.side_off
  mode: single
- id: '1627443167507'
  alias: Bedroom Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: Motion
  - platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closetopen
  - platform: state
    entity_id: binary_sensor.closet
    from: 'on'
    to: 'off'
    id: closetclosed
  condition:
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: closetopen
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: Motion
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom door has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: closetclosed
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been closed
          title: Motion detected in bedroom
          data:
            group: bedroom
    default: []
  mode: single
- id: '1627778209718'
  alias: Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    for:
      hours: 0
      minutes: 40
      seconds: 0
    id: Home
  - platform: state
    entity_id: input_select.anthony
    id: Away
    to: Just Left
    for: 00:10:00
  - platform: state
    entity_id:
    - person.anthony
    to: home
    id: Just Arrived
  - platform: state
    entity_id:
    - person.anthony
    from: home
    id: Just Left
  - platform: state
    entity_id:
    - person.anthony
    to: utd
    id: utd
  - platform: state
    entity_id:
    - person.anthony
    to: raytheon
    id: raytheon
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unavailable
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unknown
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: trigger
          id: raytheon
        - condition: trigger
          id: utd
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Away
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Arrived
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Left
    default: []
  mode: single
- id: '1627779396737'
  alias: Door Opened
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    to: 'on'
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
      sequence:
      - parallel:
        - service: script.turn_on
          data: {}
          target:
            entity_id:
            - script.morning
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: media_player.owntone_server
              state: playing
            alias: not playing
          then:
          - service: script.turn_on
            data: {}
            target:
              entity_id: script.lofi
          alias: Play music
          else:
          - condition: template
            value_template: "{{ not (state_attr('media_player.spotify_anthony221121',
              'media_playlist') \n        is defined and \n        state_attr('media_player.spotify_anthony221121',
              'media_playlist') \n        is not none and not 'lofi' in \n        state_attr('media_player.spotify_anthony221121',
              'media_playlist')) \n    and state_attr('media_player.spotify_anthony221121',
              'volume_level') < 0.16}}"
            alias: If playing
          - service: media_player.volume_set
            data:
              volume_level: 0.13
            target:
              entity_id: media_player.spotify_anthony221121
          - repeat:
              count: '3'
              sequence:
              - service: media_player.volume_set
                data:
                  volume_level: 0.13
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_desk
              - service: media_player.volume_set
                data:
                  volume_level: 0.26
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_nightstand
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
        - if:
          - condition: or
            conditions:
            - condition: numeric_state
              entity_id: sensor.bedroom_temperature
              above: 68
            - condition: numeric_state
              entity_id: climate.bedroom_ac
              above: 68
              attribute: current_temperature
            - condition: numeric_state
              entity_id: sensor.bedroom_humidity
              above: 55
            - condition: numeric_state
              entity_id: weather.dark_sky
              attribute: temperature
              above: 69
            alias: Hot
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.ac_boost
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_kitchen_left
            - media_player.kitchen_speakers
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: time
        after: 07:00:00
        before: 01:00:00
      - condition: state
        entity_id: light.wled
        state: 'on'
      sequence:
      - parallel:
        - choose:
          - conditions:
            - condition: state
              entity_id: light.fan_lights
              state: 'off'
            sequence:
            - service: script.turn_on
              continue_on_error: true
              data: {}
              target:
                entity_id: script.color_loop
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            - service: light.turn_on
              continue_on_error: true
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
                - light.shapes_4948
              data:
                brightness_pct: 100
          - conditions:
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            sequence:
            - service: light.turn_on
              continue_on_error: true
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
                - light.shapes_4948
              data:
                brightness_pct: 100
          default: []
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.bedmotion
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.kitchen_speakers
        - service: automation.turn_on
          target:
            entity_id: automation.bed_occupancy
          data: {}
    default: []
  mode: single
- id: '1627966300438'
  alias: Close Blinds When Dark
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: +00:25:00
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: cover.bedroom_blinds
      state: closed
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bedroom_blinds
  mode: single
- id: '1644476253725'
  alias: Bed Occupancy Detected
  description: If motion detected in bed under certain circumstances, turn off overhead
    lights.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.bedmotion
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        before: 06:00:00
        after: '22:00:00'
      - condition: state
        entity_id: light.wled
        state: 'on'
      - condition: state
        entity_id: binary_sensor.webcam
        state: 'on'
      - condition: state
        entity_id: binary_sensor.discord_active
        state: 'on'
      - condition: state
        entity_id: switch.desktop
        state: 'on'
      - alias: not playing steam game
        condition: template
        value_template: '{{ is_state(''sensor.steam_76561198069805211'', ''unavailable'')
          or state_attr(''sensor.steam_76561198069805211'', ''game'') ==  None }}'
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.bedroom_chair
          state: 'on'
        then:
        - wait_for_trigger:
          - platform: state
            entity_id:
            - binary_sensor.bed_occupancy
            to: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 10
          continue_on_timeout: false
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.call
      alias: night call
    default:
    - parallel:
      - if:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.bedroom_temperature
            above: 68
          - condition: numeric_state
            entity_id: climate.bedroom_ac
            above: 68
            attribute: current_temperature
          - condition: numeric_state
            entity_id: sensor.bedroom_humidity
            above: 55
          alias: Hot
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: climate.home
            attribute: current_temperature
            above: 70
          - condition: numeric_state
            entity_id: weather.dark_sky
            attribute: temperature
            above: 65
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.ac
        alias: turn on ac
      - if:
        - condition: state
          entity_id: light.fan_lights
          state: 'on'
        then:
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.fan_off
        alias: Fan Lights Off
      - alias: if home alone, turn off stuff
        if:
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_occupancy
            state: 'on'
          enabled: false
        then:
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.living_room_lights
            - light.bathroom_lights
            - light.hallway_lights
            - light.living_room_fan
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.living_room_fan
            - switch.laundry_room_light
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_bathroom
            - media_player.kitchen_speakers
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_kitchen_left
        - repeat:
            until:
            - condition: state
              entity_id: media_player.kitchen_speakers
              state: 'off'
            sequence:
            - service: media_player.turn_off
              data: {}
              target:
                entity_id:
                - media_player.kitchen_speakers
                - media_player.owntone_output_kitchen_right
                - media_player.owntone_output_kitchen_left
      - service: media_player.turn_off
        data: {}
        target:
          entity_id:
          - media_player.owntone_output_soundbar
          - media_player.kitchen_speakers
          - media_player.owntone_output_kitchen_left
          - media_player.owntone_output_kitchen_right
          - media_player.owntone_output_master_bedroom_tv
          - media_player.owntone_output_bathroom
      - if:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: media_player.owntone_output_anthony_s_desk
            attribute: volume_level
            above: 0.15
          - condition: numeric_state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            attribute: volume_level
            above: 0.15
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
          - condition: state
            entity_id: input_select.anthony
            state: Home
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: Source
          state: Home Assistant
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: playing
        then:
        - if:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: Music
          then:
          - service: media_player.volume_set
            continue_on_error: true
            data:
              volume_level: 0.18
            target:
              entity_id:
              - media_player.spotify_anthony221121
          - repeat:
              count: '5'
              sequence:
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_nightstand
                  - media_player.owntone_output_anthony_s_desk
              - service: media_player.volume_set
                data:
                  volume_level: 0.18
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_desk
              - service: media_player.volume_set
                data:
                  volume_level: 0.36
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_nightstand
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
          else:
          - if:
            - condition: state
              entity_id: switch.acfanhigh
              state: 'on'
            then:
            - if:
              - condition: state
                entity_id: switch.acfanhigh
                state: 'on'
              then:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 5
                  milliseconds: 0
              - service: media_player.volume_set
                continue_on_error: true
                data:
                  volume_level: 0.12
                target:
                  entity_id:
                  - media_player.spotify_anthony221121
              - repeat:
                  count: '3'
                  sequence:
                  - service: media_player.volume_set
                    data:
                      volume_level: 0.12
                    target:
                      entity_id:
                      - media_player.owntone_output_anthony_s_desk
                  - service: media_player.volume_set
                    data:
                      volume_level: 0.24
                    target:
                      entity_id:
                      - media_player.owntone_output_anthony_s_nightstand
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: 1
                      milliseconds: 0
              else:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 5
                  milliseconds: 0
              - condition: state
                entity_id: switch.acfanhigh
                state: 'on'
              - service: media_player.volume_set
                continue_on_error: true
                data:
                  volume_level: 0.12
                target:
                  entity_id:
                  - media_player.spotify_anthony221121
              - repeat:
                  count: '3'
                  sequence:
                  - service: media_player.volume_set
                    data:
                      volume_level: 0.12
                    target:
                      entity_id:
                      - media_player.owntone_output_anthony_s_desk
                  - service: media_player.volume_set
                    data:
                      volume_level: 0.24
                    target:
                      entity_id:
                      - media_player.owntone_output_anthony_s_nightstand
                  - delay:
                      hours: 0
                      minutes: 0
                      seconds: 1
                      milliseconds: 0
              alias: increase volume if ac fan high
            else:
            - service: media_player.volume_set
              continue_on_error: true
              data:
                volume_level: 0.13
              target:
                entity_id:
                - media_player.spotify_anthony221121
            - repeat:
                count: '5'
                sequence:
                - service: media_player.volume_set
                  data:
                    volume_level: 0.13
                  target:
                    entity_id:
                    - media_player.owntone_output_anthony_s_desk
                - service: media_player.volume_set
                  data:
                    volume_level: 0.26
                  target:
                    entity_id:
                    - media_player.owntone_output_anthony_s_nightstand
                - delay:
                    hours: 0
                    minutes: 0
                    seconds: 1
                    milliseconds: 0
        else:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
          - condition: state
            entity_id: script.lofi
            state: 'on'
          - condition: or
            conditions:
            - condition: state
              entity_id: input_select.anthony
              state: Away
            - condition: state
              entity_id: input_select.anthony
              state: Just Left
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.lofi
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: lofi
        then:
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_anthony_s_nightstand
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.privacy
        enabled: true
  - if:
    - condition: time
      before: 05:00:00
      after: '22:00:00'
    - condition: state
      entity_id: switch.desktop
      state: 'off'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.usb_hub
    alias: turn off mouse dock
  mode: single
- id: '1645695901319'
  alias: Enable Morning Automation
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    to: unavailable
    id: no alarm
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    from: unavailable
    id: alarm
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.morning_lights_on
    - conditions:
      - condition: trigger
        id: no alarm
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.morning_lights_on
    default: []
  mode: restart
- id: '1652125399924'
  alias: Riana Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.riana
    to: Just Arrived
    for: 00:20:00
    id: Home
  - platform: state
    entity_id:
    - person.riana
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  - platform: state
    entity_id:
    - person.riana
    from: not_home
    to: home
    id: Just Arrived
  - platform: state
    entity_id:
    - person.riana
    from: home
    to: not_home
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Home
        - condition: and
          conditions:
          - condition: state
            entity_id: input_select.riana
            state: Just Arrived
            for:
              hours: 0
              minutes: 20
              seconds: 0
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
          - condition: state
            entity_id: input_select.riana
            state: Just Left
            for:
              hours: 0
              minutes: 10
              seconds: 0
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id:
        - Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id:
        - Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.riana
    default: []
  mode: single
- id: '1656373322370'
  alias: Cool Room
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.anthony_s_room_temperature
      above: 72
    - condition: numeric_state
      entity_id: weather.dark_sky
      above: 68
      attribute: temperature
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - condition: state
    state: Just Arrived
    entity_id: input_select.anthony
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.entry_doors
      from: 'off'
      to: 'on'
    continue_on_timeout: false
    timeout: 00:30:00
    enabled: false
  - data: {}
    target:
      entity_id: switch.ac_boost
    action: switch.turn_on
  - continue_on_error: true
    metadata: {}
    data:
      sleep_stage: current
      duration: 28800
      target: -100
    target:
      device_id: 1807d01837ccf4f85178b48dd72b10f6
    action: eight_sleep.heat_set
  - wait_for_trigger:
    - platform: state
      entity_id:
      - input_select.anthony
      to: Just Left
    continue_on_timeout: false
    timeout: 00:25:00
  - data: {}
    target:
      entity_id: climate.bedroom_ac
    action: climate.turn_off
  - data: {}
    target:
      entity_id: switch.ac_boost
    action: switch.turn_off
  - target:
      device_id: 1807d01837ccf4f85178b48dd72b10f6
    data: {}
    action: eight_sleep.side_off
  mode: single
- id: '1658727301790'
  alias: USB Control
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: state
    entity_id:
    - light.wled
    - light.fan_lights
    - binary_sensor.desktop_power
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - input_select.anthony
    from: home
    to: Just Left
  - platform: state
    entity_id:
    - switch.usb_hub
    from: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 20
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  condition:
  - condition: state
    entity_id: switch.usb_hub
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.desktop_power
      state: 'on'
    - condition: sun
      after: sunrise
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.usb_hub
  mode: queued
- id: '1660977660346'
  alias: Set Temperature
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ac_thermostat_temperature
  - platform: state
    entity_id:
    - switch.ac
    - input_boolean.ac_boost
    to: 'on'
  - platform: state
    entity_id:
    - input_select.anthony
  condition:
  - condition: state
    entity_id: switch.ac
    state: 'on'
  - condition: or
    conditions:
    - condition: template
      value_template: "{% set trigger = 'false' %}\n{% if is_state('input_boolean.ac_boost',
        'on') %} \n  {% set trigger = 'true' %}\n{% elif not is_state('sensor.ac_thermostat_temperature',
        'unknown') \n  and states('sensor.ac_thermostat_temperature') is not none
        %}\n  {% if not is_state_attr('climate.bedroom_ac', \"temperature\", \n  states('sensor.ac_thermostat_temperature')|int(61))
        %} \n    {% set trigger = 'true' %}\n  {% endif %}\n{% endif %}\n{{ trigger
        }}"
    - condition: and
      conditions:
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_select.anthony
        state: Away
    enabled: false
  - condition: template
    value_template: "\n{{ not is_state('sensor.ac_thermostat_temperature', 'unknown')
      \n  and states('sensor.ac_thermostat_temperature') is not none }}\n"
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
      - condition: state
        entity_id: input_select.taylor_presence
        state: Just Arrived
      - condition: state
        entity_id: input_select.taylor_presence
        state: Home
    then:
    - data:
        hvac_mode: cool
        temperature: '{{states(''sensor.ac_thermostat_temperature'') |int(61)}}'
      target:
        entity_id: climate.bedroom_ac
      action: climate.set_temperature
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - if:
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      else:
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
    - data:
        hvac_mode: cool
        temperature: '{{states(''sensor.ac_thermostat_temperature'') |int(61)}}'
      target:
        entity_id: climate.bedroom_ac
      action: climate.set_temperature
    - if:
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'off'
      then:
      - action: climate.set_fan_mode
        target:
          entity_id:
          - climate.bedroom_ac
        data:
          fan_mode: auto
        enabled: true
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
        enabled: true
      - action: climate.set_fan_mode
        target:
          entity_id:
          - climate.bedroom_ac
        data:
          fan_mode: auto
        enabled: true
      else:
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
        action: climate.set_preset_mode
      enabled: true
    else:
    - data: {}
      target:
        entity_id: timer.ac
      action: timer.cancel
    - data: {}
      target:
        entity_id: switch.ac
      action: switch.turn_off
  mode: queued
- id: '1661502555805'
  alias: Nanoleaf Scene Changer and Auto Brightness
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nanoleaf_scene
    - sensor.nanoleaf_auto_brightness
  - platform: event
    event_type: script_started
    context: {}
  - platform: event
    event_type: event_template_reloaded
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  - platform: state
    entity_id:
    - light.shapes_007f
    from: unavailable
    to: 'on'
    id: desk available
  - platform: state
    entity_id:
    - light.shapes_ee82
    from: unavailable
    to: 'on'
    id: vertical available
  - event_type: event_change_nanoleaf
    platform: event
  - platform: state
    entity_id:
    - switch.desktop
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - light.shapes_4948
    - light.shapes_4948_2
    from: unavailable
    to: 'on'
    id: corner available
  - platform: state
    entity_id:
    - binary_sensor.signalrgb_active
    for:
      hours: 0
      minutes: 0
      seconds: 5
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - light.shapes_ee82
    attribute: Effect
    to: '*ExtControl*'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - light.govee
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.signalrgb_active
    for:
      hours: 0
      minutes: 0
      seconds: 10
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.signalrgb_active
    for:
      hours: 0
      minutes: 0
      seconds: 15
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.signalrgb_active
    for:
      hours: 0
      minutes: 0
      seconds: 20
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - script.call
    to: 'on'
  - platform: state
    entity_id:
    - script.call
    to: 'off'
  - platform: state
    entity_id:
    - light.shapes_007f
    attribute: effect
    from: Webcam
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - light.shapes_4948
    attribute: Effect
    to: '*ExtControl*'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - light.shapes_007f
    attribute: Effect
    to: '*ExtControl*'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: script.night
      state: 'on'
  action:
  - if:
    - condition: trigger
      id:
      - reloaded
      - desk available
      - corner available
      - vertical available
    - condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: light.bedroom_lights
          state: 'on'
      - condition: state
        entity_id: switch.light_switch_relay
        state: 'on'
    then:
    - data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
        - light.shapes_4948
        - light.shapes_4948_2
      action: light.turn_off
    - stop: ''
  - condition: state
    entity_id: switch.bedroomtoggle
    state: 'on'
  - parallel:
    - repeat:
        until:
        - condition: template
          value_template: "{{  \n\nis_state('sensor.nanoleaf_auto_brightness', '0')
            \nor\n(\n  (\n    is_state_attr('light.shapes_007f', \"effect\", states('sensor.nanoleaf_scene'))\n
            \ or\n    not is_state('sensor.nanoleaf_scene', 'Webcam') and is_state_attr('light.shapes_007f',
            \"effect\", \"*ExtControl*\")\n  )\n  \n  and\n  (\n    is_state_attr('light.shapes_ee82',
            \"effect\", states('sensor.nanoleaf_scene'))\n    or \n    (\n      is_state_attr('light.shapes_ee82',
            \"effect\", \"*ExtControl*\")\n      and\n      is_state('switch.desktop',
            'on')\n    )\n  )\n  and\n  (\n    is_state_attr('light.shapes_4948',
            \"effect\", states('sensor.nanoleaf_scene'))\n    or \n    (\n      is_state_attr('light.shapes_4948',
            \"effect\", \"*ExtControl*\")\n      and\n      is_state('switch.desktop',
            'on')\n    )\n  )\n)\n}}"
          alias: effect is correct
        sequence:
        - alias: Set effect
          parallel:
          - if:
            - condition: not
              conditions:
              - condition: and
                conditions:
                - condition: state
                  entity_id: light.shapes_ee82
                  attribute: effect
                  state: '*ExtControl*'
                - condition: state
                  entity_id: switch.desktop
                  state: 'on'
              alias: If not controlled by signal
            - condition: not
              conditions:
              - condition: or
                conditions:
                - condition: state
                  entity_id: sensor.nanoleaf_scene
                  state: unavailable
                - condition: state
                  entity_id: sensor.nanoleaf_scene
                  state: unknown
                alias: nanoleaf scene invalid
              alias: Not
            - condition: state
              entity_id: light.shapes_ee82
              state: 'on'
            - condition: not
              conditions:
              - condition: template
                value_template: "{{  \n\nis_state('sensor.nanoleaf_auto_brightness',
                  '0') \nor (\n  (\n    is_state_attr('light.shapes_ee82', \"effect\",
                  states('sensor.nanoleaf_scene'))\n    or \n    (\n      is_state_attr('light.shapes_ee82',
                  \"effect\", \"*ExtControl*\")\n      and\n      is_state('switch.desktop',
                  'on')\n    )\n  )\n)\n}}"
              alias: Effect incorrect
            then:
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_ee82
              data:
                effect: '{{ states(''sensor.nanoleaf_scene'') }}'
              action: light.turn_on
            alias: vertical shapes
          - if:
            - condition: not
              conditions:
              - condition: and
                conditions:
                - condition: state
                  entity_id: light.shapes_4948
                  attribute: effect
                  state: '*ExtControl*'
                - condition: state
                  entity_id: switch.desktop
                  state: 'on'
            - condition: not
              conditions:
              - condition: or
                conditions:
                - condition: state
                  entity_id: sensor.nanoleaf_scene
                  state: unavailable
                - condition: state
                  entity_id: sensor.nanoleaf_scene
                  state: unknown
                alias: nanoleaf scene invalid
              alias: Not
            - condition: state
              entity_id: light.shapes_4948
              state: 'on'
            - condition: not
              conditions:
              - condition: template
                value_template: "{{  \n\nis_state('sensor.nanoleaf_auto_brightness',
                  '0') \nor (\n  (\n    is_state_attr('light.shapes_4948', \"effect\",
                  states('sensor.nanoleaf_scene'))\n    or \n    (\n      is_state_attr('light.shapes_4948',
                  \"effect\", \"*ExtControl*\")\n      and\n      is_state('switch.desktop',
                  'on')\n    )\n  )\n)\n}}"
              alias: Effect incorrect
            then:
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_4948
              data:
                effect: '{{ states(''sensor.nanoleaf_scene'') }}'
              action: light.turn_on
            alias: corner shapes
          - alias: desk shapes
            if:
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'on'
            - condition: not
              conditions:
              - condition: state
                entity_id: light.shapes_007f
                attribute: effect
                state: Webcam
              alias: Effect incorrect
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            then:
            - continue_on_error: true
              data:
                effect: Webcam
              target:
                entity_id: light.shapes_007f
              action: light.turn_on
            else:
            - alias: effect incorrect
              condition: or
              conditions:
              - condition: not
                conditions:
                - condition: template
                  value_template: "{{  \n\nis_state('sensor.nanoleaf_auto_brightness',
                    '0') \nor (\n  (\n    is_state_attr('light.shapes_007f', \"effect\",
                    states('sensor.nanoleaf_scene'))\n  or\n    not is_state('sensor.nanoleaf_scene',
                    'Webcam') and is_state_attr('light.shapes_007f', \"effect\", \"*ExtControl*\")\n
                    \ )\n)\n}}"
              - condition: template
                value_template: '{{ not state_attr(''light.shapes_007f'', ''effect'')
                  is defined and state_attr(''light.shapes_007f'', ''effect'')|length
                  }}'
              - condition: template
                value_template: "{{  \n\nis_state_attr('light.shapes_007f', \"effect\",
                  \"*ExtControl*\") and is_state('binary_sensor.signalrgb_active',
                  'off')\n\n}}"
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_007f
              data:
                effect: '{{ states(''sensor.nanoleaf_scene'') }}'
              action: light.turn_on
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
    - repeat:
        until:
        - condition: template
          value_template: "{{ \n(state_attr('light.shapes_007f', \"brightness\")|int(0)
            - states('sensor.nanoleaf_auto_brightness')|int(0))|abs <= 2 \nand \n(state_attr('light.shapes_ee82',
            \"brightness\")|int(0) - states('sensor.nanoleaf_auto_brightness')|int(0))|abs
            <= 2 \nand\n(state_attr('light.shapes_4948_2', \"brightness\")|int(0)
            - states('sensor.nanoleaf_auto_brightness')|int(0))|abs <= 2 \n}}"
        sequence:
        - alias: set brightness
          parallel:
          - alias: set desk lights brightness
            if:
            - alias: brightness incorrect
              condition: template
              value_template: '{{ (state_attr(''light.shapes_007f'', "brightness")|int(0)
                - states(''sensor.nanoleaf_auto_brightness'')|int(0))|abs >= 2 }}'
            - condition: not
              conditions:
              - condition: state
                entity_id: light.shapes_007f
                state: unavailable
            then:
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_007f
              data:
                brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
              action: light.turn_on
          - alias: set corner lights brightness
            if:
            - alias: brightness incorrect
              condition: template
              value_template: '{{ (state_attr(''light.shapes_4948_2'', "brightness")|int(0)
                - states(''sensor.nanoleaf_auto_brightness'')|int(0))|abs >= 2 }}'
            - condition: not
              conditions:
              - condition: state
                entity_id: light.shapes_4948_2
                state: unavailable
            then:
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_4948_2
              data:
                brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
              action: light.turn_on
          - alias: set vertical lights brightness
            if:
            - alias: brightness incorrect
              condition: template
              value_template: '{{ (state_attr(''light.shapes_ee82'', "brightness")|int(0)
                - states(''sensor.nanoleaf_auto_brightness'')|int(0))|abs >= 2 }}'
            - condition: not
              conditions:
              - condition: state
                entity_id: light.shapes_ee82
                state: unavailable
            then:
            - continue_on_error: true
              target:
                entity_id:
                - light.shapes_ee82
              data:
                brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
              action: light.turn_on
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
    - repeat:
        sequence:
        - alias: set govee scene
          if:
          - condition: template
            value_template: '{{ states(''sensor.nanoleaf_scene'') in state_attr(''input_select.govee_preset'',
              ''options'') }}'
          - condition: not
            conditions:
            - condition: and
              conditions:
              - condition: state
                entity_id: switch.brtv
                state: 'on'
              - condition: or
                conditions:
                - condition: state
                  entity_id: input_select.taylor_presence
                  state: Home
                - condition: state
                  entity_id: input_select.taylor_presence
                  state: Just Arrived
          then:
          - continue_on_error: true
            target:
              entity_id:
              - light.govee
            data:
              effect: '{{ states(''sensor.nanoleaf_scene'') }}'
            action: light.turn_on
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
        until:
        - condition: template
          value_template: '{{ is_state_attr(''light.govee'', ''effect'', states(''sensor.nanoleaf_scene''))
            }}'
          alias: govee effect set
        - condition: or
          conditions:
          - condition: state
            entity_id: light.shapes_4948_2
            state: 'on'
          - condition: state
            entity_id: light.shapes_4948
            state: 'on'
          - condition: state
            entity_id: light.shapes_007f
            state: 'on'
          - condition: state
            entity_id: light.shapes_ee82
            state: 'on'
    - repeat:
        count: 7
        sequence:
        - alias: set govee brightness
          choose:
          - conditions:
            - condition: state
              entity_id: light.fan_lights
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: light.shapes_4948_2
                state: 'on'
              - condition: state
                entity_id: light.shapes_4948
                state: 'on'
              - condition: state
                entity_id: light.shapes_007f
                state: 'on'
              - condition: state
                entity_id: light.shapes_ee82
                state: 'on'
            sequence:
            - target:
                entity_id:
                - light.govee
              data:
                brightness_pct: 100
              action: light.turn_on
          - conditions:
            - condition: or
              conditions:
              - condition: state
                entity_id: cover.bedroom_blinds
                state: open
              - condition: state
                entity_id: cover.bedroom_blinds
                state: opening
            sequence:
            - target:
                entity_id:
                - light.govee
              data:
                brightness_pct: 13
              action: light.turn_on
          - conditions:
            - condition: not
              conditions:
              - condition: and
                conditions:
                - condition: or
                  conditions:
                  - condition: state
                    entity_id: input_select.taylor_presence
                    state: Home
                  - condition: state
                    entity_id: input_select.taylor_presence
                    state: Just Arrived
                - condition: state
                  entity_id: switch.brtv
                  state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: light.shapes_4948_2
                state: 'on'
              - condition: state
                entity_id: light.shapes_4948
                state: 'on'
              - condition: state
                entity_id: light.shapes_007f
                state: 'on'
              - condition: state
                entity_id: light.shapes_ee82
                state: 'on'
            sequence:
            - target:
                entity_id:
                - light.govee
              data:
                brightness: 5
              action: light.turn_on
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
  - action: automation.turn_on
    target:
      entity_id: automation.nanoleaf_automation_reset
    data: {}
  mode: restart
- id: '1661505890362'
  alias: Spotify Refresh
  description: ''
  trigger:
  - platform: event
    event_type: automation_reloaded
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
    to: Home
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    to: paused
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    - media_player.owntone_server
    to: playing
  condition: []
  action:
  - repeat:
      while:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: or
        conditions:
        - condition: state
          entity_id: pyscript.airport_playing
          state: 'True'
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: playing
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: paused
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        enabled: false
      sequence:
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 20
          milliseconds: 0
  mode: single
- id: '1661880635465'
  alias: Suggest Starting Car
  description: ''
  trigger:
  - platform: template
    value_template: "{{ states(\"person.anthony\")|lower in [\"utd\"] and \n\nis_state(\"binary_sensor.workday_sensor\",
      \"on\") and\n\n  ( now().hour == 11 and now().minute == 40 and\n  ( now().weekday()
      in [0, 2, 4]) or\n\n  ( now().hour == 12 and now().minute == 40 and\n  now().weekday()
      in [1, 3]) or\n  \n  ( now().hour == 16 and now().minute == 25 and\n  now().weekday()
      == 3)) \n}}"
  - platform: state
    entity_id:
    - binary_sensor.shower
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      data:
        tag: car
        shortcut:
          name: Start My Car
          ignore_result: ignore
      message: Start car?
  mode: single
- id: '1664505341968'
  alias: Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  condition: []
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.entry_doors
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - parallel:
    - if:
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      then:
      - parallel:
        - if:
          - type: is_temperature
            condition: device
            device_id: a2fc25d35733afab37fd7be1a943cdcf
            entity_id: sensor.home_current_temperature
            domain: sensor
            above: 70
          then:
          - data: {}
            target:
              entity_id: switch.living_room_fan
            action: switch.turn_on
          enabled: true
        - data: {}
          target:
            entity_id: lock.back_door
          action: lock.unlock
        - data: {}
          target:
            entity_id: script.lofi
          action: script.turn_on
    - if:
      - condition: sun
        before: sunrise
        after: sunset
        after_offset: -00:45:00
      then:
      - if:
        - condition: state
          entity_id: light.kitchen_lights
          state: 'off'
        then:
        - data:
            brightness_pct: 18
          target:
            entity_id:
            - light.kitchen_lights
          action: light.turn_on
        alias: Kitchen Lights
      - if:
        - condition: state
          entity_id: light.hallway_lights
          state: 'off'
        then:
        - data:
            brightness_pct: 22
          target:
            entity_id:
            - light.hallway_lights
          action: light.turn_on
        alias: Hallway Lights
      alias: Turn on Lights
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.taylor_presence
          state: Home
        - condition: state
          entity_id: input_select.taylor_presence
          state: Just Arrived
      then:
      - data: {}
        target:
          entity_id: input_boolean.privacy
        action: input_boolean.turn_on
    - target:
        entity_id: button.home_clear_hold
      data: {}
      enabled: false
      action: button.press
  mode: single
- id: '1665076615181'
  alias: Dog Food Reminder
  description: ''
  trigger:
  - platform: time
    at: '10:30:00'
    id: Breakfast
  - platform: time
    at: '18:00:00'
    id: Dinner
  - platform: time
    at: 03:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    id: Feeding
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    from: 'on'
    to: 'off'
    id: Feeding2
  - platform: time
    at: '16:30:00'
    alias: Dinner Time
    id: DinnerTime
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    id: arrived
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Breakfast
      - condition: state
        entity_id: input_boolean.breakfast
        state: 'off'
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        then:
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't eaten breakfast yet
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't eaten breakfast yet
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: Dinner
      - condition: state
        entity_id: input_boolean.dinner
        state: 'off'
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        then:
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't eaten dinner yet
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't eaten dinner yet
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.breakfast
          - input_boolean.dinner
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Feeding
        - condition: trigger
          id: Feeding2
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 00:00:01
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.breakfast
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.breakfast
            else:
            - service: notify.anthonys_devices
              data:
                message: Lola already ate breakfast
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
        - conditions:
          - condition: time
            before: '23:59:59'
            after: '14:30:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.dinner
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.dinner
            else:
            - service: notify.anthonys_devices
              data:
                message: Lola already ate dinner
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-food
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-food
    - conditions:
      - condition: trigger
        id: DinnerTime
      - condition: state
        entity_id: input_boolean.dinner
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.anthonys_devices
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: arrived
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.dinner
            state: 'off'
          - condition: time
            after: '16:30:00'
          alias: Hasn't eaten dinner
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.breakfast
            state: 'off'
          - condition: time
            after: 08:00:00
            before: '15:00:00'
          alias: Hasn't eaten breakfast
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.entry_doors
          to: 'on'
        timeout:
          hours: 0
          minutes: 3
          seconds: 0
          milliseconds: 0
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.dinner
            state: 'off'
          - condition: time
            after: '16:30:00'
          alias: Hasn't eaten dinner
        then:
        - service: notify.anthonys_devices
          data:
            message: clear_notification
            data:
              tag: dog-food
        - service: notify.anthonys_devices
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.breakfast
            state: 'off'
          - condition: time
            after: 08:00:00
            before: '15:00:00'
          alias: Hasn't eaten breakfast
        - service: notify.anthonys_devices
          data:
            message: clear_notification
            data:
              tag: dog-food
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: It's time to feed Lola breakfast
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
  mode: parallel
  max: 10
- id: '1665170199807'
  alias: Privacy
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /2
  - platform: state
    entity_id:
    - input_boolean.privacy
    id: change state
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'on'
      - condition: state
        entity_id: switch.living_room_port_2_poe
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.living_room_port_2_poe
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      - condition: state
        entity_id: switch.living_room_port_2_poe
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.living_room_port_2_poe
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
  mode: single
- id: '1665186115040'
  alias: Dog Medicine Reminder
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
    id: Morning
  - platform: time
    at: '22:00:00'
    id: Night
  - platform: time
    at: 03:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.shock
    id: GivingPill
  - platform: state
    entity_id:
    - input_boolean.morning_medicine
    to: 'on'
    for:
      hours: 12
      minutes: 0
      seconds: 0
    alias: night medicine reminder
    id: night medicine reminder
  - platform: time
    at: 00:00:00
    id: midnight
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Morning
      - condition: state
        entity_id: input_boolean.morning_medicine
        state: 'off'
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        then:
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
    - conditions:
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: Night
        - condition: trigger
          id: midnight
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        then:
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.morning_medicine
          - input_boolean.night_medicine
    - conditions:
      - condition: trigger
        id: GivingPill
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 06:00:00
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.morning_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.morning_medicine
            - service: input_datetime.set_datetime
              data:
                datetime: '{{ now() }}'
              target:
                entity_id: input_datetime.morning_medicine_given
            else: []
        - conditions:
          - condition: or
            conditions:
            - condition: template
              value_template: "{% set default_time = \"00:00:00\" %}  \n{% set time_difference_threshold
                = 9 %}\n\n{% set morning_medicine_given = states('input_datetime.morning_medicine_given')
                %}\n{% set morning_medicine_time = morning_medicine_given.split('
                ')[-1] if morning_medicine_given != 'unknown' and morning_medicine_given
                != 'none' else default_time %}\n\n{% set current_time = now().strftime('%H:%M:%S')
                %}\n\n{% set given_time = morning_medicine_time.split(':') %}\n{%
                set current_time_split = current_time.split(':') %}\n\n{% set given_hour
                = given_time[0] | int %}\n{% set given_minute = given_time[1] | int
                %}\n{% set given_second = given_time[2] | int %}\n\n{% set current_hour
                = current_time_split[0] | int %}\n{% set current_minute = current_time_split[1]
                | int %}\n{% set current_second = current_time_split[2] | int %}\n\n{%
                set delta_hours = current_hour - given_hour %}\n{% set delta_minutes
                = current_minute - given_minute %}\n{% set delta_seconds = current_second
                - given_second %}\n\n{% set total_hours_passed = delta_hours + delta_minutes
                / 60 + delta_seconds / 3600 %}\n\n{% if total_hours_passed >= time_difference_threshold
                %}\n  true\n{% else %}\n  false\n{% endif %}"
            - condition: time
              before: 02:30:00
              after: '19:45:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.night_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.night_medicine
            else: []
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-medicine
    - conditions:
      - condition: trigger
        id: night medicine reminder
      - condition: time
        before: '21:15:00'
        after: 00:00:00
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      sequence:
      - service: notify.anthonys_devices
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.home_alone
          state: 'on'
        then:
        - service: notify.anthonys_devices
          data:
            message: It's time to give Lola her medicine
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - service: notify.anthonys_devices
          data:
            message: It's time to give Lola her medicine
            data:
              tag: dog-medicine
  mode: single
- id: '1665630167045'
  alias: Turn on home lights at night
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
    id: sunset
  - platform: sun
    event: sunrise
    offset: '+45'
    alias: Sunrise
    id: Sunrise
  - platform: sun
    event: sunset
    offset: -01:15:00
    id: living room
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.riana
      state: Home
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
    - condition: numeric_state
      entity_id: zone.home
      above: 0
    - condition: state
      entity_id: input_select.taylor_presence
      state: Home
    - condition: state
      entity_id: input_select.taylor_presence
      state: Just Arrived
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - if:
        - condition: state
          entity_id: light.kitchen_lights
          state: 'off'
        then:
        - data:
            brightness_pct: 40
          target:
            entity_id:
            - light.kitchen_lights
          action: light.turn_on
        alias: Kitchen Lights
      - if:
        - condition: state
          entity_id: light.hallway_lights
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
        then:
        - data:
            brightness_pct: 22
          target:
            entity_id:
            - light.hallway_lights
          action: light.turn_on
        alias: Hallway Lights
    - conditions:
      - condition: trigger
        id: Sunrise
      - condition: state
        entity_id: weather.dark_sky
        state: sunny
      sequence:
      - data: {}
        target:
          entity_id:
          - light.kitchen_lights
          - light.hallway_lights
        action: light.turn_off
  mode: single
- id: '1665630463210'
  alias: 'Only one home automations '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.living_room_lights
    - switch.living_room_fan
    - input_boolean.morning_medicine
    - input_boolean.night_medicine
    - input_boolean.breakfast
    - input_boolean.dinner
    - binary_sensor.back_door
    - binary_sensor.laundry_room_motion
    - binary_sensor.kitchen
    - binary_sensor.entry_doors
    - binary_sensor.dining_room_occupancy
    - binary_sensor.master_hall_motion
    - binary_sensor.lumi_lumi_motion_ac02_motion
    - binary_sensor.lumi_lumi_motion_ac02_motion_5
    to: 'on'
    from: 'off'
    id: leftroom2
  - platform: state
    entity_id:
    - lock.front_door
    - binary_sensor.back_door
    to: unlocked
    id: leftroom3
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion_detection
    - binary_sensor.bed_occupancy
    - binary_sensor.lumi_lumi_motion_ac02_motion_4
    - binary_sensor.bedroom_chair
    to: 'on'
    id: enteredroom
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.home_alone
      state: 'on'
    - condition: and
      conditions:
      - condition: state
        entity_id: zone.home
        state: '2'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: state
        entity_id: person.taylor
        state: home
  - condition: state
    entity_id: input_boolean.showering
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 45
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.ac
          state: 'on'
        - condition: state
          entity_id: input_boolean.bedmotion
          state: 'on'
        - condition: and
          conditions:
          - condition: state
            entity_id: media_player.kitchen_speakers
            state: 'off'
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
            enabled: false
          - condition: state
            entity_id: media_player.owntone_server
            state: playing
      - condition: not
        conditions:
        - condition: state
          entity_id: switch.desktop
          state: 'on'
        - condition: state
          entity_id: input_boolean.ac_boost
          state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
        - condition: state
          entity_id: input_select.taylor_presence
          state: Home
        - condition: state
          entity_id: input_select.taylor_presence
          state: Just Arrived
      - condition: trigger
        id:
        - leftroom2
        - leftroom3
        - left room 4
      sequence:
      - if:
        - condition: state
          entity_id: switch.ac
          state: 'on'
        - condition: not
          conditions:
          - condition: state
            entity_id: person.taylor
            state: home
        then:
        - data: {}
          target:
            entity_id: switch.ac
          action: switch.turn_off
        - data: {}
          target:
            entity_id: timer.ac
          action: timer.cancel
        - data: {}
          target:
            entity_id: input_boolean.ac_boost
          action: input_boolean.turn_off
        alias: AC
      - if:
        - condition: state
          entity_id: input_boolean.bedmotion
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: input_boolean.bedmotion
          action: input_boolean.turn_off
        alias: Turn off Motion Bypass
      - alias: Turn on Kitchen HomePods
        if:
        - condition: state
          entity_id: media_player.kitchen_speakers
          state: 'off'
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: playing
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: lofi
          enabled: false
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        then:
        - repeat:
            count: '20'
            sequence:
            - data: {}
              target:
                entity_id:
                - media_player.kitchen_speakers
                - media_player.owntone_output_kitchen_left
                - media_player.owntone_output_kitchen_right
              action: media_player.turn_on
            - delay:
                hours: 0
                minutes: 0
                seconds: 2
                milliseconds: 0
            - data:
                volume_level: 0.35
              target:
                entity_id:
                - media_player.kitchen_speakers
                - media_player.owntone_output_kitchen_left
                - media_player.owntone_output_kitchen_right
              action: media_player.volume_set
            - delay:
                hours: 0
                minutes: 0
                seconds: 2
                milliseconds: 0
    - conditions:
      - condition: trigger
        id: enteredroom
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.kitchen_speakers
          state: playing
        - condition: state
          entity_id: media_player.owntone_output_kitchen_left
          state: playing
        - condition: state
          entity_id: media_player.owntone_output_kitchen_right
          state: playing
        - condition: state
          entity_id: switch.ac
          state: 'off'
      - condition: not
        conditions:
        - condition: state
          entity_id: person.taylor
          state: home
      sequence:
      - parallel:
        - data: {}
          target:
            entity_id:
            - media_player.kitchen_speakers
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_kitchen_left
          action: media_player.turn_off
        - if:
          - condition: or
            conditions:
            - condition: numeric_state
              entity_id: sensor.bedroom_temperature
              above: 68
            - condition: numeric_state
              entity_id: climate.bedroom_ac
              above: 68
              attribute: current_temperature
            - condition: numeric_state
              entity_id: sensor.bedroom_humidity
              above: 55
            alias: Hot
          - condition: numeric_state
            entity_id: climate.home
            attribute: current_temperature
            above: 70
          then:
          - data: {}
            target:
              entity_id:
              - switch.ac
            action: switch.turn_on
          else: []
  mode: restart
- id: '1665996041801'
  alias: Katchy
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.katchy
    else:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Left
      - condition: state
        entity_id: input_select.anthony
        state: Away
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.katchy
  mode: single
- id: '1666368810191'
  alias: Exhaust Fan
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.exhaust
    id: done
    alias: When timer finishes
  - platform: state
    entity_id:
    - input_boolean.showering
    from: 'off'
    to: 'on'
    alias: When shower is turned on
    id: showerstart
  - platform: homeassistant
    event: start
    id: restart
  - platform: event
    event_type: automation_reloaded
    alias: reload
    id: reload
  - platform: template
    value_template: "{% if states.switch.exhaust_fan.last_changed is defined %}\n
      \ {% if as_timestamp(states.switch.exhaust_fan.last_changed)|timestamp_local
      is defined %}\n    {{ is_state('switch.exhaust_fan', 'on') and is_state('light.bathroom_lights',
      'on') and\n       as_timestamp(states.switch.exhaust_fan.last_changed) > as_timestamp(now())
      - (3600) }}\n  {%endif%}\n{%endif%}"
    alias: turn off
    id: turn off
    enabled: false
  - platform: device
    type: turned_off
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: lights turned off
  - platform: device
    type: turned_on
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: turned on
  - platform: device
    type: turned_off
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: turned off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: device
        type: is_on
        device_id: c63a794911c38d9e98cbf969b2bc471b
        entity_id: switch.exhaust_fan
        domain: switch
      - condition: device
        type: is_off
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: or
        conditions:
        - condition: trigger
          id: lights turned off
        - condition: trigger
          id: turned on
      - condition: or
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: timer.exhaust
            state: active
          alias: Timer not active
        - condition: template
          value_template: '{{ is_state(''input_boolean.bathroom_occupied'', ''off'')
            and

            (now() - states.input_boolean.bathroom_occupied.last_changed).total_seconds()
            < 5 }}'
          alias: Bathroom Occupied was on prior to light turning off
      sequence:
      - service: timer.start
        data:
          duration: 00:15:00
        target:
          entity_id: timer.exhaust
    - conditions:
      - condition: trigger
        id: done
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - condition: not
        conditions:
        - condition: state
          entity_id: timer.exhaust
          state: active
        - condition: state
          entity_id: input_boolean.showering
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'off'
        - condition: state
          entity_id: input_boolean.bathroom_occupied
          state: 'on'
        alias: Confirm fan is off, shower is off, timer is off
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
    - conditions:
      - condition: trigger
        id: showerstart
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.exhaust_fan
      - if:
        - condition: numeric_state
          entity_id: sensor.bedroom_temperature
          above: 72
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.ac_boost
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: restart
        - condition: trigger
          id: reload
        alias: restart/reload
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.showering
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'on'
        alias: shower / fan on
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.showering
          state: 'on'
        then:
        - service: timer.cancel
          data: {}
          target:
            entity_id: timer.exhaust
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.exhaust_fan
        else:
        - condition: state
          entity_id: input_boolean.showering
          state: 'off'
        - condition: state
          entity_id: timer.exhaust
          state: idle
        - condition: device
          type: is_off
          device_id: 3c08610e07933d66eb5347257aae98aa
          entity_id: light.bathroom_lights
          domain: light
        - service: timer.start
          data: {}
          target:
            entity_id: timer.exhaust
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: turn off
        - condition: trigger
          id: turned off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
  mode: queued
  max: 10
- id: '1666480822238'
  alias: Laundry Room Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'on'
    to: 'off'
    alias: cleared
    id: cleared
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'off'
    to: 'on'
    alias: detected
    id: detected
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.laundry_room_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - switch.laundry_room_light
    from: 'on'
    to: 'off'
    alias: manually turned off
    id: manually turned off
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'off'
    to: 'on'
    id: door opened
    alias: door opened
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'on'
    to: 'off'
    alias: door closed
    id: door closed
  - device_id: 646618a4497e6564b3f03617283d2a35
    domain: zha
    platform: device
    type: Leave
    subtype: sensor
    id: fp1 leave
  - device_id: 646618a4497e6564b3f03617283d2a35
    domain: zha
    platform: device
    type: Enter
    subtype: sensor
    id: fp1 enter
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: detected
        - condition: and
          conditions:
          - condition: trigger
            id: fp1 enter
          - condition: state
            entity_id: binary_sensor.laundry_room_door
            state: 'on'
        - condition: and
          conditions:
          - condition: trigger
            id: door opened
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 6
        alias: door opened or motion detected
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'on'
          alias: if light off
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.laundry_room_light
        else:
        - service: timer.start
          data:
            duration: 00:02:00
          target:
            entity_id: timer.laundry_room_light
    - conditions:
      - condition: state
        entity_id: switch.laundry_room_light
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: cleared
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: reload
            - condition: trigger
              id: startup
          - condition: state
            entity_id: timer.laundry_room_light
            state: idle
        alias: no motion or home assistant/automations reloaded
      sequence:
      - service: timer.start
        data:
          duration: 00:02:00
        target:
          entity_id: timer.laundry_room_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: fp1 leave
        - condition: and
          conditions:
          - condition: trigger
            id: door closed
          - condition: state
            entity_id: binary_sensor.laundry_room_occupancy
            state: 'off'
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 7
        - condition: trigger
          id: manually turned off
        - condition: and
          conditions:
          - condition: trigger
            id: timer finished
          - condition: not
            conditions:
            - condition: state
              entity_id: switch.laundry_room_light
              state: 'off'
            - condition: state
              entity_id: binary_sensor.laundry_room_motion
              state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.laundry_room_light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.laundry_room_light
  mode: queued
  max: 10
- id: '1666594099613'
  alias: Ping Z-Wave Devices
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.katchy
    to: unavailable
  condition:
  - alias: Any device unavailable
    condition: or
    conditions:
    - condition: state
      entity_id: switch.katchy
      state: unavailable
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: switch.katchy
            state: unavailable
          alias: Any device unavailable
        alias: Until all devices available
      sequence:
      - parallel:
        - if:
          - condition: state
            entity_id: switch.katchy
            state: unavailable
          then:
          - data: {}
            target:
              entity_id:
              - button.node_22_ping
            action: button.press
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
  mode: queued
  max: 10
- id: '1666852312966'
  alias: Frigate
  description: ''
  trigger:
  - platform: mqtt
    topic: frigate/events
    payload: new
    value_template: '{{ value_json.type }}'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      message: A {{trigger.payload_json["after"]["label"]}} was detected.
      data:
        image: https://maioranihome.duckdns.org/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
        tag: '{{trigger.payload_json["after"]["id"]}}'
        when: '{{trigger.payload_json["after"]["start_time"]|int}}'
        entity_id: camera.{{trigger.payload_json["after"]["camera"]}}
    enabled: false
  - if:
    - condition: state
      entity_id: input_boolean.alexa_notification_sent
      for:
        hours: 0
        minutes: 1
        seconds: 0
      state: 'on'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''porch''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_front_porch
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.entry_doors
            state: 'on'
          - condition: state
            entity_id: input_boolean.alexa_notification_sent
            state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
          - condition: state
            entity_id: input_select.anthony
            state: Home
        - condition: time
          after: '10:00:00'
          before: '23:00:00'
        - condition: state
          entity_id: binary_sensor.entry_doors
          state: 'off'
          for:
            hours: 0
            minutes: 1
            seconds: 0
        enabled: false
      - service: notify.alexa_media_anthony_s_echo_show
        data:
          message: Someone is at the front door
          data:
            type: tts
        enabled: false
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.alexa_notification_sent
        enabled: false
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''backyard''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''garage''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_garage
  mode: parallel
  max: 10
- id: '1666891695746'
  alias: Camera Triggers
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'off'
    to: 'on'
    id: back door opened
    alias: back door opened
  - platform: state
    entity_id:
    - binary_sensor.front_door
    from: 'off'
    to: 'on'
    id: front door opened
    alias: front door opened
  - platform: state
    entity_id:
    - lock.front_door
    from: 'on'
    to: 'off'
    id: front door closed
    alias: front door closed
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'on'
    to: 'off'
    alias: back door closed
    id: back door closed
  - platform: state
    entity_id:
    - cover.garage_door
    alias: garage door opening
    id: garage door opening
    from: closed
    to: opening
  - platform: state
    entity_id:
    - cover.garage_door
    from: open
    to: closing
    id: garage door closing
  - platform: state
    entity_id:
    - binary_sensor.mailbox_door
    id: mailbox open
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.mailbox_door
    id: mailbox close
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.morning_medicine
    - input_boolean.night_medicine
    to: 'on'
    id: dog
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - front door opened
        - front door closed
      sequence:
      - parallel:
        - service: blueiris.trigger_camera
          data: {}
          target:
            entity_id:
            - camera.elitedesk_front_porch
          alias: record front porch
        - if:
          - condition: state
            entity_id: binary_sensor.entry_doors
            state: 'on'
          then:
          - service: automation.turn_off
            data: {}
            target:
              entity_id: automation.porch_notification
          - delay:
              hours: 0
              minutes: 0
              seconds: 6
              milliseconds: 0
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.porch_notification
          enabled: false
        - if:
          - condition: state
            entity_id: input_boolean.privacy
            state: 'off'
          then:
          - service: blueiris.trigger_camera
            data: {}
            target:
              entity_id: camera.elitedesk_front_porch
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: back door opened
        - condition: trigger
          id: back door closed
        alias: When back door opened or closed
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
          - camera.elitedesk_living_room
        alias: record living room and backyard
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: garage door opening
        - condition: trigger
          id: garage door closing
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_garage
    - conditions:
      - condition: trigger
        id:
        - mailbox open
        - mailbox close
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_front_porch
    - conditions:
      - condition: trigger
        id:
        - dog
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_living_room
  mode: parallel
  max: 10
- id: '1666922643665'
  alias: Mail Notification
  description: ''
  trigger:
  - platform: template
    value_template: "{% set trigger = 'false' %}\n{% if now().hour|float(0) > 16 %}\n
      \ {% if state_attr('automation.mail_notification', \n      'last_triggered')
      is not none %} \n    {% if states('sensor.mail_usps_mail') is not none %}\n
      \     {% if states('sensor.mail_usps_mail')|int(0) > 0 %}\n        {% if now().strftime(\"%j\")|int(0)
      > \n        as_local(state_attr('automation.mail_notification', \n        'last_triggered')).strftime(\"%j\")|int(0)
      %}\n          {% if states('input_select.anthony') in ['Home', \n          'Just
      Arrived'] %} {% set trigger = 'true' %}\n          {% elif distance(states.device_tracker.iphone)
      is not none %}\n            {% if distance(states.device_tracker.iphone) < 1.5
      %}\n              {% set trigger = 'true' %}\n            {% endif %}\n          {%
      endif %}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif
      %}\n{% endif %}\n{{ trigger }}"
    id: send notification
  - platform: time
    at: '23:59:00'
    alias: reset
    id: reset
  - platform: state
    entity_id:
    - binary_sensor.mailbox_door
    from: 'off'
    to: 'on'
    id: mailbox opened
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - mailbox opened
        - send notification
      - condition: state
        entity_id: input_boolean.mail_checked
        state: 'off'
      - condition: state
        entity_id: input_boolean.mail_delivered
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: mail
      - if:
        - condition: not
          conditions:
          - condition: or
            conditions:
            - condition: numeric_state
              entity_id: sensor.mail_usps_mail
              above: 0
            - condition: numeric_state
              entity_id: sensor.mail_usps_packages
              above: 0
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id:
            - input_boolean.mail_delivered
            - input_boolean.mail_checked
        - stop: ''
        alias: Stop if 0
      - if:
        - condition: or
          conditions:
          - condition: numeric_state
            entity_id: sensor.home_anthony_distance
            below: 600
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        then:
        - service: notify.mobile_app_iphone
          data:
            message: '{{ states(''sensor.mail_usps_mail'') }} {% if states(''sensor.mail_usps_mail'')|float(0)
              == 1 %}piece{%else%}pieces{%endif%} of mail {% if states(''sensor.mail_usps_mail'')|float(0)
              == 1 %}was{%else%}were{%endif%} delivered.'
            data:
              entity_id: camera.mail_usps_camera
              tag: mail
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.mail_delivered
    - conditions:
      - condition: trigger
        id:
        - reset
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: mail
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.mail_checked
          - input_boolean.mail_delivered
    - conditions:
      - condition: trigger
        id:
        - mailbox opened
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.mail_delivered
          state: 'on'
          for:
            hours: 0
            minutes: 6
            seconds: 0
        - condition: state
          entity_id: input_select.riana
          state: Just Arrived
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        - condition: state
          entity_id: binary_sensor.entry_doors
          state: 'on'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: mail
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.mail_checked
  mode: single
- id: '1667193576124'
  alias: Alarm Reminder
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
    id: night
  - platform: state
    id: alarmset
    entity_id:
    - sensor.anthony_s_echo_show_next_alarm
    from:
    - unavailable
    - unknown
  condition: []
  action:
  - if:
    - condition: state
      entity_id: media_player.anthony_s_echo_show
      state: unavailable
    then:
    - service: homeassistant.reload_config_entry
      target:
        entity_id: media_player.anthony_s_echo_show
      data: {}
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.anthony_s_echo_show_next_alarm
          state: unavailable
        - condition: state
          entity_id: sensor.anthony_s_echo_show_next_alarm
          state: unknown
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: trigger
        id: night
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.home_anthony_distance
          below: 600
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Check Alexa App
          title: Morning alarm not set
          data:
            tag: alarm
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
            actions:
            - action: Open Alexa App
              title: Open Alexa App
    - conditions:
      - condition: trigger
        id: alarmset
      sequence:
      - repeat:
          count: '5'
          sequence:
          - service: notify.mobile_app_iphone
            data:
              message: clear_notification
              data:
                tag: alarm
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
  mode: single
- id: '1668535366974'
  alias: Connected to Car
  description: ''
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: home assistant started
        - condition: trigger
          id: reload
        enabled: false
      sequence:
      - condition: state
        entity_id: input_boolean.weather_notification_sent
        state: 'off'
        enabled: false
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Away
        - condition: state
          entity_id: input_select.anthony
          state: Just Left
        enabled: false
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.weather_notification_sent
        enabled: false
    - conditions:
      - condition: trigger
        id: reset
        enabled: false
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.weather_notification_sent
        enabled: false
    default:
    - if:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
      then:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.stop_music
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      then:
      - parallel:
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.back_door_wake
            - button.front_door_wake
        - service: notify.mobile_app_iphone
          data:
            message: clear_notification
            data:
              tag: car-reminder
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 500
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      - condition: template
        value_template: '{{ not is_state(''person.riana'', ''home'')

          and not is_state(''person.dana'', ''home'')

          and states(''zone.home'')|int < 2

          }}'
      - service: notify.mobile_app_iphone
        data:
          message: '{% if is_state(''binary_sensor.front_door'', ''on'') or is_state(''lock.front_door'',
            ''unlocked'') %}The front door is unlocked.{% endif %}{% if is_state(''binary_sensor.back_door'',
            ''on'') or is_state(''lock.back_door'', ''unlocked'') %}The back door
            is unlocked.{% endif %} {% if state_attr(''weather.dark_sky'', ''temperature'')
            is defined %}{% if state_attr(''weather.dark_sky'', ''temperature'')|float(48)
            < 48 %}It is {{state_attr(''weather.dark_sky'', ''temperature'')}}°.{%
            endif %}{% endif %}'
          data:
            tag: car-reminder
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.weather_notification_sent
      enabled: false
    enabled: false
  - parallel:
    - if:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
      then:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.stop_music
    - service: button.press
      data: {}
      target:
        entity_id: button.tare
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door_z_wave
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      then:
      - parallel:
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.back_door_wake
            - button.front_door_wake
        - service: notify.mobile_app_iphone
          data:
            message: clear_notification
            data:
              tag: car-reminder
        - service: homeassistant.update_entity
          data: {}
          target:
            entity_id:
            - lock.back_door
            - lock.front_door
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id:
          - lock.back_door
          - lock.front_door
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 500
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      - condition: template
        value_template: '{{ not is_state(''person.riana'', ''home'')

          and not is_state(''person.dana'', ''home'')

          and states(''zone.home'')|int < 2 and is_state(''input_boolean.guest'',
          ''off'')}}'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        - condition: state
          entity_id: input_select.anthony
          state: Home
      - service: notify.mobile_app_iphone
        data:
          message: '{% if is_state(''binary_sensor.front_door'', ''on'') or is_state(''lock.front_door'',
            ''unlocked'') %}The front door is unlocked.{% endif %}{% if is_state(''binary_sensor.back_door'',
            ''on'') or is_state(''lock.back_door_z_wave'', ''unlocked'') %}The back
            door is unlocked.{% endif %} {% if state_attr(''weather.dark_sky'', ''temperature'')
            is defined %}{% if state_attr(''weather.dark_sky'', ''temperature'')|float(48)
            < 48 %}It is {{state_attr(''weather.dark_sky'', ''temperature'')}}°.{%
            endif %}{% endif %}'
          data:
            tag: car-reminder
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - service: notify.mobile_app_iphone
      data:
        message: request_location_update
  - alias: Set Spotify Output to iPhone
    repeat:
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: iPhone
      sequence:
      - if:
        - condition: template
          value_template: '{{ "iPhone" not in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        then:
        - service: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - service: media_player.select_source
        continue_on_error: true
        data:
          source: iPhone
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: iPhone
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
  - alias: Play music
    choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: iPhone
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: media_playlist
        state: lofi
      sequence:
      - service: media_player.play_media
        continue_on_error: true
        data:
          media_content_type: playlist
          media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
          enqueue: play
        target:
          entity_id: media_player.spotify_anthony221121
    - conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: media_playlist
        state: Music
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: iPhone
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: playing
        alias: Not playing
      sequence:
      - repeat:
          sequence:
          - service: media_player.media_play
            entity_id: media_player.spotify_anthony221121
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          until:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
            for:
              hours: 0
              minutes: 0
              seconds: 6
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.spotify_anthony221121
    alias: Turn on repeat all
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: notify.mobile_app_iphone
    data:
      message: clear_notification
      data:
        tag: car-reminder
  mode: restart
- id: '1668564599073'
  alias: Reboot Soundbar AirPort
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.owntone_server
  - platform: state
    entity_id:
    - media_player.owntone_output_soundbar
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: and
    conditions:
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.owntone_server
        state: unavailable
    - condition: state
      entity_id: media_player.owntone_output_soundbar
      state: unavailable
      for:
        hours: 0
        minutes: 0
        seconds: 5
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.soundbar_airport
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.soundbar_airport
  - if:
    - condition: not
      conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'on'
          - condition: template
            value_template: "{{ as_local(state_attr('script.lofi', \n        'last_triggered'))
              > now() - timedelta( minutes = 1 ) \nor as_local(state_attr('script.test',
              \n        'last_triggered')) > now() - timedelta( minutes = 1 )\n}}"
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          - condition: state
            entity_id: media_player.kitchen_speakers
            state: 'on'
      alias: If not currently playing
    then:
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - stop: ''
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.owntone_output_soundbar
      from: unavailable
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1668917163074'
  alias: Turn off lights at night
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    before: 04:00:00
    after: '23:55:00'
  - condition: state
    entity_id: light.kitchen_lights
    state: 'on'
  - condition: state
    entity_id: binary_sensor.kitchen_2
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  - condition: state
    entity_id: binary_sensor.master_hall_motion
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  - condition: state
    entity_id: binary_sensor.laundry_room_motion
    state: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - condition: state
    entity_id: binary_sensor.lumi_lumi_motion_ac02_iaszone
    state: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - condition: state
    entity_id: binary_sensor.kitchen
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  action:
  - data: {}
    target:
      entity_id:
      - light.kitchen_lights
    action: light.turn_off
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.living_room_fan
  mode: single
- id: '1668919603349'
  alias: Bathroom / Shower Music & Automations
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: light turned on
  - platform: device
    type: changed_states
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: fan on
  - platform: device
    type: turned_off
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: lights turned off
  - platform: state
    entity_id:
    - input_boolean.showering
    from: 'off'
    to: 'on'
    id: showering on
  - platform: state
    entity_id:
    - input_boolean.showering
    from: 'on'
    to: 'off'
    id: showering off
  - platform: state
    entity_id:
    - media_player.owntone_server
    from: 'off'
    to: playing
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  - condition: not
    conditions:
    - condition: state
      entity_id: input_boolean.guest
      state: 'on'
    - condition: state
      entity_id: binary_sensor.bedroom_chair
      state: 'on'
      enabled: false
    - condition: state
      entity_id: binary_sensor.bed_occupancy
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
      - condition: or
        conditions:
        - condition: state
          state: 'off'
          entity_id: binary_sensor.bed_occupancy
        - condition: and
          conditions:
          - condition: state
            entity_id: zone.home
            state: '2'
          - condition: or
            conditions:
            - condition: state
              entity_id: input_select.anthony
              state: Home
            - condition: state
              entity_id: input_select.anthony
              state: Just Arrived
          - condition: state
            entity_id: person.taylor
            state: home
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: device
        type: is_on
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
      sequence:
      - if:
        - condition: state
          entity_id: media_player.owntone_output_bathroom
          state: 'off'
        then:
        - repeat:
            until:
            - condition: state
              entity_id: media_player.owntone_output_bathroom
              state: 'on'
              for:
                hours: 0
                minutes: 0
                seconds: 3
            sequence:
            - data: {}
              target:
                entity_id: media_player.owntone_output_bathroom
              action: media_player.turn_on
            - wait_for_trigger:
              - platform: state
                entity_id:
                - media_player.owntone_output_bathroom
                to: 'on'
              timeout:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
          alias: Turn on HomePod
        alias: Turn on homepod
      - repeat:
          count: '5'
          sequence:
          - data:
              volume_level: '{% if states(''input_boolean.showering'') is defined
                and is_state(''input_boolean.showering'', ''on'') %} {% set vol =
                0.55 %} {% elif states(''switch.exhaust_fan'') is defined and is_state(''switch.exhaust_fan'',
                ''on'') %} {% set vol = 0.5 %} {% elif state_attr(''media_player.owntone_output_anthony_s_nightstand'',
                ''volume_level'') is defined and state_attr(''media_player.owntone_output_anthony_s_nightstand'',
                ''volume_level'') is not none %}  {% set vol =  state_attr(''media_player.owntone_output_anthony_s_nightstand'',
                ''volume_level'') %}  {% else %} {% set vol = 0.11 %} {% endif %}
                {{ vol }}

                '
            target:
              entity_id:
              - media_player.owntone_output_bathroom
            action: media_player.volume_set
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
        alias: Set volume
      - if:
        - condition: trigger
          id: showering on
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_desk
            state: 'on'
        then:
        - parallel:
          - data: {}
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
              - media_player.owntone_output_master_bedroom_tv
              - media_player.owntone_output_anthony_s_nightstand
              - media_player.owntone_output_kitchen_left
              - media_player.owntone_output_kitchen_right
            action: media_player.turn_off
          - if:
            - condition: not
              conditions:
              - condition: state
                entity_id: media_player.spotify_anthony221121
                attribute: media_playlist
                state: Music
            then:
            - data:
                media_content_type: playlist
                media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
                enqueue: play
              target:
                entity_id: media_player.spotify_anthony221121
              action: media_player.play_media
          - repeat:
              count: '5'
              sequence:
              - data:
                  volume_level: 0.6
                target:
                  entity_id:
                  - media_player.spotify_anthony221121
                  - media_player.owntone_output_bathroom
                action: media_player.volume_set
              - data: {}
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_desk
                  - media_player.owntone_output_anthony_s_nightstand
                  - media_player.kitchen_speakers
                action: media_player.turn_off
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
        else:
        - condition: trigger
          id: showering off
        - condition: device
          type: is_off
          device_id: 3c08610e07933d66eb5347257aae98aa
          entity_id: light.bathroom_lights
          domain: light
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
        - data:
            volume_level: 0.2
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.volume_set
        - parallel:
          - if:
            - condition: or
              conditions:
              - condition: numeric_state
                entity_id: sensor.bedroom_temperature
                above: 68
              - condition: numeric_state
                entity_id: climate.bedroom_ac
                above: 68
                attribute: current_temperature
              - condition: numeric_state
                entity_id: sensor.bedroom_humidity
                above: 55
              alias: Hot
            - condition: state
              entity_id: binary_sensor.bedroom_door
              state: 'off'
            then:
            - data: {}
              target:
                entity_id:
                - switch.ac_boost
              action: switch.turn_on
          - data: {}
            target:
              entity_id: script.morning
            action: script.turn_on
          - data: {}
            target:
              entity_id: input_boolean.bedmotion
            action: input_boolean.turn_on
          - repeat:
              count: '5'
              sequence:
              - data: {}
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_nightstand
                  - media_player.owntone_output_anthony_s_desk
                action: media_player.turn_on
              - data:
                  volume_level: 0.2
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_desk
                action: media_player.volume_set
              - data:
                  volume_level: 0.4
                target:
                  entity_id:
                  - media_player.owntone_output_anthony_s_nightstand
                action: media_player.volume_set
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
              - data: {}
                target:
                  entity_id: light.bathroom_lights
                action: light.turn_off
              - data: {}
                target:
                  entity_id:
                  - media_player.kitchen_speakers
                action: media_player.turn_off
          - action: eight_sleep.heat_set
            metadata: {}
            data:
              sleep_stage: current
              target: -100
              duration: 28800
            target:
              device_id: 1807d01837ccf4f85178b48dd72b10f6
    - conditions:
      - condition: device
        type: is_off
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: trigger
        id: lights turned off
      sequence:
      - parallel:
        - if:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'on'
          then:
          - data:
              volume_level: 0.11
            target:
              entity_id: media_player.owntone_output_bathroom
            action: media_player.volume_set
          - data: {}
            target:
              entity_id: media_player.owntone_output_bathroom
            action: media_player.turn_off
          alias: Turn off homepod
        - alias: Turn other speakers on if leaving shower
          if:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: Home Assistant
          - condition: or
            conditions:
            - condition: state
              entity_id: media_player.owntone_output_anthony_s_nightstand
              state: 'off'
            - condition: state
              entity_id: media_player.owntone_output_anthony_s_desk
              state: 'off'
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: Music
          - condition: device
            type: is_on
            device_id: c63a794911c38d9e98cbf969b2bc471b
            entity_id: switch.exhaust_fan
            domain: switch
          then:
          - data:
              volume_level: 0.25
            target:
              entity_id: media_player.spotify_anthony221121
            action: media_player.volume_set
          - parallel:
            - if:
              - condition: or
                conditions:
                - condition: numeric_state
                  entity_id: sensor.bedroom_temperature
                  above: 68
                - condition: numeric_state
                  entity_id: climate.bedroom_ac
                  above: 68
                  attribute: current_temperature
                - condition: numeric_state
                  entity_id: sensor.bedroom_humidity
                  above: 55
                alias: Hot
              then:
              - data: {}
                target:
                  entity_id:
                  - switch.ac_boost
                action: switch.turn_on
              else:
              - data:
                  duration: 00:10:00
                target:
                  entity_id: timer.ac
                action: timer.start
            - data: {}
              target:
                entity_id: script.morning
              action: script.turn_on
            - data: {}
              target:
                entity_id: input_boolean.bedmotion
              action: input_boolean.turn_on
            - repeat:
                count: '5'
                sequence:
                - data: {}
                  target:
                    entity_id:
                    - media_player.owntone_output_anthony_s_nightstand
                    - media_player.owntone_output_anthony_s_desk
                  action: media_player.turn_on
                - data:
                    volume_level: 0.25
                  target:
                    entity_id:
                    - media_player.owntone_output_anthony_s_desk
                  action: media_player.volume_set
                - data:
                    volume_level: 0.5
                  target:
                    entity_id:
                    - media_player.owntone_output_anthony_s_nightstand
                  action: media_player.volume_set
                - delay:
                    hours: 0
                    minutes: 0
                    seconds: 1
                    milliseconds: 0
                - data: {}
                  target:
                    entity_id: input_boolean.bedmotion
                  action: input_boolean.turn_on
                - data: {}
                  target:
                    entity_id: cover.bedroom_blinds
                  action: cover.close_cover
    - conditions:
      - condition: trigger
        id: showering on
      - condition: or
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: Music
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - data: {}
        target:
          entity_id: script.play_music
        action: script.turn_on
      - data: {}
        target:
          entity_id: switch.light_switch_relay
        action: switch.turn_on
  mode: queued
  max: 100
- id: '1668919655434'
  alias: Bathroom Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    alias: door opened
    id: door opened
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    to: 'off'
    from: 'on'
    id: door closed
    alias: door closed
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - input_boolean.showering
    to: 'on'
    id: shower started
    alias: shower started
  - device_id: e016de0f5a668458b727b4b8e2d4db6c
    domain: zha
    platform: device
    type: Enter
    subtype: sensor
    alias: occupancy detected
    id: fp1 enter
  - device_id: e016de0f5a668458b727b4b8e2d4db6c
    domain: zha
    platform: device
    type: Leave
    subtype: sensor
    id: occupancy clear
    alias: occupancy clear
  - platform: state
    entity_id:
    - light.bathroom_lights
    from: 'on'
    to: 'off'
    alias: lights turned off
    id: lights turned off
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    from: 'off'
    id: motion detected
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'off'
    from: 'on'
    id: motion clear
    for:
      hours: 0
      minutes: 1
      seconds: 30
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - input_boolean.bathroom_occupied
    to: 'on'
    from: 'off'
    id: occupied_boolean
  - platform: state
    entity_id:
    - binary_sensor.bathroom_aqara_motion
    - binary_sensor.lumi_lumi_motion_ac02_motion_3
    from: 'off'
    to: 'on'
    id: motion2
  - platform: state
    entity_id:
    - binary_sensor.bathroom_aqara_motion
    - binary_sensor.lumi_lumi_motion_ac02_motion_3
    from: 'on'
    to: 'off'
    id: motion clear2
    for:
      hours: 0
      minutes: 1
      seconds: 30
  - platform: state
    entity_id:
    - input_boolean.showering
    to: 'off'
    from: 'on'
    id: showering off
  - platform: state
    entity_id:
    - light.bathroom_lights
    from: 'off'
    to: 'on'
    id: lights on
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - lights on
        alias: light turned on manually
      - condition: numeric_state
        entity_id: light.bathroom_lights
        attribute: brightness
        below: 255
        alias: light is dimmed
      - condition: sun
        before: sunset
        after: sunrise
        alias: not dark outside
        after_offset: +00:25:00
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.bathroom_lights
        alias: set to max brightness
    - conditions:
      - condition: trigger
        id: occupied_boolean
      sequence:
      - if:
        - condition: device
          type: is_off
          device_id: 3c08610e07933d66eb5347257aae98aa
          entity_id: light.bathroom_lights
          domain: light
        then:
        - type: turn_on
          device_id: 3c08610e07933d66eb5347257aae98aa
          entity_id: light.bathroom_lights
          domain: light
          brightness_pct: 100
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: shower started
        - condition: and
          conditions:
          - condition: state
            entity_id: light.bathroom_lights
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 7
          - condition: trigger
            id: door opened
          alias: door open
        - condition: and
          conditions:
          - condition: trigger
            id: fp1 enter
          - condition: not
            conditions:
            - condition: state
              entity_id: switch.exhaust_fan
              state: 'on'
          alias: fp1
        - condition: and
          conditions:
          - condition: trigger
            id: motion detected
          - condition: state
            entity_id: light.bathroom_lights
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 4
        - condition: trigger
          id: motion2
        alias: Presence Detected
      - condition: state
        entity_id: light.bathroom_lights
        state: 'off'
      sequence:
      - choose:
        - conditions:
          - condition: sun
            before: sunrise
            alias: Dark Outside
            after: sunset
            before_offset: +00:25:00
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: or
            conditions:
            - condition: state
              entity_id: person.taylor
              state: home
            - condition: not
              conditions:
              - condition: state
                entity_id: binary_sensor.bed_occupancy
                state: 'on'
              alias: probably anthony
          - condition: not
            conditions:
            - alias: Fan Lights are off
              condition: state
              entity_id: light.fan_lights
              state: 'on'
          - condition: not
            conditions:
            - alias: Fan Lights are off
              condition: state
              entity_id: light.dana_s_fan_lights
              state: 'on'
          sequence:
          - type: turn_on
            device_id: 3c08610e07933d66eb5347257aae98aa
            entity_id: light.bathroom_lights
            domain: light
            brightness_pct: 1
            enabled: true
        default:
        - type: turn_on
          device_id: 3c08610e07933d66eb5347257aae98aa
          entity_id: light.bathroom_lights
          domain: light
          brightness_pct: 100
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: occupancy clear
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_occupancy
            state: 'off'
          - condition: or
            conditions:
            - condition: trigger
              id: shower stopped
            - condition: trigger
              id: reload
            - condition: trigger
              id: startup
            - condition: and
              conditions:
              - condition: trigger
                id: door closed
              - condition: state
                entity_id: light.bathroom_lights
                state: 'on'
                for:
                  hours: 0
                  minutes: 0
                  seconds: 20
              - condition: state
                entity_id: binary_sensor.bathroom_multi_sensor_motion
                state: 'off'
            - condition: trigger
              id: motion clear
          - condition: state
            entity_id: input_boolean.bathroom_occupied
            state: 'off'
        - condition: trigger
          id: timer finished
      - condition: device
        type: is_on
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      sequence:
      - type: turn_off
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: trigger
        id: lights turned off
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 8
          milliseconds: 0
      - condition: device
        type: is_off
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'off'
      - service: button.press
        data: {}
        target:
          entity_id: button.bathroom_presence_status_reset
    - conditions:
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'on'
        - condition: state
          entity_id: climate.home
          state: fan
          attribute: hvac_action
        - condition: state
          entity_id: climate.home
          state: cooling
          attribute: hvac_action
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_occupancy
            state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: motion clear
        - condition: trigger
          id: door opened
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reload
          - condition: state
            entity_id: timer.bathroom_light
            state: idle
        - condition: trigger
          id: motion clear2
        - condition: trigger
          id:
          - showering off
      - condition: state
        entity_id: binary_sensor.bathroom_multi_sensor_motion
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bathroom_aqara_motion
        state: 'off'
      - condition: state
        entity_id: binary_sensor.lumi_lumi_motion_ac02_motion_3
        state: 'off'
      sequence:
      - service: timer.start
        data:
          duration: 00:01:30
        target:
          entity_id: timer.bathroom_light
  mode: restart
- id: '1670729021317'
  alias: Christmas Lights
  description: Sync with Kitchen Lights
  trigger:
  - platform: state
    entity_id:
    - light.kitchen_lights
  - platform: state
    entity_id:
    - switch.christmas_lights
    - light.christmas_lights
    from: unavailable
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
    id: reload
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.kitchen_lights
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.christmas_lights
          state: 'off'
        - condition: state
          entity_id: light.christmas_lights
          state: 'off'
      sequence:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.christmas_lights
        - service: light.turn_on
          target:
            entity_id: light.christmas_lights
          data: {}
    - conditions:
      - condition: state
        entity_id: light.kitchen_lights
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.christmas_lights
          state: 'on'
        - condition: state
          entity_id: switch.christmas_lights
          state: 'on'
      sequence:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.christmas_lights
        - service: light.turn_off
          target:
            entity_id: light.christmas_lights
          data: {}
  mode: single
- id: '1670745513720'
  alias: Hallway Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_motion_ac02_motion
    - binary_sensor.lumi_lumi_motion_ac02_iaszone
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: clear
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    from: 'off'
    to: 'on'
    id: bed door
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    id: bath door
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_motion_ac02_iaszone
    - binary_sensor.lumi_lumi_motion_ac02_motion
    to: 'on'
    from: 'off'
    id: motion
  - platform: state
    entity_id:
    - automation.hallway_lights_off
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: 5mins
  - platform: homeassistant
    event: start
    id: start
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    from: 'on'
    to: 'off'
    id: out of bed
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  condition: []
  action:
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: or
        conditions:
        - condition: trigger
          id: 5mins
        - condition: trigger
          id: clear
        - condition: trigger
          id: start
        - condition: trigger
          id: reloaded
      - condition: state
        entity_id: light.hallway_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lumi_lumi_motion_ac02_iaszone
        state: 'off'
      - condition: state
        entity_id: binary_sensor.lumi_lumi_motion_ac02_motion
        state: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.hallway_lights
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: motion
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: bed door
            - condition: trigger
              id: bath door
          - condition: state
            entity_id: binary_sensor.bedroom_on
            state: 'on'
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: binary_sensor.lumi_lumi_motion_ac02_motion
              state: 'on'
            - condition: state
              entity_id: binary_sensor.lumi_lumi_motion_ac02_iaszone
              state: 'on'
          - condition: trigger
            id: out of bed
          - condition: state
            entity_id: binary_sensor.bedroom_door
            state: 'on'
        alias: door opened
      - condition: state
        entity_id: light.hallway_lights
        state: 'off'
      - condition: or
        conditions:
        - condition: sun
          after: sunset
          after_offset: -01:00:00
          before: sunrise
        - condition: numeric_state
          entity_id: sensor.pirateweather_cloud_coverage
          above: 0.9
        alias: dark
        enabled: false
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.desktop
          state: 'on'
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        enabled: false
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
        - condition: and
          conditions:
          - condition: state
            entity_id: person.taylor
            state: home
          - condition: or
            conditions:
            - condition: state
              entity_id: light.bedroom_lights
              state: 'on'
            - condition: sun
              before: sunset
              after: sunrise
      - condition: not
        conditions:
        - condition: time
          after: '23:15:00'
          before: 06:00:00
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 22
        target:
          entity_id:
          - light.hallway_lights
  mode: single
- id: '1670799817434'
  alias: Riana Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.riana
    to: Just Arrived
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.owntone_output_master_bedroom_tv
        state: 'on'
      - condition: state
        entity_id: media_player.kitchen_speakers
        state: 'on'
    then:
    - service: media_player.turn_off
      data: {}
      target:
        entity_id:
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_master_bedroom_tv
        - media_player.kitchen_speakers
        - media_player.owntone_output_soundbar
  - if:
    - condition: device
      type: is_off
      device_id: aa29287a53774cb599c5658e30e48d9d
      entity_id: light.kitchen_lights
      domain: light
    - condition: sun
      after: sunset
      after_offset: -00:25:00
    then:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - cover.garage_door
      - platform: state
        entity_id:
        - lock.front_door
      continue_on_timeout: false
      timeout: 00:30:00
    - type: turn_on
      device_id: aa29287a53774cb599c5658e30e48d9d
      entity_id: light.kitchen_lights
      domain: light
      brightness_pct: 18
  mode: single
- id: '1670894312639'
  alias: Notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.toggle
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
  - condition: not
    conditions:
    - condition: state
      entity_id: cover.garage_door
      state: open
    - condition: state
      entity_id: cover.garage_door
      state: opening
  action:
  - service: notify.anthonys_devices
    data:
      message: Notification
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.6
  mode: single
- id: '1671419998725'
  alias: Bedroom Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: df24bd878efc1f29899ba74213c4b124
      auto_mode: parallel
      top_on:
      - action: script.turn_on
        data: {}
        target:
          entity_id: script.morning
      - action: button.press
        data: {}
        target:
          entity_id: button.desktop_pc_satellite_white
      - action: switch.turn_on
        data: {}
        target:
          entity_id: switch.usb_hub
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: Home Assistant
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: media_player.spotify_anthony221121
          action: homeassistant.reload_config_entry
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - condition: template
          value_template: '{{ not is_state_attr(''media_player.spotify_anthony221121'',
            ''source'', ''DESKTOP-PC'') and "DESKTOP-PC" in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        - data:
            source: DESKTOP-PC
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.select_source
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - if:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
          then:
          - data:
              media_content_type: playlist
              media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
              enqueue: play
            target:
              entity_id: media_player.spotify_anthony221121
            action: media_player.play_media
          alias: if playing lofi, switch to music
        - data:
            volume_level: 0.3
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.volume_set
        - data:
            shuffle: true
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.shuffle_set
        alias: Move music to Desktop
      down_lower:
      - action: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
      - action: button.press
        data: {}
        target:
          entity_id: button.desktop_pc_satellite_off
      - action: switch.turn_on
        data: {}
        target:
          entity_id: switch.usb_hub
      - alias: Move music to Desktop
        if:
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: Home Assistant
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        then:
        - action: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - condition: template
          value_template: '{{ not is_state_attr(''media_player.spotify_anthony221121'',
            ''source'', ''DESKTOP-PC'') and "DESKTOP-PC" in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        - action: media_player.select_source
          data:
            source: DESKTOP-PC
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - alias: if playing lofi, switch to music
          if:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
          then:
          - action: media_player.play_media
            data:
              media_content_type: playlist
              media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
              enqueue: play
            target:
              entity_id: media_player.spotify_anthony221121
        - action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.spotify_anthony221121
        - action: media_player.shuffle_set
          data:
            shuffle: true
          target:
            entity_id: media_player.spotify_anthony221121
      - action: cover.close_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.bedroom_blinds
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: lofi
        then:
        - action: media_player.volume_set
          target:
            entity_id: media_player.spotify_anthony221121
          data:
            volume_level: 0
      bottom_off:
      - action: script.turn_on
        data: {}
        target:
          entity_id: script.color_loop
      - action: button.press
        data: {}
        target:
          entity_id: button.desktop_pc_satellite_color
      - action: switch.turn_on
        data: {}
        target:
          entity_id: switch.usb_hub
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: Home Assistant
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: media_player.spotify_anthony221121
          action: homeassistant.reload_config_entry
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - condition: template
          value_template: '{{ not is_state_attr(''media_player.spotify_anthony221121'',
            ''source'', ''DESKTOP-PC'') and "DESKTOP-PC" in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        - data:
            source: DESKTOP-PC
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.select_source
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - if:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
          then:
          - data:
              media_content_type: playlist
              media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
              enqueue: play
            target:
              entity_id: media_player.spotify_anthony221121
            action: media_player.play_media
          alias: if playing lofi, switch to music
        - data:
            volume_level: 0.3
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.volume_set
        - data:
            shuffle: true
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.shuffle_set
        alias: Move music to Desktop
      up_raise:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.ac
            state: 'off'
          sequence:
          - data: {}
            target:
              entity_id: switch.ac
            action: switch.turn_on
        - conditions:
          - condition: state
            entity_id: switch.ac
            state: 'on'
          - condition: state
            entity_id: switch.ac_boost
            state: 'on'
          sequence:
          - data: {}
            target:
              entity_id: switch.ac_boost
            action: switch.turn_off
        - conditions:
          - condition: state
            entity_id: switch.ac
            state: 'on'
          - condition: state
            entity_id: switch.ac_boost
            state: 'off'
          sequence:
          - wait_for_trigger:
            - platform: device
              device_id: df24bd878efc1f29899ba74213c4b124
              domain: lutron_caseta
              type: release
              subtype: raise
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: 800
          - if:
            - condition: template
              value_template: '{{ wait.trigger is none }}'
              alias: If button hold
            then:
            - data: {}
              target:
                entity_id: switch.ac_boost
              action: switch.turn_on
            else:
            - data: {}
              target:
                entity_id: switch.ac
              action: switch.turn_off
      - action: switch.turn_on
        data: {}
        target:
          entity_id: switch.usb_hub
      top_on_release: []
      up_raise_release:
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: DESKTOP-PC
        - condition: state
          entity_id: switch.desktop
          state: 'on'
        then:
        - continue_on_error: true
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
          action: media_player.media_pause
        - data: {}
          target:
            entity_id:
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_soundbar
          action: media_player.turn_off
      - action: switch.toggle
        data: {}
        target:
          entity_id: switch.desktop
- id: '1671430225021'
  alias: Dana's Pedestal Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: c51c176058dad4748b6065d54c93bec5
      auto_mode: restart
      top_on:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
        - if:
          - condition: or
            conditions:
            - condition: or
              conditions:
              - condition: state
                entity_id: input_select.anthony
                state: Just Left
              - condition: state
                entity_id: input_select.anthony
                state: Extended Away
              - condition: state
                entity_id: input_select.anthony
                state: Away
            - condition: state
              entity_id: device_tracker.dana
              state: home
          - condition: state
            entity_id: input_boolean.guest
            state: 'off'
          then:
          - service: light.turn_on
            data:
              effect: None
              xy_color:
              - 0.455
              - 0.374
            target:
              entity_id:
              - light.dana_s_fan_lights
          else:
          - service: light.turn_on
            data:
              rgb_color:
              - 255
              - 0
              - 255
              brightness_pct: 100
            target:
              entity_id:
              - light.dana_s_fan_lights
            enabled: true
          enabled: false
        - service: light.turn_on
          data:
            effect: None
            xy_color:
            - 0.455
            - 0.374
          target:
            entity_id:
            - light.dana_s_fan_lights
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
          enabled: false
      down_lower:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_south_color_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_west_color_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_color_ropes
              - switch.dana_s_west_color_rope
              - switch.dana_s_south_color_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_south_color_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_west_color_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_color_ropes
              - switch.dana_s_west_color_rope
              - switch.dana_s_south_color_rope
        enabled: false
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        enabled: false
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_soundbar
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.dana_s_fan_lights
          data: {}
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.dana_s_south_color_rope
      bottom_off:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.dana_s_fan_lights
          data: {}
          enabled: true
      up_raise:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        enabled: false
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_soundbar
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
            - light.dana_s_fan_lights
          data: {}
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.dana_s_south_color_rope
        enabled: false
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
          enabled: false
        - service: light.turn_off
          target:
            entity_id:
            - light.wyze_bulb_4
            - light.wyze_bulb_5
            - light.wyze_bulb_6
            - light.wyze_bulb_7
          data: {}
        - service: light.turn_on
          target:
            entity_id:
            - light.smart_bulb_3
          data: {}
      top_on_release: []
      up_raise_release: []
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_south_color_rope
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.danas_32_tcl_roku_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
        - service: light.turn_on
          data:
            rgb_color:
            - 255
            - 0
            - 255
            brightness_pct: 100
          target:
            entity_id:
            - light.dana_s_fan_lights
          enabled: true
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
          enabled: false
      bottom_off_release: []
      mode_max: 15
- id: '1671606640908'
  alias: Bathroom Occupancy Override
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    to: 'on'
    from: 'off'
    id: 'off'
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: homeassistant
    event: start
    id: start
  - platform: state
    entity_id:
    - light.bathroom_lights
    to: 'off'
    from: 'on'
    id: lights turned off
  - platform: state
    entity_id:
    - light.bathroom_lights
    to: 'on'
    from: 'off'
    id: wave
  - platform: device
    type: turned_on
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: turned on
    enabled: false
  - platform: state
    entity_id:
    - input_boolean.showering
    to: 'on'
    from: 'off'
    id: showering
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    from: 'off'
    id: other wave
  - platform: state
    entity_id:
    - binary_sensor.bathroom_aqara_motion
    - binary_sensor.lumi_lumi_motion_ac02_motion_3
    from: 'off'
    to: 'on'
    id: motion2
  - platform: state
    entity_id:
    - input_boolean.bathroom_occupied
    to: 'on'
    for:
      hours: 0
      minutes: 50
      seconds: 0
    id: 2hrs
  - platform: state
    entity_id: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bathroom_door
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 4
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'off'
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_door
            state: 'off'
            for:
              hours: 0
              minutes: 1
              seconds: 0
          - condition: or
            conditions:
            - condition: trigger
              id: wave
            - condition: trigger
              id: other wave
        - condition: trigger
          id: 'on'
        - condition: trigger
          id: turned on
        - condition: trigger
          id: showering
        - condition: trigger
          id: motion2
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_occupied
    - conditions:
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: 'off'
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: reload
            - condition: trigger
              id: start
          - condition: state
            entity_id: light.bathroom_lights
            state: 'off'
        - condition: trigger
          id: lights turned off
        - condition: and
          conditions:
          - condition: trigger
            id: 2hrs
          - condition: state
            entity_id: binary_sensor.bathroom_aqara_motion
            state: 'off'
          - condition: state
            entity_id: binary_sensor.bathroom_multi_sensor_motion
            state: 'off'
          - condition: state
            entity_id: input_boolean.showering
            state: 'off'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_occupied
  mode: queued
  max: 10
- id: '1672543042441'
  alias: Bathroom Exhaust Pico
  description: ''
  trigger:
  - platform: device
    device_id: f7083fcff763724ef4d397a51acc5cf9
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: 'on'
  - platform: device
    device_id: f7083fcff763724ef4d397a51acc5cf9
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - if:
        - condition: state
          entity_id: light.bathroom_lights
          state: 'off'
        then:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.bathroom_lights
      - if:
        - condition: state
          entity_id: input_boolean.bathroom_occupied
          state: 'off'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.bathroom_occupied
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
          - condition: state
            entity_id: input_select.anthony
            state: Home
        then:
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.lofi
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
  mode: queued
  max: 10
- id: '1673433463589'
  alias: Night Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closet opened
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    from: 'off'
    to: 'on'
    id: bed entered
  - type: opened
    platform: device
    device_id: 40b6acb50076a1f15ff0e73120d2f04e
    entity_id: binary_sensor.bedroom_door
    domain: binary_sensor
    id: door opened
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion_detection
    from: 'off'
    to: 'on'
    id: closet motion
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - condition: state
    entity_id: script.morning
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: closet opened
        - condition: trigger
          id: door opened
        - condition: trigger
          id: closet motion
      - condition: state
        entity_id: binary_sensor.bedroom_on
        state: 'off'
      - condition: sun
        after: sunset
        before: sunrise
      - condition: not
        conditions:
        - condition: state
          entity_id: script.morning
          state: 'on'
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
          transition: 2
          brightness_pct: 18
        target:
          entity_id: light.bed_lights
      - wait_for_trigger:
        - platform: state
          entity_id:
          - light.light_switch
          from: 'off'
          to: 'on'
        timeout:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.light_switch
          - light.light_switch_corner
    - conditions:
      - condition: trigger
        id: bed entered
      - condition: template
        value_template: "{{ \n   is_state('switch.bedroomtoggle', 'off') and \n   is_state('light.bed_lights',
          'on') and \n   is_state_attr('light.bed_lights', 'effect', 'None') and\n
          \  is_state_attr('light.bed_lights', 'rgb_color', (255, 255, 255)) and\n
          \  is_state_attr('light.bed_lights', 'brightness', 46)\n}}"
        alias: night light
      sequence:
      - type: turn_off
        device_id: e88ef9e31b97cb86c917bfd035861b2f
        entity_id: light.bed_lights
        domain: light
        enabled: true
  mode: single
- id: '1677100682580'
  alias: Auto-update
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.anthony
    to:
    - utd
    - raytheon
    - taylor_s_home
    - collin_frisco
  - platform: state
    entity_id:
    - input_select.anthony
    to: Away
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: update.alarm_firmware
      state: 'on'
    - condition: state
      entity_id: update.bed_esp_firmware
      state: 'on'
    - condition: state
      entity_id: update.kauf_rgbsw_63e843_firmware
      state: 'on'
    - condition: state
      entity_id: update.midea_firmware
      state: 'on'
    - condition: state
      entity_id: update.usbswitch_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb1_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb2_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb3_firmware
      state: 'on'
    - condition: state
      entity_id: update.z_wave_js_to_mqtt_update
      state: 'on'
    - condition: state
      entity_id: update.esphome_update
      state: 'on'
    - condition: state
      entity_id: update.studio_code_server_update
      state: 'on'
    - condition: state
      entity_id: update.home_assistant_supervisor_update
      state: 'on'
    - condition: state
      entity_id: update.home_assistant_operating_system_update
      state: 'on'
    - condition: state
      entity_id: update.hacs_update
      state: 'on'
    - condition: state
      entity_id: update.blueiris_nvr_update
      state: 'on'
    - condition: state
      entity_id: update.generic_hygrostat_update
      state: 'on'
    - condition: state
      entity_id: update.pyscript_update
      state: 'on'
    - condition: state
      entity_id: update.mail_and_packages_update
      state: 'on'
    - condition: state
      entity_id: update.alexa_media_player_update
      state: 'on'
    - condition: state
      entity_id: update.pirate_weather_update
      state: 'on'
    - condition: state
      entity_id: update.dronemobile_update
      state: 'on'
    - condition: state
      entity_id: update.nest_protect_update
      state: 'on'
    - condition: state
      entity_id: update.hisense_tv_update
      state: 'on'
    - condition: state
      entity_id: update.home_assistant_google_drive_backup_update
      state: 'on'
    - condition: state
      entity_id: update.homepod_connect_dev_update
      state: 'on'
    - condition: state
      entity_id: update.mosquitto_broker_update
      state: 'on'
    - condition: state
      entity_id: update.network_ups_tools_update
      state: 'on'
    - condition: state
      entity_id: update.rtl_433_mqtt_auto_discovery_update
      state: 'on'
    - condition: state
      entity_id: update.rtl_433_update
      state: 'on'
    - condition: state
      entity_id: update.samba_share_update
      state: 'on'
    - condition: state
      entity_id: update.terminal_ssh_update
      state: 'on'
    - condition: state
      entity_id: update.vaultwarden_bitwarden_update
      state: 'on'
    - condition: state
      entity_id: update.bkplug1_firmware
      state: 'on'
    - condition: state
      entity_id: update.bkplug3_firmware
      state: 'on'
    - condition: state
      entity_id: update.bkplug4_firmware
      state: 'on'
    - condition: state
      entity_id: update.roundplug2_firmware
      state: 'on'
    - condition: state
      entity_id: update.roundplug1_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb4_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb5_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb7_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb6_firmware
      state: 'on'
    - condition: state
      entity_id: update.home_assistant_core_update
      state: 'on'
    - condition: state
      entity_id: update.kiosk_mode_update
      state: 'on'
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.taylor_presence
      state: Home
    - condition: state
      entity_id: input_select.taylor_presence
      state: Just Arrived
  action:
  - data: {}
    target:
      entity_id: switch.light_switch_relay
    action: switch.turn_on
  - parallel:
    - if:
      - condition: state
        entity_id: update.z_wave_js_to_mqtt_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.z_wave_js_to_mqtt_update
        action: update.install
      enabled: true
    - if:
      - condition: state
        entity_id: update.esphome_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.esphome_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.studio_code_server_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.studio_code_server_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.card_mod_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.card_mod_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.ios_themes_dark_mode_and_light_mode_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.ios_themes_dark_mode_and_light_mode_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.mini_graph_card_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.mini_graph_card_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.fold_entity_row_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.fold_entity_row_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.button_card_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.button_card_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.mini_media_player_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.mini_media_player_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.timer_bar_card_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.timer_bar_card_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.home_assistant_google_drive_backup_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.home_assistant_google_drive_backup_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.homepod_connect_dev_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.homepod_connect_dev_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.mosquitto_broker_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.mosquitto_broker_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.network_ups_tools_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.network_ups_tools_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.rtl_433_mqtt_auto_discovery_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.rtl_433_mqtt_auto_discovery_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.rtl_433_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.rtl_433_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.samba_share_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.samba_share_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.terminal_ssh_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.terminal_ssh_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.vaultwarden_bitwarden_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.vaultwarden_bitwarden_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.kiosk_mode_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.kiosk_mode_update
        action: update.install
    - if:
      - condition: state
        entity_id: update.battery_state_card_entity_row_update
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.battery_state_card_entity_row_update
        action: update.install
    alias: addon/hass updates
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - alias: esphome updates
    parallel:
    - if:
      - condition: state
        entity_id: update.alarm_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.alarm_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.bed_esp_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.bed_esp_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.kauf_rgbsw_63e843_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.kauf_rgbsw_63e843_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.midea_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.midea_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.usbswitch_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.usbswitch_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.wyzebulb1_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb1_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.wyzebulb2_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb2_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.wyzebulb3_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb3_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.wyzebulb4_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb4_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.wyzebulb5_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb5_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.wyzebulb6_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.wyzebulb6_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.wyzebulb7_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.wyzebulb7_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        state: 'on'
        entity_id: update.guest_bedroom_tv_plug_firmware
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.guest_bedroom_tv_plug_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.wyzebulb7_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.wyzebulb7_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.ethrelay1_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.ethrelay1_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.ethrelay2_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.ethrelay2_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.ethrelay3_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.ethrelay3_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.athombulb3_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id: update.athombulb3_firmware
        action: update.install
      enabled: false
    - if:
      - condition: state
        entity_id: update.ethblaster_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.ethblaster_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.lamp1_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.lamp1_firmware
        action: update.install
    - if:
      - condition: state
        entity_id: update.lamp2_firmware
        state: 'on'
      then:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - update.lamp2_firmware
        action: update.install
  - if:
    - condition: not
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: person.anthony
          state: home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        - condition: state
          entity_id: input_select.anthony
          state: Home
    then:
    - data: {}
      target:
        entity_id: button.tare
      action: button.press
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - data: {}
      action: script.night
    - if:
      - condition: state
        entity_id: update.home_assistant_supervisor_update
        state: 'on'
      then:
      - data: {}
        target:
          entity_id: update.home_assistant_supervisor_update
        action: update.install
    alias: tare and turn off bedroom
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: update.hacs_update
        state: 'on'
      - condition: state
        entity_id: update.blueiris_nvr_update
        state: 'on'
      - condition: state
        entity_id: update.generic_hygrostat_update
        state: 'on'
      - condition: state
        entity_id: update.pyscript_update
        state: 'on'
      - condition: state
        entity_id: update.mail_and_packages_update
        state: 'on'
      - condition: state
        entity_id: update.alexa_media_player_update
        state: 'on'
      - condition: state
        entity_id: update.pirate_weather_update
        state: 'on'
      - condition: state
        entity_id: update.dronemobile_update
        state: 'on'
      - condition: state
        entity_id: update.nest_protect_update
        state: 'on'
      - condition: state
        entity_id: update.hisense_tv_update
        state: 'on'
    then:
    - parallel:
      - if:
        - condition: state
          entity_id: update.hacs_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.hacs_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.blueiris_nvr_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.blueiris_nvr_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.generic_hygrostat_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.generic_hygrostat_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.pyscript_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.pyscript_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.mail_and_packages_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.mail_and_packages_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.alexa_media_player_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: update.alexa_media_player_update
          action: update.install
        enabled: false
      - if:
        - condition: state
          entity_id: update.pirate_weather_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.pirate_weather_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.dronemobile_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.dronemobile_update
          action: update.install
      - if:
        - condition: state
          entity_id: update.nest_protect_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.nest_protect_update
          action: update.install
        enabled: false
      - if:
        - condition: state
          entity_id: update.hisense_tv_update
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - update.hisense_tv_update
          action: update.install
    - condition: not
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        - condition: state
          entity_id: input_select.anthony
          state: Home
    - data: {}
      action: homeassistant.restart
  - if:
    - condition: state
      entity_id: update.home_assistant_operating_system_update
      state: 'on'
    then:
    - data: {}
      target:
        entity_id: update.home_assistant_operating_system_update
      action: update.install
    enabled: true
  - if:
    - condition: state
      entity_id: update.home_assistant_core_update
      state: 'on'
    then:
    - data: {}
      target:
        entity_id:
        - update.home_assistant_core_update
      action: update.install
    enabled: true
  mode: single
- id: '1678008305202'
  alias: Start music after shutting down computer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.desktop
    from: 'on'
    to: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: playing
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.anthony
      state: Home
  action:
  - service: script.lofi
    data: {}
  mode: single
- id: '1678704758356'
  alias: Resume Music After Macbook Stops It
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.macbook_air_active
    attribute: Screen Off
    from: 'false'
    to: 'true'
  - platform: state
    entity_id:
    - binary_sensor.airpods_connected
    from: 'on'
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.owntone_output_anthony_s_desk
      state: 'on'
    - condition: state
      entity_id: media_player.owntone_output_anthony_s_nightstand
      state: 'on'
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: DESKTOP-PC
      attribute: source
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.anthony
      state: Home
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      attribute: source
      state: Home Assistant
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: DESKTOP-PC
      attribute: source
  action:
  - if:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: paused
    then:
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
    else:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.spotify_anthony221121
        from: playing
      timeout:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - service: media_player.media_play
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
  mode: restart
- id: '1679721361656'
  alias: Showering Boolean
  description: ''
  trigger:
  - platform: template
    value_template: "      {{ is_state('binary_sensor.shower', 'on') and \n      is_state('binary_sensor.bathroom_door',
      'off') and\n      is_state('input_boolean.bathroom_occupied', 'on') and\n      is_state('light.bathroom_lights',
      'on') and \n      is_state_attr('light.bathroom_lights', 'brightness', 255)
      and \n      (utcnow() > states.light.bathroom_lights.last_changed + timedelta(minutes=2))}}"
    id: shower start
  - platform: device
    type: turned_off
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: lights off
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: dooropen
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: dooropen2
  - platform: state
    entity_id:
    - input_boolean.showering
    to: 'off'
    from: 'on'
    id: showeringoff
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: dooropen3
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shower start
      - condition: state
        entity_id: light.bathroom_lights
        attribute: brightness
        state: 255
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.showering
    - conditions:
      - condition: device
        type: is_off
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: or
        conditions:
        - condition: trigger
          id: startup
        - condition: trigger
          id: reloaded
        - condition: trigger
          id: lights off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.showering
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id:
          - dooropen
        - condition: trigger
          id:
          - dooropen2
        - condition: trigger
          id:
          - showeringoff
        - condition: trigger
          id:
          - dooropen3
      - condition: state
        entity_id: binary_sensor.bathroom_aqara_motion
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bathroom_multi_sensor_motion
        state: 'off'
      - condition: state
        entity_id: binary_sensor.shower
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bathroom_door
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.showering
  mode: single
- id: '1680247258391'
  alias: Soundbar
  description: ''
  trigger:
  - platform: state
    entity_id:
    - pyscript.airport_2_playing
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - media_player.owntone_output_soundbar
    from: 'off'
    to: 'on'
    id: owntone
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: pyscript.airport_2_playing
          state: 'True'
        - condition: state
          state: 'on'
          entity_id: media_player.owntone_output_soundbar
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.subwoofer
    - conditions:
      - condition: state
        entity_id: pyscript.airport_2_playing
        state: 'False'
      - condition: not
        conditions:
        - condition: trigger
          id: owntone
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.subwoofer
  mode: restart
- id: '1680252272232'
  alias: Dana's Bedroom Toggle
  description: ''
  trigger:
  - platform: device
    device_id: 28929daa383258a930d69cf2af9a4edf
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: 'on'
  - platform: device
    device_id: 28929daa383258a930d69cf2af9a4edf
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: 'off'
  - platform: state
    entity_id:
    - input_boolean.guest_presence
    from: 'off'
    to: 'on'
    id: arrive
  - platform: state
    entity_id:
    - input_boolean.guest_presence
    from: 'on'
    to: 'off'
    id: leave
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 'on'
        - condition: trigger
          id: arrive
      sequence:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.danas_32_tcl_roku_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
        - if:
          - condition: or
            conditions:
            - condition: or
              conditions:
              - condition: state
                entity_id: input_select.anthony
                state: Just Left
              - condition: state
                entity_id: input_select.anthony
                state: Extended Away
              - condition: state
                entity_id: input_select.anthony
                state: Away
            - condition: state
              entity_id: device_tracker.dana
              state: home
          - condition: state
            entity_id: input_boolean.guest
            state: 'off'
          then:
          - service: light.turn_on
            data:
              effect: None
              xy_color:
              - 0.455
              - 0.374
            target:
              entity_id:
              - light.dana_s_fan_lights
          else:
          - service: light.turn_on
            data:
              rgb_color:
              - 255
              - 0
              - 255
              brightness_pct: 100
            target:
              entity_id:
              - light.dana_s_fan_lights
            enabled: true
          enabled: false
        - service: light.turn_on
          data:
            effect: None
            xy_color:
            - 0.455
            - 0.374
          target:
            entity_id:
            - light.dana_s_fan_lights
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 'off'
        - condition: trigger
          id: leave
      sequence:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.dana_s_fan_lights
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.danas_32_tcl_roku_tv
            - media_player.owntone_output_soundbar
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
  mode: parallel
  max: 10
- id: '1681346504601'
  alias: Guest Bedroom Pedestal Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: b115f9250ed77b94f398b0f409dd7f63
      auto_mode: restart
      top_on:
      - service: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.guest_bedroom_light
      down_lower:
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.guest_bedroom_fan
      bottom_off:
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.guest_bedroom_light
      up_raise:
      - service: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.guest_bedroom_fan
      top_on_release: []
      up_raise_release: []
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.samsung_tv
        enabled: true
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.samsung_tv
            state: 'on'
          sequence:
          - service: switch.turn_off
            target:
              entity_id: switch.samsung_tv
            data: {}
        - conditions:
          - condition: state
            entity_id: switch.samsung_tv
            state: 'off'
          sequence:
          - service: switch.turn_on
            target:
              entity_id: switch.samsung_tv
            data: {}
        enabled: true
      bottom_off_release: []
- id: '1683843733749'
  alias: Turn Off USW LEDs
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.usw_leds
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.g4_doorbell_pro_detections_package
  mode: single
- id: '1686560160740'
  alias: Webcam Profiles & Switch Music to Desktop
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.webcam
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.discord_active
    state: 'on'
  action:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.fan_lights
          state: Color Loop
          attribute: effect
        sequence:
        - repeat:
            count: '6'
            sequence:
            - service: button.press
              data: {}
              target:
                entity_id: button.desktop_pc_satellite_color
            - delay:
                hours: 0
                minutes: 0
                seconds: 0
                milliseconds: 500
      - conditions:
        - condition: state
          entity_id: light.fan_lights
          state: 'on'
        - condition: state
          entity_id: light.fan_lights
          state: None
          attribute: effect
        sequence:
        - repeat:
            count: '6'
            sequence:
            - service: button.press
              data: {}
              target:
                entity_id:
                - button.desktop_pc_satellite_white
            - delay:
                hours: 0
                minutes: 0
                seconds: 0
                milliseconds: 500
      - conditions:
        - condition: state
          entity_id: light.fan_lights
          state: 'off'
        sequence:
        - repeat:
            count: '6'
            sequence:
            - service: button.press
              data: {}
              target:
                entity_id:
                - button.desktop_pc_satellite_off
            - delay:
                hours: 0
                minutes: 0
                seconds: 0
                milliseconds: 500
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: lofi
      then:
      - service: homeassistant.reload_config_entry
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - condition: template
        value_template: '{{ not is_state_attr(''media_player.spotify_anthony221121'',
          ''source'', ''DESKTOP-PC'') and "DESKTOP-PC" in state_attr(''media_player.spotify_anthony221121'',
          ''source_list'')}}'
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.stop_music
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - repeat:
          until:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: DESKTOP-PC
          sequence:
          - service: media_player.select_source
            data:
              source: DESKTOP-PC
            target:
              entity_id: media_player.spotify_anthony221121
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
      - service: media_player.play_media
        data:
          media_content_type: playlist
          media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
          enqueue: play
        target:
          entity_id: media_player.spotify_anthony221121
      - service: media_player.volume_set
        data:
          volume_level: 1
        target:
          entity_id: media_player.spotify_anthony221121
      - service: media_player.shuffle_set
        data:
          shuffle: true
        target:
          entity_id: media_player.spotify_anthony221121
      - repeat:
          count: 30
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: 1
            target:
              entity_id: media_player.spotify_anthony221121
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
      alias: Move music to Desktop
  mode: single
- id: '1689234248891'
  alias: Update Alarm
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.anthony_s_echo_show_next_alarm
  mode: single
- id: '1691358990808'
  alias: Taylor Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.taylor_presence
    to: Just Arrived
    for:
      hours: 0
      minutes: 20
      seconds: 0
    id: Home
  - platform: state
    entity_id:
    - person.taylor
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: zone
    entity_id: person.taylor
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.taylor
    zone: zone.home
    event: leave
    id: Just Left
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Home
        - condition: and
          conditions:
          - condition: state
            entity_id: input_select.taylor_presence
            state: Just Arrived
            for:
              hours: 0
              minutes: 20
              seconds: 0
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.taylor_presence
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
          - condition: state
            entity_id: input_select.taylor_presence
            state: Just Left
            for:
              hours: 0
              minutes: 10
              seconds: 0
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.taylor_presence
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.taylor_presence
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.taylor_presence
    default: []
  mode: single
- id: '1691359219364'
  alias: Privacy Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.taylor_presence
    - input_select.anthony
    to: Just Arrived
    id: arrived
    enabled: false
  - platform: state
    entity_id:
    - input_select.taylor_presence
    - input_select.anthony
    to: Home
    id: home
    enabled: false
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Left
    id: left
    enabled: true
  - platform: state
    entity_id:
    - input_select.anthony
    to: Away
    id: away
    enabled: true
  - platform: time_pattern
    seconds: /3
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - away
        - left
      - condition: not
        conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.taylor_presence
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.taylor_presence
            state: Just Arrived
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        alias: check if home
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.privacy
        data: {}
  mode: single
- id: '1691908601968'
  alias: Turn off bed light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.brtv
    to: 'on'
    id: playing
  - platform: state
    entity_id:
    - switch.brtv
    to: 'off'
    id: paused
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: state
    entity_id:
    - light.govee
    - light.bed
    to: 'on'
    id: turned on
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.shapes_4948
      state: 'on'
    - condition: state
      entity_id: light.shapes_007f
      state: 'on'
    - condition: state
      entity_id: light.shapes_ee82
      state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.taylor_presence
      state: Home
    - condition: state
      entity_id: input_select.taylor_presence
      state: Just Arrived
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - playing
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.bed
          - light.govee
    - conditions:
      - condition: trigger
        id:
        - paused
      - condition: or
        conditions:
        - condition: state
          entity_id: light.shapes_4948
          state: 'on'
        - condition: state
          entity_id: light.shapes_007f
          state: 'on'
        - condition: state
          entity_id: light.shapes_ee82
          state: 'on'
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 10
        target:
          entity_id:
          - light.govee
      - service: light.turn_on
        data:
          brightness_pct: 40
        target:
          entity_id:
          - light.bed
    - conditions:
      - condition: trigger
        id:
        - turned on
      - condition: state
        entity_id: switch.brtv
        state: 'on'
      sequence:
      - repeat:
          count: '40'
          sequence:
          - service: light.turn_off
            data: {}
            target:
              entity_id:
              - light.bed
              - light.govee
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
  mode: restart
- id: '1691948133249'
  alias: Guest Bathroom Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_motion_ac02_motion_2
    to: 'on'
    from: 'off'
    id: motion
  - platform: state
    entity_id:
    - switch.guest_bathroom_vanity_lights
    to: 'on'
    for:
      hours: 0
      minutes: 20
      seconds: 0
    id: on for 20 mins
  - platform: state
    entity_id:
    - binary_sensor.lumi_lumi_motion_ac02_motion_2
    to: 'off'
    id: motion clear for 20 mins
    for:
      hours: 0
      minutes: 20
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - motion
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.riana
          state: Home
        - condition: state
          entity_id: input_select.riana
          state: Just Arrived
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.guest_bathroom_vanity_lights
    - conditions:
      - condition: trigger
        id:
        - on for 20 mins
        - motion clear for 20 mins
      - condition: state
        entity_id: binary_sensor.lumi_lumi_motion_ac02_motion_2
        state: 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.guest_bathroom_vanity_lights
  mode: single
- id: '1692149791817'
  alias: Watering
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ecowitt_wh51_soil_moisture
    below: 10
    id: dry
  - platform: numeric_state
    entity_id: sensor.ecowitt_wh51_soil_moisture
    above: 40
    id: reset
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - dry
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: The plant soil is dry
          data:
            tag: watering
    - conditions:
      - condition: trigger
        id:
        - reset
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: watering
  mode: single
- id: '1692642019621'
  alias: Closet Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion_detection
    id: motion
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.closet
    from: 'off'
    to: 'on'
    id: door open
  - platform: state
    entity_id:
    - binary_sensor.closet
    from: 'on'
    to: 'off'
    id: door closed
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion_detection
    id: clear
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - door open
        - motion
      - condition: state
        entity_id: switch.bedroomtoggle
        state: 'off'
      - condition: state
        entity_id: light.wled
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          effect: Closet Lights
        target:
          entity_id: light.wled
    - conditions:
      - condition: trigger
        id:
        - clear
        - door closed
      - condition: state
        entity_id: light.wled
        state: 'off'
      - condition: state
        entity_id: light.closet_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.closet_lights
  mode: single
- id: '1693256810267'
  alias: GoXLR
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.desktop
    from: 'off'
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - switch.desktop
    from: 'on'
    to: 'off'
    id: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.goxlr
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.goxlr
  mode: single
- id: '1693288313787'
  alias: Desktop Spotify Volume
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    attribute: source
    to: DESKTOP-PC
  condition: []
  action:
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id: media_player.spotify_anthony221121
  mode: single
- id: '1693319496181'
  alias: Reboot Desk Airport
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.owntone_server
  - platform: state
    entity_id:
    - media_player.owntone_output_anthony_s_desk
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_nightstand
        state: 'on'
        for:
          hours: 0
          minutes: 1
          seconds: 0
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_desk
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 5
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
    - condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: unavailable
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_desk
        state: unavailable
        for:
          hours: 0
          minutes: 0
          seconds: 5
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.airport_express
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.airport_express
  - if:
    - condition: not
      conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'on'
          - condition: template
            value_template: "{{ as_local(state_attr('script.lofi', \n        'last_triggered'))
              > now() - timedelta( minutes = 1 ) \nor as_local(state_attr('script.test',
              \n        'last_triggered')) > now() - timedelta( minutes = 1 )\n}}"
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          - condition: state
            entity_id: media_player.kitchen_speakers
            state: 'on'
      alias: If not currently playing
    then:
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - stop: ''
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.owntone_output_anthony_s_desk
      from: unavailable
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - repeat:
      until:
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_desk
        state: 'on'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.owntone_output_anthony_s_desk
    enabled: true
  - repeat:
      until:
      - condition: template
        value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
          ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
          ''volume_level'') }}

          '
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: '{{ state_attr(''media_player.spotify_anthony221121'', ''volume_level'')
            }}

            '
        target:
          entity_id: media_player.owntone_output_anthony_s_desk
    enabled: true
  mode: single
- id: '1694314775941'
  alias: Reconnect Devices
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.wyze_bulb_1
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze1
  - platform: state
    entity_id:
    - light.wyze_bulb_2
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze2
  - platform: state
    entity_id:
    - light.wyze_bulb_3
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze3
  - platform: state
    entity_id:
    - light.wyze_bulb_4
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze4
  - platform: state
    entity_id:
    - light.wyze_bulb_5
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze5
  - platform: state
    entity_id:
    - light.wyze_bulb_6
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze6
  - platform: state
    entity_id:
    - light.wyze_bulb_7
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: wyze7
  - platform: state
    entity_id:
    - light.shapes_007f
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: desk
  - platform: state
    entity_id:
    - light.shapes_ee82
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: corner
  - platform: state
    entity_id:
    - light.shapes_4948_2
    - light.shapes_4948
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: vertical
  - platform: state
    entity_id:
    - switch.usb_hub
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: usb
  - platform: state
    entity_id:
    - light.light_switch
    - light.light_switch_corner
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: lightswitch
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - wyze1
      - condition: state
        entity_id: switch.light_switch_relay
        state: 'on'
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: a70e82946e63319e164a4da0e22d4914
    - conditions:
      - condition: trigger
        id:
        - wyze2
      - condition: state
        entity_id: switch.light_switch_relay
        state: 'on'
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: a99f1a10374d0da5dfff1ec7cfcc5167
    - conditions:
      - condition: trigger
        id:
        - wyze3
      - condition: state
        entity_id: switch.light_switch_relay
        state: 'on'
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 576a724b67bd453192cd5fe4a07f4c5c
    - conditions:
      - condition: trigger
        id:
        - wyze4
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 49d87e72a8f0f7bcb69a206582ea6193
    - conditions:
      - condition: trigger
        id:
        - wyze5
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: b3114ce194084d0c57723164f3843d6a
    - conditions:
      - condition: trigger
        id:
        - wyze6
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 997bfba8f6c661648c72ce69eb4c0086
    - conditions:
      - condition: trigger
        id:
        - wyze7
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 4375fe2a4cb7d679c724b4ea785c6a4b
    - conditions:
      - condition: trigger
        id:
        - desk
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: a527267e8064d2c3323e4e9009482636
    - conditions:
      - condition: trigger
        id:
        - corner
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: ba96691142b71d4ece3ecb55aa1d1f75
    - conditions:
      - condition: trigger
        id:
        - vertical
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 6ddb18fe3172bc14e92418d8fa68c8e3
    - conditions:
      - condition: trigger
        id:
        - usb
      sequence:
      - service: unifi.reconnect_client
        data:
          device_id: 9a32bb26971f7740dfdb47ad78f6128b
    - conditions:
      - condition: trigger
        id:
        - lightswitch
      sequence:
      - repeat:
          sequence:
          - service: unifi.reconnect_client
            data:
              device_id: d17b85b4018141749b9c7775aacb2336
          - wait_for_trigger: []
            timeout:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          until:
          - condition: not
            conditions:
            - condition: state
              entity_id: light.light_switch
              state: unavailable
  mode: parallel
  max: 20
- id: '1695869227465'
  alias: Low Battery Notification
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      exclude:
        entity_id:
        - sensor.macbook_air_internal_battery_level
        - sensor.anthony_maioranis_ipad_battery_level
        - sensor.ipad_air_2_black_battery_level
        - sensor.anthonys_ipad_battery_level
        - sensor.avp_battery_level
        - sensor.80fd099b_9b465253_browser_battery
      actions:
      - if:
        - condition: state
          entity_id: person.anthony
          state: home
        then:
        - service: notify.anthonys_devices
          data:
            message: '{{sensors}}'
            title: Low Battery Warning
      day: 0
      threshold: 20
      time: '20:00:00'
- id: '1695936735732'
  alias: Mailbox Guard
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mailbox
    to: 'on'
  condition: []
  action:
  - service: notify.anthonys_devices
    data:
      message: Mailbox Guard detected motion
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: homeassistant/binary_sensor/mailbox/state
      payload: empty
  mode: single
- id: '1696582551718'
  alias: Nanoleaf Automation Reset
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  condition: []
  action:
  - service: automation.turn_off
    data:
      stop_actions: true
    target:
      entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
  mode: single
- id: '1698236774477'
  alias: Connected to Car - Eli
  description: ''
  trigger: []
  condition: []
  action:
  - data:
      stop_actions: true
    target:
      entity_id: automation.spotify_refresh
    action: automation.turn_off
  - data: {}
    target:
      entity_id: media_player.spotify_eli
    action: homeassistant.update_entity
  - choose: []
    default:
    - alias: Set Spotify Output to iPhone
      if:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_eli
          attribute: source
          state: iPhone
        alias: Output not set to iphone
      then:
      - alias: 'Ensure iPhone in Connect Outputs '
        repeat:
          sequence:
          - data: {}
            target:
              entity_id: media_player.spotify_eli
            action: homeassistant.reload_config_entry
          - alias: Wait for iPhone to appear
            wait_for_trigger:
            - platform: template
              value_template: '{{ ("iPhone" in state_attr(''media_player.spotify_eli'',
                ''source_list'')) | default(false) }}

                '
              for:
                hours: 0
                minutes: 0
                seconds: 2
            timeout:
              hours: 0
              minutes: 0
              seconds: 3
              milliseconds: 0
          while:
          - alias: iPhone not in Connect outputs
            condition: template
            value_template: '{{ ("iPhone" not in state_attr(''media_player.spotify_eli'',
              ''source_list'')) | default(false) }}

              '
          - condition: state
            entity_id: media_player.spotify_eli
            state: unavailable
      - data: {}
        target:
          entity_id: media_player.spotify_eli
        action: homeassistant.update_entity
      - alias: Ensure iPhone was set as output
        repeat:
          sequence:
          - if:
            - condition: not
              conditions:
              - condition: state
                entity_id: media_player.spotify_eli
                state: unavailable
            then:
            - continue_on_error: true
              data:
                source: iPhone
              target:
                entity_id: media_player.spotify_eli
              alias: Attempt to set output
              action: media_player.select_source
          - data: {}
            target:
              entity_id: media_player.spotify_eli
            action: homeassistant.reload_config_entry
          - alias: Wait for iPhone to set
            wait_for_trigger:
            - platform: state
              entity_id:
              - media_player.spotify_eli
              attribute: source
              to: iPhone
              for:
                hours: 0
                minutes: 0
                seconds: 2
            timeout:
              hours: 0
              minutes: 0
              seconds: 3
              milliseconds: 0
          while:
          - condition: not
            conditions:
            - condition: state
              entity_id: media_player.spotify_eli
              attribute: source
              state: iPhone
    - continue_on_error: true
      data:
        media_content_type: playlist
        media_content_id: spotify:user:orespawnog:collection
        enqueue: play
      target:
        entity_id: media_player.spotify_eli
      alias: Play Likes Playlist
      action: media_player.play_media
      enabled: false
    - alias: Play Likes Playlist
      continue_on_error: true
      data:
        media_content_type: playlist
        media_content_id: https://open.spotify.com/playlist/0RXgnIhniJLZy131BE7Cby
        enqueue: play
      target:
        entity_id: media_player.spotify_eli
      action: media_player.play_media
  - data: {}
    target:
      entity_id: automation.spotify_refresh
    action: automation.turn_on
  mode: single
- id: '1698450236507'
  alias: Resume stuck Spotify
  description: ''
  trigger:
  - platform: template
    value_template: '{{ is_state_attr(''media_player.spotify_anthony221121'', ''media_position'',
      state_attr(''media_player.spotify_anthony221121'', ''media_duration'')) and
      is_state_attr(''media_player.spotify_anthony221121'', ''media_playlist'', "lofi")
      and is_state(''media_player.spotify_anthony221121'', ''paused'') }}'
    for:
      hours: 0
      minutes: 0
      seconds: 15
    id: stuck 2
    enabled: false
  - platform: template
    value_template: "    {% set current_position = state_attr('media_player.spotify_anthony221121',
      'media_position') | default(0) | float %}\n    {% set previous_position = states('input_number.spotify_previous_position')
      | default(0) | float %}\n    {% set current_timestamp = state_attr('media_player.spotify_anthony221121',
      'media_position_updated_at').strftime('%Y-%m-%d %H:%M:%S') %}\n    {% set last_timestamp
      = states('input_datetime.spotify_last_updated') %}\n    {% set previous_timestamp
      = states('input_datetime.spotify_previous_updated') %}\n    {{ is_state('media_player.spotify_anthony221121',
      'paused') and current_position > previous_position and current_timestamp !=
      last_timestamp and current_timestamp != previous_timestamp }}"
    id: stuck
    enabled: false
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    to: paused
    id: store initial media position
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    from: paused
    id: reset
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    attribute: media_position_updated_at
    id: store subsequent update
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - stuck
        - stuck 2
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - service: media_player.media_next_track
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - parallel:
        - if:
          - condition: state
            state: 'off'
            entity_id: media_player.owntone_output_anthony_s_nightstand
          then:
          - repeat:
              until:
              - condition: template
                value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
                  'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
                  'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
                  'volume_level') == 1}}\n"
              - condition: state
                entity_id: media_player.owntone_output_anthony_s_nightstand
                state: 'on'
              sequence:
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id: media_player.owntone_output_anthony_s_nightstand
              - service: media_player.volume_set
                data:
                  volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                    ''volume_level'')) }}

                    '
                target:
                  entity_id: media_player.owntone_output_anthony_s_nightstand
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
          alias: Turn on Nightstand Speaker
        - if:
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_desk
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_desk
          - repeat:
              until:
              - condition: state
                entity_id: media_player.owntone_output_anthony_s_desk
                state: 'on'
              sequence:
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 2
                  milliseconds: 0
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id: media_player.owntone_output_anthony_s_desk
          - if:
            - condition: state
              entity_id: media_player.owntone_output_anthony_s_desk
              state: 'on'
            then:
            - repeat:
                until:
                - condition: template
                  value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
                    ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                    ''volume_level'') }}

                    '
                sequence:
                - service: media_player.volume_set
                  data:
                    volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                      ''volume_level'') }}

                      '
                  target:
                    entity_id: media_player.owntone_output_anthony_s_desk
            else:
            - service: automation.trigger
              data:
                skip_condition: true
              target:
                entity_id: automation.reboot_airport
          alias: Turn on Desk Speakers
      - service: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.spotify_previous_position
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.spotify_last_updated
          date: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%Y-%m-%d'')
            }}'
          time: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%H:%M:%S'')
            }}'
    - conditions:
      - condition: trigger
        id:
        - store initial media position
      sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.spotify_previous_position
          value: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position'')
            | default(0) }}'
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.spotify_last_updated
          date: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%Y-%m-%d'')
            }}'
          time: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%H:%M:%S'')
            }}'
    - conditions:
      - condition: trigger
        id:
        - reset
      sequence:
      - service: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.spotify_previous_position
    - conditions:
      - condition: trigger
        id:
        - store subsequent update
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: paused
      sequence:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.spotify_previous_updated
          date: '{{ states(''input_datetime.spotify_last_updated'')[:10] }}'
          time: '{{ states(''input_datetime.spotify_last_updated'')[11:19] }}'
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.spotify_last_updated
          date: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%Y-%m-%d'')
            }}'
          time: '{{ state_attr(''media_player.spotify_anthony221121'', ''media_position_updated_at'').strftime(''%H:%M:%S'')
            }}'
  mode: queued
  max: 10
- id: '1699001999294'
  alias: Resume Spotify
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    to: paused
    id: paused
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - binary_sensor.macbook_air_active
    attribute: Screen Off
    from: 'false'
    to: 'true'
    id: macbook sleep
  - platform: state
    entity_id:
    - binary_sensor.airpods_connected
    from: 'on'
    to: 'off'
    id: airpods disconnect
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    attribute: media_title
    to: Thrilling Dreams
    id: 1st song
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      attribute: source
      state: Home Assistant
    - condition: and
      conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: DESKTOP-PC
        attribute: source
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: unavailable
  - condition: state
    entity_id: script.call
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - macbook sleep
        - airpods disconnect
      sequence:
      - service: media_player.media_play
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
    - conditions:
      - condition: trigger
        id:
        - 1st song
      - condition: state
        entity_id: script.lofi
        state: 'off'
      sequence:
      - service: media_player.shuffle_set
        data:
          shuffle: false
        target:
          entity_id: media_player.spotify_anthony221121
      - service: media_player.shuffle_set
        data:
          shuffle: true
        target:
          entity_id: media_player.spotify_anthony221121
      - service: media_player.media_next_track
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
    default:
    - service: media_player.media_next_track
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
  mode: queued
  max: 10
- id: '1701788153586'
  alias: Update Shade State
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /3
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: cover.bedroom_blinds
  - if:
    - condition: template
      value_template: '{{ as_timestamp(now()) | round - as_timestamp(states.cover.bedroom_blinds.last_changed)
        | round > 20 }}'
    - condition: or
      conditions:
      - condition: state
        entity_id: cover.bedroom_blinds
        state: opening
      - condition: state
        entity_id: cover.bedroom_blinds
        state: closing
    then:
    - service: cover.stop_cover
      metadata: {}
      data: {}
      target:
        entity_id: cover.bedroom_blinds
  mode: single
- id: '1705021795693'
  alias: Refresh Dashboards
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition: []
  action:
  - parallel:
    - service: browser_mod.refresh
      data:
        browser_id:
        - 2c8b769e-f4d4e0e9
      alias: refresh doorbell cam tablet
    - alias: refresh medicine tablet
      service: browser_mod.refresh
      data:
        browser_id:
        - 92e9f5b7-92d2f3c4
    - alias: refresh food tablet
      service: browser_mod.refresh
      data:
        browser_id:
        - b8229aec-8e77c6cd
    - alias: refresh doorbell cam tablet (kiosk)
      service: browser_mod.refresh
      data:
        browser_id:
        - 10f0887f-1c13b283
    - alias: refresh kitchen tablet (kiosk)
      service: browser_mod.refresh
      data:
        browser_id:
        - dd568a48-aa2eed83
    - alias: refresh food tablet (kiosk)
      service: browser_mod.refresh
      data:
        browser_id:
        - fdc1c06b-fbd3cc1b
  mode: single
- id: '1707858790335'
  alias: Light Switch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.colorloopstate
    id: change color
  - platform: state
    entity_id:
    - binary_sensor.kauf_rgb_sw_hold
    to: 'on'
    from: 'off'
    id: hold
  - platform: state
    entity_id:
    - binary_sensor.kauf_rgb_sw_double_press
    to: 'on'
    from: 'off'
    id: double press
  - platform: state
    entity_id:
    - binary_sensor.kauf_rgb_sw_single_press
    to: 'on'
    from: 'off'
    id: press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - change color
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.colorloopstate
            state: '0'
          - condition: state
            entity_id: switch.bedroomtoggle
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.light_switch
              - light.light_switch_corner
            data:
              brightness_pct: 100
              rgb_color:
              - 114
              - 250
              - 100
              transition: 3
        - conditions:
          - condition: state
            entity_id: sensor.colorloopstate
            state: '1'
          - condition: state
            entity_id: switch.bedroomtoggle
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.light_switch
              - light.light_switch_corner
            data:
              brightness_pct: 100
              rgb_color:
              - 114
              - 250
              - 237
              transition: 3
        - conditions:
          - condition: state
            entity_id: sensor.colorloopstate
            state: '2'
          - condition: state
            entity_id: switch.bedroomtoggle
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.light_switch
              - light.light_switch_corner
            data:
              brightness_pct: 100
              rgb_color:
              - 97
              - 38
              - 244
              transition: 3
        - conditions:
          - condition: state
            entity_id: sensor.colorloopstate
            state: '3'
          - condition: state
            entity_id: switch.bedroomtoggle
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.light_switch
              - light.light_switch_corner
            data:
              brightness_pct: 100
              rgb_color:
              - 128
              - 43
              - 249
              transition: 3
        - conditions:
          - condition: state
            entity_id: sensor.colorloopstate
            state: '4'
          - condition: state
            entity_id: switch.bedroomtoggle
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.light_switch
              - light.light_switch_corner
            data:
              brightness_pct: 100
              rgb_color:
              - 234
              - 51
              - 69
              transition: 3
    - conditions:
      - condition: trigger
        id:
        - hold
      sequence:
      - service: script.turn_on
        target:
          entity_id: script.morning
        data: {}
    - conditions:
      - condition: trigger
        id:
        - double press
      sequence:
      - service: switch.toggle
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.light_switch_relay
    - conditions:
      - condition: trigger
        id:
        - press
      sequence:
      - service: switch.toggle
        target:
          entity_id: switch.bedroomtoggle
        data: {}
  mode: parallel
  max: 10
- id: '1708113443018'
  alias: Dial
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.dial
  condition: []
  action:
  - service: cover.set_cover_position
    target:
      entity_id: cover.bedroom_blinds
    data:
      position: '{{ state_attr(''cover.bedroom_blinds'', ''current_position'') + states(''input_number.dial'')|int}}'
  mode: queued
  max: 50
- id: '1709831743088'
  alias: Cover Height
  description: ''
  use_blueprint:
    path: langestefan/auto_sun_blind.yaml
    input:
      condition:
      - condition: state
        entity_id: cover.bedroom_blinds
        state: open
      - condition: numeric_state
        entity_id: sensor.pirateweather_cloud_coverage
        below: 60
        enabled: false
      - condition: numeric_state
        entity_id: weather.dark_sky
        attribute: temperature
        below: 75
        enabled: false
      cover_entity:
        entity_id: cover.bedroom_blinds
      azimuth: 96
      max_height: 1.22
      default_height: 100
      distance: 0.3
      minimum_position: 50
      condition_mode: or
      change_threshold: 1
      time_out: 1
- id: '1712035442279'
  alias: Power off Razer Headphones
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.desktop
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: desktop off
  - platform: sun
    event: sunrise
    offset: 0
    id: sunrise
  - platform: state
    entity_id:
    - switch.caseta_lamp_plug_7
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
    id: off for 30 mins
  - platform: state
    entity_id:
    - switch.desktop
    to: 'on'
    id: desktop on
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - desktop off
      sequence:
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.caseta_lamp_plug_7
    - conditions:
      - condition: trigger
        id:
        - sunrise
        - off for 30 mins
        - desktop on
      sequence:
      - service: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.caseta_lamp_plug_7
  mode: single
- id: '1712611470945'
  alias: Dana's Wall Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: dd591f6e4ecf82cee922c2a70d22325b
      auto_mode: restart
      top_on:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.hisense_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
        - if:
          - condition: or
            conditions:
            - condition: or
              conditions:
              - condition: state
                entity_id: input_select.anthony
                state: Just Left
              - condition: state
                entity_id: input_select.anthony
                state: Extended Away
              - condition: state
                entity_id: input_select.anthony
                state: Away
            - condition: state
              entity_id: device_tracker.dana
              state: home
          - condition: state
            entity_id: input_boolean.guest
            state: 'off'
          then:
          - service: light.turn_on
            data:
              effect: None
              xy_color:
              - 0.455
              - 0.374
            target:
              entity_id:
              - light.dana_s_fan_lights
          else:
          - service: light.turn_on
            data:
              rgb_color:
              - 255
              - 0
              - 255
              brightness_pct: 100
            target:
              entity_id:
              - light.dana_s_fan_lights
            enabled: true
          enabled: false
        - service: light.turn_on
          data:
            effect: None
            xy_color:
            - 0.455
            - 0.374
          target:
            entity_id:
            - light.dana_s_fan_lights
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
          enabled: false
      down_lower:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_south_color_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_west_color_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_color_ropes
              - switch.dana_s_west_color_rope
              - switch.dana_s_south_color_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_south_color_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_west_color_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_color_ropes
              - switch.dana_s_west_color_rope
              - switch.dana_s_south_color_rope
        enabled: false
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        enabled: false
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_soundbar
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.dana_s_fan_lights
          data: {}
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.dana_s_south_color_rope
      bottom_off:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_soundbar
            - media_player.hisense_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.dana_s_fan_lights
          data: {}
          enabled: true
      up_raise:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'on'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: switch.dana_s_north_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_south_incandescent_rope
              state: 'off'
            - condition: state
              entity_id: switch.dana_s_east_incandescent_rope
              state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.dana_s_north_incandescent_rope
              - switch.dana_s_south_incandescent_rope
              - switch.dana_s_east_incandescent_rope
        enabled: false
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_soundbar
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenoff_2
        - service: light.turn_off
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
            - light.dana_s_fan_lights
          data: {}
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.dana_s_south_color_rope
        enabled: false
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_color_ropes
            - switch.dana_s_incandescant_ropes
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_south_color_rope
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.hisense_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
          enabled: false
        - service: light.turn_off
          target:
            entity_id:
            - light.wyze_bulb_4
            - light.wyze_bulb_5
            - light.wyze_bulb_6
            - light.wyze_bulb_7
          data: {}
        - service: light.turn_on
          target:
            entity_id:
            - light.smart_bulb_3
          data: {}
      top_on_release: []
      up_raise_release: []
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_north_incandescent_rope
            - switch.dana_s_south_incandescent_rope
            - switch.dana_s_west_color_rope
            - switch.dana_s_east_incandescent_rope
            - switch.dana_s_south_color_rope
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.danas_32_tcl_roku_tv
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.screenon
        - service: light.turn_on
          data:
            rgb_color:
            - 255
            - 0
            - 255
            brightness_pct: 100
          target:
            entity_id:
            - light.dana_s_fan_lights
          enabled: true
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.black_cob
            - light.floor_lamp_2
            - light.charger2
            - light.cube
            - light.floor_lamp
          enabled: false
      bottom_off_release: []
      mode_max: 15
- id: '1713299820394'
  alias: Set Doorbell
  description: Mute Doorbell when Home
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.anthony_home
        state: 'on'
      sequence:
      - service: select.select_option
        target:
          entity_id: select.g4_doorbell_pro_chime_type
        data:
          option: None
    - conditions:
      - condition: state
        entity_id: binary_sensor.anthony_home
        state: 'off'
      sequence:
      - service: select.select_option
        target:
          entity_id: select.g4_doorbell_pro_chime_type
        data:
          option: Mechanical
  mode: single
- id: '1720592302328'
  alias: VR Cooling
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.steam_76561198069805211
  condition:
  - condition: state
    entity_id: switch.desktop
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Beat Saber
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: BeamNG.drive
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Forza Horizon 5
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: F1® 24
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: DiRT Rally 2.0
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: EA SPORTS™ WRC
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Assetto Corsa
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Assetto Corsa Competizione
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: GRID Legends
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Gravel
      sequence:
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Beat Saber
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: BeamNG.drive
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Forza Horizon 5
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: F1® 24
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: DiRT Rally 2.0
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: EA SPORTS™ WRC
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Assetto Corsa
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Assetto Corsa Competizione
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: GRID Legends
        - condition: state
          entity_id: sensor.steam_76561198069805211
          attribute: game
          state: Gravel
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.ac_boost
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: timer.start
        target:
          entity_id: timer.ac
        data:
          duration: 01:00:00
    - conditions: []
      sequence: []
  mode: single
- id: '1723251368042'
  alias: Eight Sleep
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.bedroom_chair
    to: 'on'
    id: chair
  condition: []
  action:
  - target:
      device_id: 1807d01837ccf4f85178b48dd72b10f6
    data:
      bed_side_state: solo
    enabled: false
    action: eight_sleep.set_bed_side
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      - condition: template
        value_template: '{{ is_state_attr(''sensor.anthony_s_bed_state'', "Target
          Heating Level", 0)  }}'
      sequence:
      - metadata: {}
        data:
          sleep_stage: current
          duration: 28800
          target: -58
        target:
          device_id: 1807d01837ccf4f85178b48dd72b10f6
        action: eight_sleep.heat_set
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'off'
          for:
            hours: 0
            minutes: 20
            seconds: 0
          enabled: false
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.bed_occupancy
            state: 'off'
          - condition: trigger
            id:
            - chair
      sequence:
      - target:
          device_id: 1807d01837ccf4f85178b48dd72b10f6
        data: {}
        action: eight_sleep.side_off
  mode: single
- id: '1724222512346'
  alias: Reload Alexa Media Player
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.anthony_s_echo_show
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: homeassistant
    event: start
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: media_player.anthony_s_echo_show
      state: unavailable
    then:
    - action: homeassistant.reload_config_entry
      target:
        device_id: fbb1905baf4decb516c7eb6bd9226da4
        entity_id: media_player.anthony_s_echo_show
      data: {}
  mode: single
