- id: '1546210609741'
  alias: Morning Automation
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.anthony_s_echo_show_next_alarm''),
      999999999999) %} {% set current_time = as_timestamp(states(''sensor.date_time'').replace('','',
      ''''), 0) %} {% set pre_time = 2 %} {{ current_time >= alarm_time - pre_time
      }}

      '
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 9
      milliseconds: 0
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.bed_occupancy
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bedroom_lights
  - parallel:
    - service: light.turn_on
      data:
        transition: 45
        effect: None
        color_temp: 500
        brightness: 255
      target:
        entity_id: light.fan_lights
    - service: light.turn_on
      data:
        effect: Vibrant Sunrise
        transition: 45
        brightness_pct: 100
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
  - delay:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - service: script.turn_on
    data: {}
    target:
      entity_id:
      - script.morning
      - script.test
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.bedmotion
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.bed_occupancy
  - event: event_change_nanoleaf
    event_data: {}
  - delay:
      hours: 0
      minutes: 4
      seconds: 0
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.anthony_s_echo_show_next_alarm
  mode: single
- id: '1653601692731'
  alias: AC Boost Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    id: buttonpress
    to: 'on'
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    - switch.ac
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  action:
  - if:
    - condition: trigger
      id: buttonpress
    then:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: cool
      target:
        entity_id: climate.bedroom_ac
    - service: timer.start
      data:
        duration: 0:25:00
      target:
        entity_id: timer.ac
    else:
    - if:
      - condition: state
        entity_id: binary_sensor.shower
        state: 'on'
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - condition: state
        entity_id: input_select.anthony
        state: Home
      then:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
  - choose:
    - conditions: []
      sequence: []
  mode: single
- id: 43a25b65afed4a4680f5ec81172f11e8
  alias: Startup Actions
  description: Set Theme, Ensure Location Input Select is Updated
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.ac_controls
  - parallel:
    - data:
        name: ios-dark-mode-dark-blue
      service: frontend.set_theme
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.govee_cyan
    - if:
      - condition: state
        entity_id: person.anthony
        state: home
      then:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
      else:
      - condition: template
        value_template: '{{ states(''person.anthony'')|lower in [''utd'', ''raytheon'',
          ''away'', ''not_home''] }}'
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.anthony
    - if:
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
    - service: automation.trigger
      data: {}
      target:
        entity_id: automation.ping_z_wave_devices
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.ac_controls
  initial_state: true
  mode: single
- id: '1620642299524'
  alias: Motion Bypass Control
  description: Turn lights on if bed motion sensing bypass is enabled
  trigger:
  - platform: state
    entity_id: input_boolean.bedmotion
    to: 'on'
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - service: script.morning
    data: {}
  mode: single
- id: '1621577255605'
  alias: Left Home
  description: Turns bedroom off when leaving home, and ensures bedroom stays off
  trigger:
  - platform: state
    entity_id:
    - person.anthony
    from: home
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.anthony
        state: unavailable
      - condition: state
        entity_id: person.anthony
        state: unknown
  action:
  - parallel:
    - service: script.night
      data: {}
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - switch.ac
  - condition: state
    entity_id: zone.home
    state: '0'
  - condition: state
    entity_id: binary_sensor.back_door
    state: 'off'
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.living_room_lights
      - light.kitchen_lights
      - light.hallway_lights
      - light.bathroom_lights
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.fronttv
      - switch.lrtv
      - switch.living_room_fan
      - switch.porch_light
      - switch.laundry_room_light
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: input_boolean.privacy
  - if:
    - condition: state
      entity_id: switch.exhaust_fan
      state: 'on'
    - condition: state
      entity_id: timer.exhaust
      state: idle
    then:
    - service: timer.start
      data: {}
      target:
        entity_id: timer.exhaust
  - service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.owntone_server
  mode: single
- id: '1627443167507'
  alias: Bedroom Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: Motion
  - platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closetopen
  - platform: state
    entity_id: binary_sensor.closet
    from: 'on'
    to: 'off'
    id: closetclosed
  condition:
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: closetopen
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: Motion
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom door has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: closetclosed
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been closed
          title: Motion detected in bedroom
          data:
            group: bedroom
    default: []
  mode: single
- id: '1627778209718'
  alias: Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    for:
      hours: 0
      minutes: 40
      seconds: 0
    id: Home
  - platform: state
    entity_id: input_select.anthony
    id: Away
    to: Just Left
    for: 00:10:00
  - platform: state
    entity_id:
    - person.anthony
    to: home
    id: Just Arrived
  - platform: state
    entity_id:
    - person.anthony
    from: home
    id: Just Left
  - platform: state
    entity_id:
    - person.anthony
    to: utd
    id: utd
  - platform: state
    entity_id:
    - person.anthony
    to: raytheon
    id: raytheon
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unavailable
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unknown
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: trigger
          id: raytheon
        - condition: trigger
          id: utd
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Away
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Arrived
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Left
    default: []
  mode: single
- id: '1627779396737'
  alias: Door Opened
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    to: 'on'
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
      sequence:
      - parallel:
        - service: script.morning
          data: {}
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.ac_boost
          enabled: false
        - service: notify.mobile_app_iphone
          data:
            message: Play music?
            data:
              tag: music
              push:
                interruption-level: passive
              shortcut:
                name: LoFi
                ignore_result: ignore
          enabled: false
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: time
        after: 07:00:00
        before: 01:00:00
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - parallel:
        - choose:
          - conditions:
            - condition: state
              entity_id: light.fan_lights
              state: 'off'
            sequence:
            - service: script.color_loop
              data: {}
            - condition: state
              entity_id: binary_sensor.webcam
              attribute: friendly_name
              state: 'off'
            - service: light.turn_on
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
              data:
                brightness_pct: 100
          - conditions:
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            sequence:
            - service: light.turn_on
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
              data:
                brightness_pct: 100
          default: []
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.bedmotion
    default: []
  mode: single
- id: '1627966300438'
  alias: Close Blinds When Dark
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
  condition:
  - condition: state
    entity_id: cover.bedroom_blinds
    state: open
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bedroom_blinds
  mode: single
- id: '1629524719390'
  alias: Closet Lights Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.closet
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
          brightness_pct: 2
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          brightness_pct: 100
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'off'
      - condition: state
        entity_id: light.closet_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.closet_lights
    default: []
  mode: single
- id: '1644476253725'
  alias: Bed Occupancy Detected
  description: If motion detected in bed under certain circumstances, turn off overhead
    lights.
  trigger:
  - platform: state
    entity_id: binary_sensor.bed_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0.6
  condition:
  - condition: state
    entity_id: input_boolean.bedmotion
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        before: 05:00:00
        after: '22:00:00'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.webcam
        state: 'on'
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.call
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.living_room_fan
    default:
    - if:
      - condition: state
        entity_id: light.fan_lights
        state: 'on'
      then:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
      alias: Fan Lights Off
    - if:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: numeric_state
        entity_id: zone.home
        below: 2
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.bathroom_lights
          - light.living_room_lights
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.living_room_fan
          - switch.fronttv
          - switch.lrtv
          - switch.guesttv
          - switch.laundry_room_light
          - switch.gym_fan
          - switch.dining_room_light
          - switch.master_hallway_light
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.privacy
  - if:
    - condition: time
      before: 05:00:00
      after: '22:00:00'
    - condition: state
      entity_id: switch.desktop
      state: 'off'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.usb_hub
  mode: single
- id: '1645695901319'
  alias: Enable Morning Automation
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    to: unavailable
    id: no alarm
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    from: unavailable
    id: alarm
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.morning_lights_on
    - conditions:
      - condition: trigger
        id: no alarm
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.morning_lights_on
    default: []
  mode: restart
- id: '1652125399924'
  alias: Riana Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.riana
    to: Just Arrived
    for: 00:20:00
    id: Home
  - platform: state
    entity_id:
    - person.riana
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: leave
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.riana
    default: []
  mode: single
- id: '1656373322370'
  alias: Cool Room
  description: ''
  trigger:
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: enter
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.riana
      state: Just Arrived
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - condition: state
    state: Just Arrived
    entity_id: input_select.anthony
  - wait_for_trigger:
    - platform: state
      entity_id:
      - cover.garage_door
    - platform: state
      entity_id:
      - lock.front_door
    continue_on_timeout: false
    timeout: 00:30:00
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.ac_boost
  - wait_for_trigger:
    - platform: zone
      entity_id: person.anthony
      zone: zone.home
      event: leave
    continue_on_timeout: false
    timeout: 00:25:00
  - service: climate.turn_off
    data: {}
    target:
      entity_id: climate.bedroom_ac
  mode: single
- id: '1658727301790'
  alias: USB Control
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: state
    entity_id:
    - light.desk_lights
    - light.fan_lights
    - switch.desktop
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - input_select.anthony
    from: home
    to: Just Left
  condition:
  - condition: state
    entity_id: switch.usb_hub
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      before: '22:00:00'
      after: 05:00:00
    - condition: state
      entity_id: switch.desktop
      state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.usb_hub
  mode: queued
- id: '1660977660346'
  alias: Set Temperature
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ac_thermostat_temperature
  - platform: state
    entity_id:
    - switch.ac
    - input_boolean.ac_boost
    to: 'on'
  condition:
  - condition: template
    value_template: "{% set trigger = 'false' %}\n{% if is_state('input_boolean.ac_boost',
      'on') %} \n  {% set trigger = 'true' %}\n{% elif not is_state('sensor.ac_thermostat_temperature',
      'unknown') \n  and states('sensor.ac_thermostat_temperature') is not none %}\n
      \ {% if not is_state_attr('climate.bedroom_ac', \"temperature\", \n  states('sensor.ac_thermostat_temperature')|int(61))
      %} \n    {% set trigger = 'true' %}\n  {% endif %}\n{% endif %}\n{{ trigger
      }}"
  - condition: state
    entity_id: switch.ac
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    then:
    - service: climate.set_temperature
      data:
        hvac_mode: cool
        temperature: '{{states(''sensor.ac_thermostat_temperature'') |int(61)}}'
      target:
        entity_id: climate.bedroom_ac
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - if:
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: climate.set_preset_mode
        data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: climate.set_preset_mode
        data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
      else:
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
    else:
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.ac
  mode: queued
- id: '1661502555805'
  alias: Nanoleaf Scene Changer and Auto Brightness
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nanoleaf_scene
    - sensor.nanoleaf_auto_brightness
  - platform: event
    event_type: script_started
    context: {}
  - platform: event
    event_type: event_template_reloaded
  - platform: event
    event_type: automation_reloaded
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.shapes_007f
      state: 'on'
    - condition: state
      entity_id: light.shapes_ee82
      state: 'on'
  action:
  - wait_template: "  {{ (not states('sensor.nanoleaf_scene') in (\"unavailable\",
      \"unknown\") and not \n\n  is_state_attr('light.shapes_007f', \"effect\", states('sensor.nanoleaf_scene')))\n\n
      \ or \n\n  (not states('sensor.nanoleaf_auto_brightness') in (\"unavailable\",
      \"unknown\")\n  and not \n\n  is_state_attr('light.shapes_007f', \"brightness\",\n
      \ states('sensor.nanoleaf_auto_brightness')|int - 2)) }}"
    continue_on_timeout: false
    timeout: 00:05:00
  - if:
    - condition: template
      value_template: "{{ not states('sensor.nanoleaf_scene') in (\"unavailable\",
        \"unknown\") and not \nis_state_attr('light.shapes_007f', \"effect\", states('sensor.nanoleaf_scene'))}}"
    then:
    - service: light.turn_on
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
      data:
        effect: '{{ states(''sensor.nanoleaf_scene'') }}'
  - if:
    - condition: template
      value_template: "{{not states('sensor.nanoleaf_auto_brightness') in (\"unavailable\",
        \"unknown\") and not \nis_state_attr('light.shapes_007f', \"brightness\",
        states('sensor.nanoleaf_auto_brightness')|int - 2) }}"
    then:
    - service: light.turn_on
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
      data:
        brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
  mode: queued
- id: '1661505890362'
  alias: Spotify Refresh
  description: ''
  trigger:
  - platform: event
    event_type: automation_reloaded
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
    to: Home
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  condition: []
  action:
  - repeat:
      while:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
  mode: single
- id: '1661880635465'
  alias: Suggest Starting Car
  description: ''
  trigger:
  - platform: template
    value_template: "{{ states(\"person.anthony\")|lower in [\"utd\"] and \n\nis_state(\"binary_sensor.workday_sensor\",
      \"on\") and\n\n  ( now().hour == 11 and now().minute == 40 and\n  ( now().weekday()
      in [0, 2, 4]) or\n\n  ( now().hour == 12 and now().minute == 40 and\n  now().weekday()
      in [1, 3]) or\n  \n  ( now().hour == 16 and now().minute == 25 and\n  now().weekday()
      == 3)) \n}}"
  - platform: state
    entity_id:
    - binary_sensor.shower
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      data:
        tag: car
        shortcut:
          name: Start My Car
          ignore_result: ignore
      message: Start car?
  mode: single
- id: '1664335198513'
  alias: Backyard Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door
  - platform: homeassistant
    event: start
  - platform: sun
    event: sunset
    offset: 0
  - platform: sun
    event: sunrise
    offset: 0
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.back_door
      state: 'on'
    - condition: sun
      before: sunrise
      after: sunset
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.porch_light
    else:
    - condition: state
      entity_id: binary_sensor.back_door
      state: 'off'
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.porch_light
  mode: parallel
  max: 10
- id: '1664505341968'
  alias: Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.dana
      state: home
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
    - condition: state
      entity_id: input_select.riana
      state: Home
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - cover.garage_door
    - platform: state
      entity_id:
      - lock.front_door
    continue_on_timeout: false
    timeout: 00:30:00
  - condition: sun
    before: sunrise
    after: sunset
    after_offset: -00:45:00
  - service: light.turn_on
    data:
      brightness_pct: 15
    target:
      entity_id:
      - light.kitchen_lights
      - light.hallway_lights
  - if:
    - type: is_temperature
      condition: device
      device_id: a2fc25d35733afab37fd7be1a943cdcf
      entity_id: sensor.home_current_temperature
      domain: sensor
      above: 70
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.living_room_fan
  - wait_for_trigger:
    - platform: state
      entity_id:
      - input_select.anthony
      to: Just Left
    continue_on_timeout: false
    timeout: 00:25:00
  - condition: state
    entity_id: zone.home
    state: '0'
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.kitchen_lights
      - light.hallway_lights
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.living_room_fan
  mode: single
- id: '1664570555449'
  alias: Turn on TV
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room
    to: playing
  condition: []
  action:
  - service: media_player.turn_on
    data: {}
    target:
      entity_id: media_player.living_room
  mode: single
- id: '1665076615181'
  alias: Dog Food Reminder
  description: ''
  trigger:
  - platform: time
    at: '10:30:00'
    id: Breakfast
  - platform: time
    at: '18:00:00'
    id: Dinner
  - platform: time
    at: 02:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    id: Feeding
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    from: 'on'
    to: 'off'
    id: Feeding2
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Breakfast
      - condition: state
        entity_id: input_boolean.breakfast
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Lola hasn't eaten breakfast yet
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - conditions:
      - condition: trigger
        id: Dinner
      - condition: state
        entity_id: input_boolean.dinner
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Lola hasn't eaten dinner yet
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.breakfast
          - input_boolean.dinner
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Feeding
        - condition: trigger
          id: Feeding2
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 00:00:01
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.breakfast
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.breakfast
            else:
            - service: notify.mobile_app_iphone
              data:
                message: Lola already ate breakfast
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
        - conditions:
          - condition: time
            before: '23:59:59'
            after: '14:30:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.dinner
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.dinner
            else:
            - service: notify.mobile_app_iphone
              data:
                message: Lola already ate dinner
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
  mode: single
- id: '1665170199807'
  alias: Privacy
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /2
  condition:
  - condition: template
    value_template: '{{ states(''group.indoor_cams'') == states(''input_boolean.privacy'')}} '
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.indoor_cams
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.elitedesk_profile_profile_2
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id:
          - group.indoor_cams
          - switch.elitedesk_profile_profile_1
  mode: single
- id: '1665186115040'
  alias: Dog Medicine Reminder
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
    id: Morning
  - platform: time
    at: '22:00:00'
    id: Night
  - platform: time
    at: 02:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.shock
    id: GivingPill
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.morning_medicine
    to: 'on'
    for:
      hours: 12
      minutes: 0
      seconds: 0
    alias: night medicine reminder
    id: night medicine reminder
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Morning
      - condition: state
        entity_id: input_boolean.morning_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Lola hasn't gotten her medicine yet
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - conditions:
      - condition: trigger
        id: Night
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Lola hasn't gotten her medicine yet
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.morning_medicine
          - input_boolean.night_medicine
    - conditions:
      - condition: trigger
        id: GivingPill
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 06:00:00
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.morning_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.morning_medicine
            else: []
        - conditions:
          - condition: time
            before: 02:30:00
            after: '18:30:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.night_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.night_medicine
            else: []
    - conditions:
      - condition: trigger
        id: night medicine reminder
      - condition: time
        before: '21:15:00'
        after: 00:00:00
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: It's time to give Lola her medicine
  mode: single
- id: '1665630167045'
  alias: Turn on home lights at night
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:45:00
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  action:
  - service: light.turn_on
    data:
      brightness_pct: 15
    target:
      entity_id:
      - light.kitchen_lights
      - light.hallway_lights
  - if:
    - condition: state
      entity_id: light.kitchen_lights
      state: 'off'
    then:
    - service: light.turn_on
      data:
        brightness_pct: 15
      target:
        entity_id:
        - light.kitchen_lights
  - if:
    - condition: state
      entity_id: light.kitchen_lights
      state: 'off'
    then:
    - service: light.turn_on
      data:
        brightness_pct: 15
      target:
        entity_id:
        - light.hallway_lights
  mode: single
- id: '1665630463210'
  alias: Turn off AC when not in room
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room
    - media_player.front
    to: playing
  - platform: state
    entity_id:
    - light.kitchen_lights
    - light.living_room_lights
    - switch.living_room_fan
    - input_boolean.morning_medicine
    - input_boolean.night_medicine
    - input_boolean.breakfast
    - input_boolean.dinner
    - binary_sensor.back_door
    - binary_sensor.laundry_room_motion
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - lock.front_door
    to: unlocked
  condition:
  - condition: state
    entity_id: switch.ac
    state: 'on'
  - condition: state
    entity_id: zone.home
    state: '1'
  - condition: state
    entity_id: binary_sensor.bed_occupancy
    state: 'off'
  - condition: state
    entity_id: input_select.anthony
    state: Home
  - condition: state
    entity_id: switch.desktop
    state: 'off'
  - condition: state
    entity_id: input_boolean.ac_boost
    state: 'off'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.ac
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.ac
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.ac_boost
  mode: single
- id: '1665996041801'
  alias: Katchy
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.katchy
    else:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Left
      - condition: state
        entity_id: input_select.anthony
        state: Away
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.katchy
  mode: single
- id: '1666368810191'
  alias: Exhaust Fan
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.shower
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    alias: When shower is turned off
    id: showerdone
  - platform: state
    entity_id:
    - switch.exhaust_fan
    from: 'off'
    to: 'on'
    id: manually
    alias: When exhaust fan is turned on
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.exhaust
    id: done
    alias: When timer finishes
  - platform: state
    entity_id:
    - binary_sensor.shower
    from: 'off'
    to: 'on'
    alias: When shower is turned on
    id: showerstart
  - platform: state
    entity_id:
    - switch.exhaust_fan
    from: 'on'
    to: 'off'
    id: turnedoff
    alias: Turned Off
  - platform: homeassistant
    event: start
    id: restart
  - platform: event
    event_type: automation_reloaded
    alias: reload
    id: reload
  - platform: template
    value_template: "{% if states.switch.exhaust_fan.last_changed is defined %}\n
      \ {% if as_timestamp(states.switch.exhaust_fan.last_changed)|timestamp_local
      is defined %}\n    {{ is_state('switch.exhaust_fan', 'on') and is_state('switch.light.bathroom_lights',
      'on') and\n       as_timestamp(states.switch.exhaust_fan.last_changed) > as_timestamp(now())
      - (3600) }}\n  {%endif%}\n{%endif%}"
    alias: turn off
    id: turn off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: manually
        - condition: trigger
          id: showerdone
        alias: Shower turned off or Fan turned on
      - condition: not
        conditions:
        - condition: state
          entity_id: timer.exhaust
          state: active
        - condition: state
          entity_id: binary_sensor.shower
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'off'
        alias: Confirm fan is off, shower is off, timer is off
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.exhaust
    - conditions:
      - condition: trigger
        id: done
      - condition: not
        conditions:
        - condition: state
          entity_id: timer.exhaust
          state: active
        - condition: state
          entity_id: binary_sensor.shower
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'off'
        alias: Confirm fan is off, shower is off, timer is off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
    - conditions:
      - condition: trigger
        id: showerstart
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.exhaust_fan
          - switch.ac_boost
    - conditions:
      - condition: trigger
        id: turnedoff
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: restart
        - condition: trigger
          id: reload
        alias: restart/reload
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.shower
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'on'
        alias: shower / fan on
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.shower
          state: 'on'
        - condition: device
          type: is_on
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
          enabled: true
        then:
        - service: timer.cancel
          data: {}
          target:
            entity_id: timer.exhaust
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.exhaust_fan
        else:
        - condition: state
          entity_id: binary_sensor.shower
          state: 'off'
        - condition: not
          conditions:
          - condition: state
            entity_id: timer.exhaust
            state: active
        - service: timer.start
          data: {}
          target:
            entity_id: timer.exhaust
    - conditions:
      - condition: trigger
        id: turn off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
  mode: queued
  max: 10
- id: '1666480822238'
  alias: Laundry Room Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'on'
    to: 'off'
    alias: cleared
    id: cleared
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'off'
    to: 'on'
    alias: detected
    id: detected
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.laundry_room_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - switch.laundry_room_light
    from: 'on'
    to: 'off'
    alias: manually turned off
    id: manually turned off
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'off'
    to: 'on'
    id: door opened
    alias: door opened
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'on'
    to: 'off'
    alias: door closed
    id: door closed
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    to: 'on'
    from: 'off'
    alias: food opened
    id: food opened
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    to: 'off'
    from: 'on'
    id: food closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: detected
        - condition: trigger
          id: door opened
        - condition: trigger
          id: food opened
        - condition: trigger
          id: food closed
        alias: door opened or motion detected
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'on'
          alias: if light off
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.laundry_room_light
        else:
        - service: timer.start
          data:
            duration: 00:01:30
          target:
            entity_id: timer.laundry_room_light
    - conditions:
      - condition: trigger
        id: cleared
      - condition: state
        entity_id: switch.laundry_room_light
        state: 'on'
      sequence:
      - service: timer.start
        data:
          duration: 00:01:00
        target:
          entity_id: timer.laundry_room_light
    - conditions:
      - condition: trigger
        id: timer finished
      - condition: not
        conditions:
        - condition: state
          entity_id: switch.laundry_room_light
          state: 'off'
        - condition: state
          entity_id: binary_sensor.laundry_room_motion
          state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.laundry_room_light
    - conditions:
      - condition: trigger
        id: manually turned off
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.laundry_room_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: reload
        - condition: trigger
          id: startup
      - condition: state
        entity_id: switch.laundry_room_light
        state: 'on'
      - condition: state
        entity_id: timer.laundry_room_light
        state: idle
      sequence:
      - service: timer.start
        data:
          duration: 00:01:00
        target:
          entity_id: timer.laundry_room_light
    - conditions:
      - condition: trigger
        id: door closed
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.laundry_room_light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.laundry_room_light
  mode: queued
  max: 10
- id: '1666594099613'
  alias: Ping Z-Wave Devices
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.hallway_lights
    - light.living_room_lights
    - light.kitchen_lights
    - switch.exhaust_fan
    - switch.katchy
    - switch.gym_fan
    - switch.living_room_fan
    - switch.porch_light
    - switch.laundry_room_light
    - light.bathroom_lights
    - switch.dining_room_light
    - switch.master_hallway_light
    to: unavailable
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - repeat:
      count: '5'
      sequence:
      - service: button.press
        data: {}
        target:
          entity_id:
          - button.node_18_ping
          - button.node_19_ping
          - button.node_26_ping
          - button.node_22_ping
          - button.node_17_ping
          - button.node_10_ping
          - button.laundry_room_light_ping
          - button.gym_fan_ping
          - button.node_32_ping
          - button.dining_room_light_ping
          - button.node_25_ping
          - button.master_hallway_light_ping
      - delay:
          hours: 0
          minutes: 0
          seconds: 7
          milliseconds: 0
  mode: single
- id: '1666715700705'
  alias: Hallway Lights Manually Turned On
  description: ''
  trigger: []
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id: light.hallway_lights
  mode: single
- id: '1666852312966'
  alias: Frigate
  description: ''
  trigger:
  - platform: mqtt
    topic: frigate/events
    payload: new
    value_template: '{{ value_json.type }}'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      message: A {{trigger.payload_json["after"]["label"]}} was detected.
      data:
        image: https://maioranihome.duckdns.org/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
        tag: '{{trigger.payload_json["after"]["id"]}}'
        when: '{{trigger.payload_json["after"]["start_time"]|int}}'
        entity_id: camera.{{trigger.payload_json["after"]["camera"]}}
    enabled: false
  - if:
    - condition: state
      entity_id: input_boolean.alexa_notification_sent
      for:
        hours: 0
        minutes: 1
        seconds: 0
      state: 'on'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''porch''
          }}'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: A {{trigger.payload_json["before"]["label"]}} was detected at the
            porch at {{ as_timestamp(now()) | timestamp_custom("%I:%M %p") }}
          data:
            image: https://maioranihome.duckdns.org/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
            tag: '{{trigger.payload_json["after"]["id"]}}'
            when: '{{trigger.payload_json["after"]["start_time"]|int}}'
        enabled: false
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_front_porch
      - condition: template
        value_template: "{{ is_state('input_boolean.alexa_notification_sent', 'off')
          and not \n(is_state('binary_sensor.front_door', 'on') and\n(now() - states.binary_sensor.front_door.last_changed).total_seconds()
          < 5) }}"
      - service: notify.alexa_media_anthony_s_2nd_echo_show_5_2nd_gen
        data:
          message: Someone is at the front door
          data:
            type: tts
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.alexa_notification_sent
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''backyard''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''garage''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_garage
  mode: parallel
  max: 10
- id: '1666854622989'
  alias: Porch Notification
  description: ''
  use_blueprint:
    path: hunterjm/frigate_0.10_notification.yaml
    input:
      camera: porch
      notify_device: 2f9895582e5a0adcb1c85c73c972294a
      base_url: https://maioranihome.duckdns.org
      update_thumbnail: false
      labels:
      - person
      cooldown: 100
      silence_timer: 60
      loiter_timer: 0
- id: '1666854812903'
  alias: Backyard
  description: ''
  use_blueprint:
    path: hunterjm/frigate_0.10_notification.yaml
    input:
      camera: backyard
      notify_device: 2f9895582e5a0adcb1c85c73c972294a
      base_url: https://maioranihome.duckdns.org
      update_thumbnail: false
      labels:
      - person
      cooldown: 100
      loiter_timer: 0
      silence_timer: 60
- id: '1666891695746'
  alias: Camera Triggers
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'off'
    to: 'on'
    id: back door opened
    alias: back door opened
  - platform: state
    entity_id:
    - lock.front_door
    from: 'off'
    to: 'on'
    id: front door opened
    alias: front door opened
  - platform: state
    entity_id:
    - lock.front_door
    from: 'on'
    to: 'off'
    id: front door closed
    alias: front door closed
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'on'
    to: 'off'
    alias: back door closed
    id: back door closed
  - platform: state
    entity_id:
    - cover.garage_door
    alias: garage door opening
    id: garage door opening
    from: closed
    to: opening
  - platform: state
    entity_id:
    - cover.garage_door
    from: open
    to: closing
    id: garage door closing
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: front door opened
        - condition: trigger
          id: front door closed
        alias: When Front door opened or closed
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - parallel:
        - service: blueiris.trigger_camera
          data: {}
          target:
            entity_id:
            - camera.elitedesk_front_porch
            - camera.elitedesk_living_room
            - camera.elitedesk_pet
            - camera.elitedesk_gym
          alias: record front porch and living room and pet and gym
        - if:
          - condition: state
            entity_id: binary_sensor.front_door
            state: 'on'
          then:
          - service: automation.turn_off
            data: {}
            target:
              entity_id: automation.porch_notification
          - delay:
              hours: 0
              minutes: 0
              seconds: 6
              milliseconds: 0
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.porch_notification
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: back door opened
        - condition: trigger
          id: back door closed
        alias: When back door opened or closed
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
          - camera.elitedesk_living_room
        alias: record living room and backyard
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: garage door opening
        - condition: trigger
          id: garage door closing
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_garage
  mode: parallel
  max: 10
- id: '1666922643665'
  alias: Mail Notification
  description: ''
  trigger:
  - platform: template
    value_template: "{% set trigger = 'false' %}\n{% if now().hour|float(0) > 17 %}\n
      \ {% if state_attr('automation.mail_notification', \n      'last_triggered')
      is not none %}\n    {% if states('sensor.mail_usps_mail') is not none %}\n      {%
      if states('sensor.mail_usps_mail')|int(0) > 0 %}\n        {% if state_attr('automation.mail_notification',
      \n        'last_triggered').day|int(now().day) < now().day %}\n          {%
      if states('input_select.anthony') in ['Home', \n          'Just Arrived'] %}
      {% set trigger = 'true' %}\n          {% elif distance(states.device_tracker.iphone)
      is not none %}\n            {% if distance(states.device_tracker.iphone) < 1.2
      %}\n              {% set trigger = 'true' %}\n            {% endif %}\n          {%
      endif %}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif
      %}\n{% endif %}\n{{ trigger }}"
    id: send notification
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      message: '{{ states(''sensor.mail_usps_mail'') }} {% if states(''sensor.mail_usps_mail'')|float(0)
        == 1 %}peice{%else%}peices{%endif%} of mail were delivered.'
      data:
        entity_id: camera.mail_usps_camera
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
  mode: single
- id: '1667124189208'
  alias: Bathroom Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    alias: door opened
    id: door opened
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    from: 'off'
    to: 'on'
    alias: motion detected
    id: motion detected
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    to: 'off'
    from: 'on'
    id: door closed
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    alias: no motion detected
    id: no motion detected
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - binary_sensor.aqara_lumi_motion_ac01_occupancy
    to: 'off'
    from: 'on'
    alias: fp1
    id: fp1
  - platform: state
    entity_id:
    - binary_sensor.shower
    from: 'on'
    to: 'off'
    alias: shower stopped
    id: shower stopped
  condition: []
  action:
  - choose:
    - conditions:
      - condition: sun
        before: sunrise
        alias: Dark Outside
        after: sunset
      - condition: state
        entity_id: light.fan_lights
        state: 'off'
        alias: Bedroom Lights are off
      - condition: state
        entity_id: light.bathroom_lights
        state: 'off'
        alias: Lights are off
      - condition: or
        conditions:
        - condition: trigger
          id: door opened
        - condition: trigger
          id: motion detected
        alias: Presence Detected
      sequence:
      - type: turn_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
        brightness_pct: 4
        alias: Turn on bathroom lights dimly
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: door opened
        - condition: trigger
          id: motion detected
        alias: Presence Detected
      - condition: state
        entity_id: light.bathroom_lights
        state: 'off'
        alias: Lights are off
      sequence:
      - if:
        - condition: device
          type: is_off
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
        then:
        - type: turn_on
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
          brightness_pct: 100
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: state
        entity_id: binary_sensor.shower
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: door closed
        - condition: trigger
          id: no motion detected
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      sequence:
      - service: timer.start
        data:
          duration: 00:03:00
        target:
          entity_id: timer.bathroom_light
        alias: Start timer
    - conditions:
      - condition: trigger
        id: motion detected
        alias: Motion detected
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
        alias: Cancel Timer, room occupied
    - conditions:
      - condition: state
        entity_id: binary_sensor.shower
        state: 'off'
        alias: Not showering
      - condition: or
        conditions:
        - condition: trigger
          id: timer finished
        - condition: trigger
          id: fp1
        - condition: trigger
          id: shower stopped
      - condition: state
        entity_id: binary_sensor.bathroom_multi_sensor_motion
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 20
      sequence:
      - type: turn_off
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: reload
        - condition: trigger
          id: startup
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      - condition: state
        entity_id: timer.bathroom_light
        state: idle
      - condition: state
        entity_id: binary_sensor.bathroom_multi_sensor_motion
        state: 'off'
      - condition: state
        entity_id: binary_sensor.shower
        state: 'off'
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bathroom_light
  mode: parallel
  max: 10
- id: '1667193576124'
  alias: Alarm Reminder
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    state: unavailable
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Check Alexa App
      title: Morning alarm not set
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
        actions:
        - action: Open Alexa App
          title: Open Alexa App
  mode: single
- id: '1667745697711'
  alias: Ecobee
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.riana
  - platform: state
    entity_id:
    - input_select.anthony
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
    id: reload
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
        - condition: state
          entity_id: input_select.riana
          state: Home
        - condition: state
          entity_id: input_select.riana
          state: Just Arrived
      sequence:
      - service: select.select_option
        data:
          option: home
        target:
          entity_id: select.home_current_mode
      - service: button.press
        data: {}
        target:
          entity_id: button.home_clear_hold
    - conditions:
      - condition: and
        conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Just Left
          - condition: state
            entity_id: input_select.anthony
            state: Away
          alias: anthony away
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.riana
            state: Away
          - condition: state
            entity_id: input_select.riana
            state: Just Left
          alias: riana away
        alias: Nobody Home
      sequence:
      - service: select.select_option
        data:
          option: away
        target:
          entity_id: select.home_current_mode
  mode: single
