- id: '1546210609741'
  alias: Morning Automation
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.anthony_s_echo_show_next_alarm''),
      999999999999) %} {% set current_time = as_timestamp(states(''sensor.date_time'').replace('','',
      ''''), 0) %} {% set pre_time = 2 %} {{ current_time >= alarm_time - pre_time
      }}

      '
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 9
      milliseconds: 0
  - service: automation.turn_off
    data:
      stop_actions: true
    target:
      entity_id: automation.bed_occupancy
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bedroom_lights
  - parallel:
    - service: light.turn_on
      data:
        transition: 45
        effect: None
        brightness: 255
        hs_color:
        - 30.353
        - 33.597
      target:
        entity_id:
        - light.fan_lights
        - light.desk_lights
        - light.bed_lights
        - light.wled
    - service: light.turn_on
      continue_on_error: true
      data:
        effect: Vibrant Sunrise
        brightness_pct: 100
        transition: 45
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
  - delay:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - service: script.turn_on
    data: {}
    target:
      entity_id:
      - script.morning
      - script.play_music
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.bedmotion
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.bed_occupancy
  - event: event_change_nanoleaf
    event_data: {}
  - delay:
      hours: 0
      minutes: 4
      seconds: 0
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id: sensor.anthony_s_echo_show_next_alarm
  mode: single
- id: '1653601692731'
  alias: AC Boost Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    id: buttonpress
    to: 'on'
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    - switch.ac
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
  action:
  - if:
    - condition: trigger
      id: buttonpress
    then:
    - service: climate.set_hvac_mode
      data:
        hvac_mode: cool
      target:
        entity_id: climate.bedroom_ac
    - service: timer.start
      data:
        duration: 0:25:00
      target:
        entity_id: timer.ac
    else:
    - if:
      - condition: state
        entity_id: binary_sensor.shower
        state: 'on'
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - condition: state
        entity_id: input_select.anthony
        state: Home
      then:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
  mode: single
- id: 43a25b65afed4a4680f5ec81172f11e8
  alias: Startup Actions
  description: Set Theme, Ensure Location Input Select is Updated
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.ac_controls
  - parallel:
    - data:
        name: ios-dark-mode-dark-blue
        mode: light
      service: frontend.set_theme
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.govee_cyan
    - if:
      - condition: state
        entity_id: person.anthony
        state: home
      then:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
      else:
      - condition: template
        value_template: '{{ states(''person.anthony'')|lower in [''utd'', ''raytheon'',
          ''away'', ''not_home''] }}'
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.anthony
    - if:
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: timer.start
        data:
          duration: 0
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
    - service: automation.trigger
      data:
        skip_condition: true
      target:
        entity_id: automation.ping_z_wave_devices
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
    - service: switch.turn_on
      data: {}
      target:
        entity_id:
        - switch.airport_express
        - switch.lumi_lumi_plug_maus01_switch_3
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.ac_controls
  - service: homeassistant.reload_config_entry
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_kitchen_homepod
      - media_player.owntone_output_kitchen_right
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_nightstand
      - media_player.owntone_output_garage
      - media_player.owntone_output_guest_tv
      - media_player.owntone_output_guest_left
      - media_player.owntone_output_guest_right
  - if:
    - condition: state
      entity_id: media_player.owntone_output_bathroom
      state: 'on'
    - condition: state
      entity_id: light.bathroom_lights
      state: 'off'
    then:
    - service: media_player.turn_off
      data: {}
      target:
        entity_id: media_player.owntone_output_bathroom
  initial_state: true
  mode: single
- id: '1620642299524'
  alias: Motion Bypass Control
  description: Turn lights on if bed motion sensing bypass is enabled
  trigger:
  - platform: state
    entity_id: input_boolean.bedmotion
    to: 'on'
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - service: script.morning
    data: {}
  mode: single
- id: '1621577255605'
  alias: Left Home
  description: Turns bedroom off when leaving home, and ensures bedroom stays off
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    from: Home
    to: Just Left
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.anthony
        state: unavailable
      - condition: state
        entity_id: person.anthony
        state: unknown
  action:
  - parallel:
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.night
      alias: Turn off room
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - switch.ac
        - input_boolean.privacy
        - media_player.owntone_server
    - if:
      - condition: numeric_state
        entity_id: zone.home
        below: 1
        alias: If home empty
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        alias: And back door closed
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.living_room_lights
          - light.kitchen_lights
          - light.hallway_lights
          - light.bathroom_lights
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - light.living_room_lights
          - light.kitchen_lights
          - light.hallway_lights
          - light.bathroom_lights
          - switch.lrtv
          - switch.living_room_fan
          - switch.porch_light
          - switch.laundry_room_light
          - switch.dining_room_light
          - light.master_hallway_light
          - media_player.living_room_denon
          - switch.fronttv
      - if:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        then:
        - service: script.stop_music
          data: {}
      alias: If home empty, turn off
    - if:
      - condition: state
        entity_id: switch.exhaust_fan
        state: 'on'
        alias: If exhaust fan on
      - condition: state
        entity_id: timer.exhaust
        state: idle
        alias: And Timer not running
      then:
      - service: timer.start
        data:
          duration: 0
        target:
          entity_id: timer.exhaust
        alias: Start timer
      alias: Start exhaust fan timer if not running
    - condition: state
      entity_id: switch.fronttv
      state: 'on'
  mode: single
- id: '1627443167507'
  alias: Bedroom Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: Motion
  - platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closetopen
  - platform: state
    entity_id: binary_sensor.closet
    from: 'on'
    to: 'off'
    id: closetclosed
  condition:
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: closetopen
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: Motion
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom door has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: closetclosed
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been closed
          title: Motion detected in bedroom
          data:
            group: bedroom
    default: []
  mode: single
- id: '1627778209718'
  alias: Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    for:
      hours: 0
      minutes: 40
      seconds: 0
    id: Home
  - platform: state
    entity_id: input_select.anthony
    id: Away
    to: Just Left
    for: 00:10:00
  - platform: state
    entity_id:
    - person.anthony
    to: home
    id: Just Arrived
  - platform: state
    entity_id:
    - person.anthony
    from: home
    id: Just Left
  - platform: state
    entity_id:
    - person.anthony
    to: utd
    id: utd
  - platform: state
    entity_id:
    - person.anthony
    to: raytheon
    id: raytheon
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unavailable
  - condition: not
    conditions:
    - condition: state
      entity_id: person.anthony
      state: unknown
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: trigger
          id: raytheon
        - condition: trigger
          id: utd
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Away
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Arrived
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Left
    default: []
  mode: single
- id: '1627779396737'
  alias: Door Opened
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    to: 'on'
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - parallel:
        - service: script.turn_on
          data: {}
          target:
            entity_id:
            - script.morning
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: media_player.owntone_server
              state: playing
          then:
          - service: script.turn_on
            data: {}
            target:
              entity_id: script.lofi
        - if:
          - condition: template
            value_template: "{{ not (state_attr('media_player.spotify_anthony221121',
              'media_playlist') \n        is defined and \n        state_attr('media_player.spotify_anthony221121',
              'media_playlist') \n        is not none and not 'lofi' in \n        state_attr('media_player.spotify_anthony221121',
              'media_playlist')) \n    and state_attr('media_player.spotify_anthony221121',
              'volume_level') < 0.16}}"
          then:
          - repeat:
              count: '3'
              sequence:
              - service: media_player.volume_set
                data:
                  volume_level: 0.13
                target:
                  entity_id:
                  - media_player.spotify_anthony221121
                  - media_player.owntone_output_desk
              - service: media_player.volume_set
                data:
                  volume_level: 0.26
                target:
                  entity_id:
                  - media_player.owntone_output_nightstand
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
        - if:
          - condition: numeric_state
            entity_id: climate.bedroom_ac
            above: 68
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id:
              - switch.ac_boost
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: time
        after: 07:00:00
        before: 01:00:00
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - parallel:
        - choose:
          - conditions:
            - condition: state
              entity_id: light.fan_lights
              state: 'off'
            sequence:
            - service: script.color_loop
              data: {}
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            - service: light.turn_on
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
              data:
                brightness_pct: 100
          - conditions:
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            sequence:
            - service: light.turn_on
              target:
                entity_id:
                - light.shapes_007f
                - light.shapes_ee82
              data:
                brightness_pct: 100
          default: []
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.bedmotion
    default: []
  mode: single
- id: '1627966300438'
  alias: Close Blinds When Dark
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
  condition:
  - condition: state
    entity_id: cover.bedroom_blinds
    state: open
  action:
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.bedroom_blinds
  mode: single
- id: '1629524719390'
  alias: Closet Lights Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.closet
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
          brightness_pct: 2
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          brightness_pct: 100
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'off'
      - condition: state
        entity_id: light.closet_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.closet_lights
    default: []
  mode: single
- id: '1644476253725'
  alias: Bed Occupancy Detected
  description: If motion detected in bed under certain circumstances, turn off overhead
    lights.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.bedmotion
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        before: 05:00:00
        after: '22:00:00'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.webcam
        state: 'on'
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.call
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.living_room_fan
    default:
    - if:
      - condition: state
        entity_id: light.fan_lights
        state: 'on'
      then:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
      alias: Fan Lights Off
    - if:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: numeric_state
        entity_id: zone.home
        below: 2
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.bathroom_lights
          - light.living_room_lights
          - light.kitchen_cabinet_lights
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.living_room_fan
          - switch.fronttv
          - switch.lrtv
          - switch.guesttv
          - switch.laundry_room_light
          - switch.gym_fan
          - switch.dining_room_light
          - light.master_hallway_light
          - switch.rotunda_lights
          - switch.garage_light
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.privacy
    - service: media_player.turn_off
      data: {}
      target:
        entity_id:
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_front
        - media_player.owntone_output_garage
        - media_player.kitchen_speakers
        - media_player.owntone_output_living_room_tv
        - media_player.guest_homepods
        - media_player.owntone_output_guest_tv
    - if:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: media_player.owntone_output_desk
          attribute: volume_level
          above: 0.15
        - condition: numeric_state
          entity_id: media_player.owntone_output_nightstand
          attribute: volume_level
          above: 0.15
      then:
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: Music
        then:
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.18
              target:
                entity_id:
                - media_player.spotify_anthony221121
                - media_player.owntone_output_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.36
              target:
                entity_id:
                - media_player.owntone_output_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        else:
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.13
              target:
                entity_id:
                - media_player.spotify_anthony221121
                - media_player.owntone_output_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.26
              target:
                entity_id:
                - media_player.owntone_output_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
  - if:
    - condition: time
      before: 05:00:00
      after: '22:00:00'
    - condition: state
      entity_id: switch.desktop
      state: 'off'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.usb_hub
  mode: single
- id: '1645695901319'
  alias: Enable Morning Automation
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    to: unavailable
    id: no alarm
  - platform: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    from: unavailable
    id: alarm
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.morning_lights_on
    - conditions:
      - condition: trigger
        id: no alarm
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.morning_lights_on
    default: []
  mode: restart
- id: '1652125399924'
  alias: Riana Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.riana
    to: Just Arrived
    for: 00:20:00
    id: Home
  - platform: state
    entity_id:
    - person.riana
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: leave
    id: Just Left
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Home
        - condition: and
          conditions:
          - condition: state
            entity_id: input_select.riana
            state: Just Arrived
            for:
              hours: 0
              minutes: 20
              seconds: 0
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Away
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reloaded
          - condition: state
            entity_id: input_select.riana
            state: Just Left
            for:
              hours: 0
              minutes: 10
              seconds: 0
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.riana
    default: []
  mode: single
- id: '1656373322370'
  alias: Cool Room
  description: ''
  trigger:
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: enter
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.riana
      state: Just Arrived
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - condition: state
    state: Just Arrived
    entity_id: input_select.anthony
  - wait_for_trigger:
    - platform: state
      entity_id:
      - cover.garage_door
    - platform: state
      entity_id:
      - lock.front_door
    continue_on_timeout: false
    timeout: 00:30:00
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.ac_boost
  - wait_for_trigger:
    - platform: zone
      entity_id: person.anthony
      zone: zone.home
      event: leave
    continue_on_timeout: false
    timeout: 00:25:00
  - service: climate.turn_off
    data: {}
    target:
      entity_id: climate.bedroom_ac
  mode: single
- id: '1658727301790'
  alias: USB Control
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: state
    entity_id:
    - light.desk_lights
    - light.fan_lights
    - switch.desktop
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - input_select.anthony
    from: home
    to: Just Left
  condition:
  - condition: state
    entity_id: switch.usb_hub
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      before: '22:00:00'
      after: 05:00:00
    - condition: state
      entity_id: switch.desktop
      state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.usb_hub
  mode: queued
- id: '1660977660346'
  alias: Set Temperature
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ac_thermostat_temperature
  - platform: state
    entity_id:
    - switch.ac
    - input_boolean.ac_boost
    to: 'on'
  condition:
  - condition: template
    value_template: "{% set trigger = 'false' %}\n{% if is_state('input_boolean.ac_boost',
      'on') %} \n  {% set trigger = 'true' %}\n{% elif not is_state('sensor.ac_thermostat_temperature',
      'unknown') \n  and states('sensor.ac_thermostat_temperature') is not none %}\n
      \ {% if not is_state_attr('climate.bedroom_ac', \"temperature\", \n  states('sensor.ac_thermostat_temperature')|int(61))
      %} \n    {% set trigger = 'true' %}\n  {% endif %}\n{% endif %}\n{{ trigger
      }}"
  - condition: state
    entity_id: switch.ac
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    then:
    - service: climate.set_temperature
      data:
        hvac_mode: cool
        temperature: '{{states(''sensor.ac_thermostat_temperature'') |int(61)}}'
      target:
        entity_id: climate.bedroom_ac
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - if:
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: climate.set_preset_mode
        data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: climate.set_preset_mode
        data:
          preset_mode: boost
        target:
          entity_id: climate.bedroom_ac
      else:
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: climate.set_preset_mode
        data:
          preset_mode: none
        target:
          entity_id: climate.bedroom_ac
    else:
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.ac
  mode: queued
- id: '1661502555805'
  alias: Nanoleaf Scene Changer and Auto Brightness
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nanoleaf_scene
    - sensor.nanoleaf_auto_brightness
  - platform: event
    event_type: script_started
    context: {}
  - platform: event
    event_type: event_template_reloaded
  - platform: event
    event_type: automation_reloaded
    id: reloaded
  - platform: state
    entity_id:
    - light.shapes_007f
    from: unavailable
    to: 'on'
  - platform: state
    entity_id:
    - light.shapes_ee82
    from: unavailable
    to: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: script.night
      state: 'on'
  action:
  - if:
    - condition: trigger
      id: reloaded
    - condition: state
      entity_id: light.bedroom_lights
      state: 'off'
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
    - stop: ''
  - wait_template: "  {{ (not states('sensor.nanoleaf_scene') in (\"unavailable\",
      \"unknown\") and not \n\n  is_state_attr('light.shapes_007f', \"effect\", states('sensor.nanoleaf_scene')))\n\n
      \ or \n\n  (not states('sensor.nanoleaf_auto_brightness') in (\"unavailable\",
      \"unknown\")\n  and not \n\n  is_state_attr('light.shapes_007f', \"brightness\",\n
      \ states('sensor.nanoleaf_auto_brightness')|int - 2))\n\nor \n\n(not states('sensor.nanoleaf_scene')
      in (\"unavailable\", \"unknown\") and not \n\n  is_state_attr('light.shapes_ee82',
      \"effect\", states('sensor.nanoleaf_scene')))\n\n  or \n\n  (not states('sensor.nanoleaf_auto_brightness')
      in (\"unavailable\", \"unknown\")\n  and not \n\n  is_state_attr('light.shapes_ee82',
      \"brightness\",\n  states('sensor.nanoleaf_auto_brightness')|int - 2))\n\n\n\n}}"
    continue_on_timeout: false
    timeout: 00:05:00
  - parallel:
    - repeat:
        until:
        - condition: template
          value_template: "      {{  is_state('sensor.nanoleaf_auto_brightness', '0')
            or\n      (\n      (is_state_attr('light.shapes_007f', \"effect\",\n      states('sensor.nanoleaf_scene'))\n\n
            \     and\n\n      is_state_attr('light.shapes_ee82', \"effect\",\n      states('sensor.nanoleaf_scene')))\n\n
            \     )}}"
        sequence:
        - if:
          - condition: template
            value_template: "{{ not states('sensor.nanoleaf_scene') in (\"unavailable\",
              \"unknown\") and not \n\n(is_state_attr('light.shapes_007f', \"effect\",
              states('sensor.nanoleaf_scene'))\nand\nis_state_attr('light.shapes_ee82',
              \"effect\", states('sensor.nanoleaf_scene'))\n)}}"
          then:
          - service: light.turn_on
            continue_on_error: true
            target:
              entity_id:
              - light.shapes_007f
              - light.shapes_ee82
            data:
              effect: '{{ states(''sensor.nanoleaf_scene'') }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
    - repeat:
        until:
        - condition: template
          value_template: "{{ \n(is_state_attr('light.shapes_007f', \"brightness\",
            states('sensor.nanoleaf_auto_brightness')|int - 2) \nand \nis_state_attr('light.shapes_ee82',
            \"brightness\", states('sensor.nanoleaf_auto_brightness')|int - 2) )}}"
        sequence:
        - if:
          - condition: template
            value_template: "{{not states('sensor.nanoleaf_auto_brightness') in (\"unavailable\",
              \"unknown\") and not \n(is_state_attr('light.shapes_007f', \"brightness\",
              states('sensor.nanoleaf_auto_brightness')|int - 2) \nand \nis_state_attr('light.shapes_ee82',
              \"brightness\", states('sensor.nanoleaf_auto_brightness')|int - 2) )}}"
          then:
          - service: light.turn_on
            continue_on_error: true
            target:
              entity_id:
              - light.shapes_007f
              - light.shapes_ee82
            data:
              brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
  mode: restart
- id: '1661505890362'
  alias: Spotify Refresh
  description: ''
  trigger:
  - platform: event
    event_type: automation_reloaded
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
    to: Home
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    to: paused
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    to: playing
  condition: []
  action:
  - repeat:
      while:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: or
        conditions:
        - condition: state
          entity_id: pyscript.airport_playing
          state: 'True'
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: playing
        - condition: state
          entity_id: media_player.spotify_anthony221121
          state: paused
      sequence:
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
  mode: single
- id: '1661880635465'
  alias: Suggest Starting Car
  description: ''
  trigger:
  - platform: template
    value_template: "{{ states(\"person.anthony\")|lower in [\"utd\"] and \n\nis_state(\"binary_sensor.workday_sensor\",
      \"on\") and\n\n  ( now().hour == 11 and now().minute == 40 and\n  ( now().weekday()
      in [0, 2, 4]) or\n\n  ( now().hour == 12 and now().minute == 40 and\n  now().weekday()
      in [1, 3]) or\n  \n  ( now().hour == 16 and now().minute == 25 and\n  now().weekday()
      == 3)) \n}}"
  - platform: state
    entity_id:
    - binary_sensor.shower
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      data:
        tag: car
        shortcut:
          name: Start My Car
          ignore_result: ignore
      message: Start car?
  mode: single
- id: '1664335198513'
  alias: Backyard Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door
  - platform: homeassistant
    event: start
  - platform: sun
    event: sunset
    offset: 0
    enabled: true
  - platform: sun
    event: sunrise
    offset: 0
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.back_door
      state: 'on'
    - condition: sun
      before: sunrise
      after: sunset
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.porch_light
      enabled: true
    else:
    - condition: state
      entity_id: binary_sensor.back_door
      state: 'off'
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.porch_light
  mode: parallel
  max: 10
- id: '1664505341968'
  alias: Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.dana
      state: home
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
    - condition: state
      entity_id: input_select.riana
      state: Home
    - condition: numeric_state
      entity_id: zone.home
      above: 1
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - cover.garage_door
    - platform: state
      entity_id:
      - lock.front_door
    continue_on_timeout: false
    timeout: 00:30:00
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.entry_doors
      to: 'on'
    continue_on_timeout: false
  - if:
    - type: is_temperature
      condition: device
      device_id: a2fc25d35733afab37fd7be1a943cdcf
      entity_id: sensor.home_current_temperature
      domain: sensor
      above: 70
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.living_room_fan
    enabled: true
  - if:
    - condition: sun
      before: sunrise
      after: sunset
      after_offset: -00:45:00
    then:
    - service: light.turn_on
      data:
        brightness_pct: 15
      target:
        entity_id:
        - light.kitchen_lights
        - light.hallway_lights
  - parallel:
    - if:
      - condition: sun
        before: sunrise
        after: sunset
        after_offset: -00:45:00
      then:
      - service: light.turn_on
        data:
          brightness_pct: 15
        target:
          entity_id:
          - light.kitchen_lights
          - light.hallway_lights
      alias: Turn on Lights
    - if:
      - type: is_temperature
        condition: device
        device_id: a2fc25d35733afab37fd7be1a943cdcf
        entity_id: sensor.home_current_temperature
        domain: sensor
        above: 70
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.living_room_fan
      enabled: true
    - service: lock.unlock
      data: {}
      target:
        entity_id: lock.back_door
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.lofi
  mode: single
- id: '1664570555449'
  alias: Turn on TV
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room_tv
    to: playing
  condition: []
  action:
  - service: media_player.turn_on
    data: {}
    target:
      entity_id: media_player.living_room
  mode: single
- id: '1665076615181'
  alias: Dog Food Reminder
  description: ''
  trigger:
  - platform: time
    at: '10:30:00'
    id: Breakfast
  - platform: time
    at: '18:00:00'
    id: Dinner
  - platform: time
    at: 02:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    id: Feeding
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.dog_food
    from: 'on'
    to: 'off'
    id: Feeding2
  - platform: time
    at: '16:30:00'
    alias: Dinner Time
    id: DinnerTime
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    id: arrived
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Breakfast
      - condition: state
        entity_id: input_boolean.breakfast
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't eaten breakfast yet
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't eaten breakfast yet
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: Dinner
      - condition: state
        entity_id: input_boolean.dinner
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't eaten dinner yet
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't eaten dinner yet
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.breakfast
          - input_boolean.dinner
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Feeding
        - condition: trigger
          id: Feeding2
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 00:00:01
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.breakfast
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.breakfast
            else:
            - service: notify.mobile_app_iphone
              data:
                message: Lola already ate breakfast
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
        - conditions:
          - condition: time
            before: '23:59:59'
            after: '14:30:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.dinner
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.dinner
            else:
            - service: notify.mobile_app_iphone
              data:
                message: Lola already ate dinner
                data:
                  push:
                    sound:
                      name: default
                      critical: 1
                      volume: 0.3
              enabled: false
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-food
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
    - conditions:
      - condition: trigger
        id: DinnerTime
      - condition: state
        entity_id: input_boolean.dinner
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: numeric_state
        entity_id: zone.home
        below: 2
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-food
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
    - conditions:
      - condition: trigger
        id: arrived
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.dinner
            state: 'off'
          - condition: time
            after: '16:30:00'
          alias: Hasn't eaten dinner
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.breakfast
            state: 'off'
          - condition: time
            after: 08:00:00
            before: '15:00:00'
          alias: Hasn't eaten breakfast
      - condition: numeric_state
        entity_id: zone.home
        below: 2
      sequence:
      - if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.dinner
            state: 'off'
          - condition: time
            after: '16:30:00'
          alias: Hasn't eaten dinner
        then:
        - service: notify.mobile_app_iphone
          data:
            message: clear_notification
            data:
              tag: dog-food
        - service: notify.mobile_app_iphone
          data:
            message: It's time to feed Lola dinner
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.breakfast
            state: 'off'
          - condition: time
            after: 08:00:00
            before: '15:00:00'
          alias: Hasn't eaten breakfast
        - service: notify.mobile_app_iphone
          data:
            message: clear_notification
            data:
              tag: dog-food
        - service: notify.mobile_app_iphone
          data:
            message: It's time to feed Lola breakfast
            data:
              tag: dog-food
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
  mode: single
- id: '1665170199807'
  alias: Privacy
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /2
  condition:
  - condition: template
    value_template: '{{ states(''group.indoor_cams'') == states(''input_boolean.privacy'')}} '
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.indoor_cams
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.elitedesk_profile_profile_2
    - conditions:
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id:
          - group.indoor_cams
          - switch.elitedesk_profile_profile_1
  mode: single
- id: '1665186115040'
  alias: Dog Medicine Reminder
  description: ''
  trigger:
  - platform: time
    at: '12:00:00'
    id: Morning
  - platform: time
    at: '22:00:00'
    id: Night
  - platform: time
    at: 02:30:01
    id: Reset
  - platform: state
    entity_id:
    - binary_sensor.shock
    id: GivingPill
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.morning_medicine
    to: 'on'
    for:
      hours: 12
      minutes: 0
      seconds: 0
    alias: night medicine reminder
    id: night medicine reminder
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Morning
      - condition: state
        entity_id: input_boolean.morning_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
    - conditions:
      - condition: trigger
        id: Night
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: Lola hasn't gotten her medicine yet
            data:
              tag: dog-medicine
    - conditions:
      - condition: trigger
        id: Reset
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id:
          - input_boolean.morning_medicine
          - input_boolean.night_medicine
    - conditions:
      - condition: trigger
        id: GivingPill
      sequence:
      - choose:
        - conditions:
          - condition: time
            before: '14:30:00'
            after: 06:00:00
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.morning_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.morning_medicine
            else: []
        - conditions:
          - condition: time
            before: 02:30:00
            after: '17:00:00'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.night_medicine
              state: 'off'
            then:
            - service: input_boolean.turn_on
              data: {}
              target:
                entity_id: input_boolean.night_medicine
            else: []
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-medicine
    - conditions:
      - condition: trigger
        id: night medicine reminder
      - condition: time
        before: '21:15:00'
        after: 00:00:00
      - condition: state
        entity_id: input_boolean.night_medicine
        state: 'off'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: dog-medicine
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        - condition: numeric_state
          entity_id: zone.home
          below: 2
        then:
        - service: notify.mobile_app_iphone
          data:
            message: It's time to give Lola her medicine
            data:
              tag: dog-medicine
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 0.3
        else:
        - service: notify.mobile_app_iphone
          data:
            message: It's time to give Lola her medicine
            data:
              tag: dog-medicine
  mode: single
- id: '1665630167045'
  alias: Turn on home lights at night
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:25:00
    id: sunset
  - platform: sun
    event: sunrise
    offset: '+45'
    alias: Sunrise
    id: Sunrise
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.riana
      state: Home
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
    - condition: numeric_state
      entity_id: zone.home
      above: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - if:
        - condition: state
          entity_id: light.kitchen_lights
          state: 'off'
        then:
        - service: light.turn_on
          data:
            brightness_pct: 18
          target:
            entity_id:
            - light.kitchen_lights
        alias: Kitchen Lights
      - if:
        - condition: state
          entity_id: light.hallway_lights
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: input_select.anthony
            state: Home
          - condition: state
            entity_id: input_select.anthony
            state: Just Arrived
        then:
        - service: light.turn_on
          data:
            brightness_pct: 22
          target:
            entity_id:
            - light.hallway_lights
        alias: Hallway Lights
    - conditions:
      - condition: trigger
        id: Sunrise
      - condition: state
        entity_id: weather.dark_sky
        state: sunny
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.kitchen_lights
          - light.hallway_lights
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.porch_light
  mode: single
- id: '1665630463210'
  alias: 'Only one home automations '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room_tv
    - media_player.front
    to: playing
  - platform: state
    entity_id:
    - light.living_room_lights
    - switch.living_room_fan
    - input_boolean.morning_medicine
    - input_boolean.night_medicine
    - input_boolean.breakfast
    - input_boolean.dinner
    - binary_sensor.back_door
    - binary_sensor.laundry_room_motion
    - binary_sensor.kitchen
    - binary_sensor.entry_doors
    - light.kitchen_cabinet_lights
    - switch.dining_room_light
    - switch.rotunda_lights
    - switch.gym_fan
    - binary_sensor.dining_room_occupancy
    to: 'on'
    from: 'off'
  - platform: state
    entity_id:
    - lock.front_door
    - binary_sensor.back_door
    to: unlocked
  condition:
  - condition: state
    entity_id: input_select.anthony
    state: Home
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.riana
      state: Home
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
    - condition: state
      entity_id: switch.desktop
      state: 'on'
    - condition: state
      entity_id: input_boolean.ac_boost
      state: 'on'
    - condition: state
      entity_id: binary_sensor.bed_occupancy
      state: 'on'
  - condition: numeric_state
    entity_id: zone.home
    below: 2
  - condition: or
    conditions:
    - condition: state
      entity_id: switch.ac
      state: 'on'
    - condition: state
      entity_id: input_boolean.bedmotion
      state: 'on'
    - condition: and
      conditions:
      - condition: state
        entity_id: media_player.kitchen_speakers
        state: 'off'
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: media_playlist
        state: lofi
      - condition: state
        entity_id: media_player.owntone_server
        state: playing
  action:
  - if:
    - condition: state
      entity_id: switch.ac
      state: 'on'
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.ac
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.ac_boost
    alias: AC
  - if:
    - condition: state
      entity_id: input_boolean.bedmotion
      state: 'on'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.bedmotion
    alias: Turn off Motion Bypass
  - if:
    - condition: state
      entity_id: media_player.kitchen_speakers
      state: 'off'
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: playing
    - condition: state
      entity_id: media_player.spotify_anthony221121
      attribute: media_playlist
      state: lofi
    - condition: state
      entity_id: media_player.owntone_server
      state: playing
    then:
    - repeat:
        count: '7'
        sequence:
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.kitchen_speakers
            - media_player.owntone_output_kitchen_homepod
            - media_player.owntone_output_kitchen_right
        - service: media_player.volume_set
          data:
            volume_level: 0.45
          target:
            entity_id:
            - media_player.kitchen_speakers
            - media_player.owntone_output_kitchen_homepod
            - media_player.owntone_output_kitchen_right
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
    alias: Turn on Kitchen HomePods
  mode: single
- id: '1665996041801'
  alias: Katchy
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_select.anthony
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    then:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.katchy
    else:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Left
      - condition: state
        entity_id: input_select.anthony
        state: Away
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.katchy
  mode: single
- id: '1666368810191'
  alias: Exhaust Fan
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.exhaust
    id: done
    alias: When timer finishes
  - platform: state
    entity_id:
    - binary_sensor.showering
    from: 'off'
    to: 'on'
    alias: When shower is turned on
    id: showerstart
  - platform: homeassistant
    event: start
    id: restart
  - platform: event
    event_type: automation_reloaded
    alias: reload
    id: reload
  - platform: template
    value_template: "{% if states.switch.exhaust_fan.last_changed is defined %}\n
      \ {% if as_timestamp(states.switch.exhaust_fan.last_changed)|timestamp_local
      is defined %}\n    {{ is_state('switch.exhaust_fan', 'on') and is_state('switch.light.bathroom_lights',
      'on') and\n       as_timestamp(states.switch.exhaust_fan.last_changed) > as_timestamp(now())
      - (3600) }}\n  {%endif%}\n{%endif%}"
    alias: turn off
    id: turn off
  - platform: device
    type: turned_off
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: lights turned off
  - platform: device
    type: turned_on
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: turned on
  - platform: device
    type: turned_off
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: turned off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: device
        type: is_on
        device_id: 7c247296aac3c00b267bb165baab5a7c
        entity_id: switch.exhaust_fan
        domain: switch
      - condition: device
        type: is_off
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - condition: or
        conditions:
        - condition: trigger
          id: lights turned off
        - condition: trigger
          id: turned on
      - condition: or
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: timer.exhaust
            state: active
          alias: Timer not active
        - condition: template
          value_template: '{{ is_state(''input_boolean.bathroom_occupied'', ''off'')
            and

            (now() - states.input_boolean.bathroom_occupied.last_changed).total_seconds()
            < 5 }}'
          alias: Bathroom Occupied was on prior to light turning off
      sequence:
      - service: timer.start
        data:
          duration: 00:15:00
        target:
          entity_id: timer.exhaust
    - conditions:
      - condition: trigger
        id: done
      - condition: not
        conditions:
        - condition: state
          entity_id: timer.exhaust
          state: active
        - condition: state
          entity_id: binary_sensor.showering
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'off'
        - condition: state
          entity_id: input_boolean.bathroom_occupied
          state: 'on'
        alias: Confirm fan is off, shower is off, timer is off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
    - conditions:
      - condition: trigger
        id: showerstart
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.exhaust_fan
      - if:
        - condition: numeric_state
          entity_id: sensor.bedroom_acurite_temperature
          above: 72
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.ac_boost
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: restart
        - condition: trigger
          id: reload
        alias: restart/reload
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.showering
          state: 'on'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'on'
        alias: shower / fan on
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.showering
          state: 'on'
        then:
        - service: timer.cancel
          data: {}
          target:
            entity_id: timer.exhaust
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.exhaust_fan
        else:
        - condition: state
          entity_id: binary_sensor.showering
          state: 'off'
        - condition: state
          entity_id: timer.exhaust
          state: idle
        - condition: device
          type: is_off
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
        - service: timer.start
          data: {}
          target:
            entity_id: timer.exhaust
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: turn off
        - condition: trigger
          id: turned off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.exhaust_fan
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
  mode: queued
  max: 10
- id: '1666480822238'
  alias: Laundry Room Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'on'
    to: 'off'
    alias: cleared
    id: cleared
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_motion
    from: 'off'
    to: 'on'
    alias: detected
    id: detected
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.laundry_room_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - switch.laundry_room_light
    from: 'on'
    to: 'off'
    alias: manually turned off
    id: manually turned off
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'off'
    to: 'on'
    id: door opened
    alias: door opened
  - platform: state
    entity_id:
    - binary_sensor.laundry_room_door
    from: 'on'
    to: 'off'
    alias: door closed
    id: door closed
  - device_id: 646618a4497e6564b3f03617283d2a35
    domain: zha
    platform: device
    type: Leave
    subtype: sensor
    id: fp1 leave
  - device_id: 646618a4497e6564b3f03617283d2a35
    domain: zha
    platform: device
    type: Enter
    subtype: sensor
    id: fp1 enter
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: detected
        - condition: and
          conditions:
          - condition: trigger
            id: fp1 enter
          - condition: state
            entity_id: binary_sensor.laundry_room_door
            state: 'on'
        - condition: and
          conditions:
          - condition: trigger
            id: door opened
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 6
        alias: door opened or motion detected
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'on'
          alias: if light off
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.laundry_room_light
        else:
        - service: timer.start
          data:
            duration: 00:01:00
          target:
            entity_id: timer.laundry_room_light
    - conditions:
      - condition: state
        entity_id: switch.laundry_room_light
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: cleared
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: reload
            - condition: trigger
              id: startup
          - condition: state
            entity_id: timer.laundry_room_light
            state: idle
        alias: no motion or home assistant/automations reloaded
      sequence:
      - service: timer.start
        data:
          duration: 00:01:00
        target:
          entity_id: timer.laundry_room_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: fp1 leave
        - condition: and
          conditions:
          - condition: trigger
            id: door closed
          - condition: state
            entity_id: binary_sensor.laundry_room_occupancy
            state: 'off'
          - condition: state
            entity_id: switch.laundry_room_light
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 7
        - condition: trigger
          id: manually turned off
        - condition: and
          conditions:
          - condition: trigger
            id: timer finished
          - condition: not
            conditions:
            - condition: state
              entity_id: switch.laundry_room_light
              state: 'off'
            - condition: state
              entity_id: binary_sensor.laundry_room_motion
              state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.laundry_room_light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.laundry_room_light
  mode: queued
  max: 10
- id: '1666594099613'
  alias: Ping Z-Wave Devices
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.hallway_lights
    - switch.katchy
    - switch.gym_fan
    - switch.living_room_fan
    - switch.porch_light
    - switch.dining_room_light
    - light.master_hallway_light
    - switch.airport_express
    - switch.rotunda_lights
    - light.kitchen_cabinet_lights
    - switch.garage_light
    to: unavailable
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.hallway_lights
      state: unavailable
    - condition: state
      entity_id: switch.katchy
      state: unavailable
    - condition: state
      entity_id: switch.gym_fan
      state: unavailable
    - condition: state
      entity_id: switch.living_room_fan
      state: unavailable
    - condition: state
      entity_id: switch.porch_light
      state: unavailable
    - condition: state
      entity_id: switch.dining_room_light
      state: unavailable
    - condition: state
      entity_id: light.master_hallway_light
      state: unavailable
    - condition: state
      entity_id: switch.airport_express
      state: unavailable
    - condition: state
      entity_id: switch.rotunda_lights
      state: unavailable
    - condition: state
      entity_id: light.kitchen_cabinet_lights
      state: unavailable
    - condition: state
      entity_id: switch.garage_light
      state: unavailable
    alias: Any device unavailable
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - repeat:
      until:
      - condition: not
        conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: light.hallway_lights
            state: unavailable
          - condition: state
            entity_id: switch.exhaust_fan
            state: unavailable
          - condition: state
            entity_id: switch.katchy
            state: unavailable
          - condition: state
            entity_id: switch.gym_fan
            state: unavailable
          - condition: state
            entity_id: switch.living_room_fan
            state: unavailable
          - condition: state
            entity_id: switch.porch_light
            state: unavailable
          - condition: state
            entity_id: switch.laundry_room_light
            state: unavailable
          - condition: state
            entity_id: light.bathroom_lights
            state: unavailable
          - condition: state
            entity_id: switch.dining_room_light
            state: unavailable
          - condition: state
            entity_id: light.master_hallway_light
            state: unavailable
          - condition: state
            entity_id: switch.airport_express
            state: unavailable
          - condition: state
            entity_id: switch.rotunda_lights
            state: unavailable
          - condition: state
            entity_id: light.kitchen_cabinet_lights
            state: unavailable
          - condition: state
            entity_id: switch.garage_light
            state: unavailable
        alias: Until all devices available
      sequence:
      - parallel:
        - if:
          - condition: state
            entity_id: light.hallway_lights
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id: button.node_18_ping
        - if:
          - condition: state
            entity_id: switch.exhaust_fan
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_26_ping
        - if:
          - condition: state
            entity_id: switch.katchy
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_22_ping
        - if:
          - condition: state
            entity_id: switch.gym_fan
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.gym_fan_ping
        - if:
          - condition: state
            entity_id: switch.living_room_fan
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.living_room_fan_ping
        - if:
          - condition: state
            entity_id: switch.porch_light
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_26_ping
        - if:
          - condition: state
            entity_id: switch.laundry_room_light
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.laundry_room_light_ping
        - if:
          - condition: state
            entity_id: light.bathroom_lights
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_32_ping
        - if:
          - condition: state
            entity_id: switch.dining_room_light
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.dining_room_light_ping
        - if:
          - condition: state
            entity_id: light.master_hallway_light
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_25_ping
        - if:
          - condition: state
            entity_id: switch.airport_express
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.z_wave_plug_ping
        - if:
          - condition: state
            entity_id: switch.rotunda_lights
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_17_ping
        - if:
          - condition: state
            entity_id: light.kitchen_cabinet_lights
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.node_19_ping
        - if:
          - condition: state
            entity_id: switch.garage_light
            state: unavailable
          then:
          - service: button.press
            data: {}
            target:
              entity_id:
              - button.garage_light_ping
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
  mode: queued
  max: 10
- id: '1666715700705'
  alias: Hallway Lights Manually Turned On
  description: ''
  trigger: []
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id: light.hallway_lights
  mode: single
- id: '1666852312966'
  alias: Frigate
  description: ''
  trigger:
  - platform: mqtt
    topic: frigate/events
    payload: new
    value_template: '{{ value_json.type }}'
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      message: A {{trigger.payload_json["after"]["label"]}} was detected.
      data:
        image: https://maioranihome.duckdns.org/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
        tag: '{{trigger.payload_json["after"]["id"]}}'
        when: '{{trigger.payload_json["after"]["start_time"]|int}}'
        entity_id: camera.{{trigger.payload_json["after"]["camera"]}}
    enabled: false
  - if:
    - condition: state
      entity_id: input_boolean.alexa_notification_sent
      for:
        hours: 0
        minutes: 1
        seconds: 0
      state: 'on'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.alexa_notification_sent
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''porch''
          }}'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: A {{trigger.payload_json["before"]["label"]}} was detected at the
            porch at {{ as_timestamp(now()) | timestamp_custom("%I:%M %p") }}
          data:
            image: https://maioranihome.duckdns.org/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
            tag: '{{trigger.payload_json["after"]["id"]}}'
            when: '{{trigger.payload_json["after"]["start_time"]|int}}'
        enabled: false
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_front_porch
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: binary_sensor.entry_doors
            state: 'on'
          - condition: state
            entity_id: input_boolean.alexa_notification_sent
            state: 'on'
      - service: notify.alexa_media_anthony_s_2nd_echo_show_5_2nd_gen
        data:
          message: Someone is at the front door
          data:
            type: tts
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.alexa_notification_sent
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''backyard''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] == ''garage''
          }}'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_garage
  mode: parallel
  max: 10
- id: '1666854622989'
  alias: Front Porch Notification
  description: ''
  use_blueprint:
    path: hunterjm/frigate_0.10_notification.yaml
    input:
      camera: porch
      base_url: https://maioranihome.duckdns.org
      update_thumbnail: false
      labels:
      - person
      cooldown: 100
      silence_timer: 60
      loiter_timer: 0
      notify_group: anthonys_devices
- id: '1666891695746'
  alias: Camera Triggers
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'off'
    to: 'on'
    id: back door opened
    alias: back door opened
  - platform: state
    entity_id:
    - binary_sensor.front_door
    from: 'off'
    to: 'on'
    id: front door opened
    alias: front door opened
  - platform: state
    entity_id:
    - lock.front_door
    from: 'on'
    to: 'off'
    id: front door closed
    alias: front door closed
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.back_door
    from: 'on'
    to: 'off'
    alias: back door closed
    id: back door closed
  - platform: state
    entity_id:
    - cover.garage_door
    alias: garage door opening
    id: garage door opening
    from: closed
    to: opening
  - platform: state
    entity_id:
    - cover.garage_door
    from: open
    to: closing
    id: garage door closing
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: front door opened
        - condition: trigger
          id: front door closed
        alias: When Front door opened or closed
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - parallel:
        - service: blueiris.trigger_camera
          data: {}
          target:
            entity_id:
            - camera.elitedesk_front_porch
            - camera.elitedesk_living_room
          alias: record front porch and living room and pet and gym
        - if:
          - condition: state
            entity_id: binary_sensor.entry_doors
            state: 'on'
          then:
          - service: automation.turn_off
            data: {}
            target:
              entity_id: automation.porch_notification
          - delay:
              hours: 0
              minutes: 0
              seconds: 6
              milliseconds: 0
          - service: automation.turn_on
            data: {}
            target:
              entity_id: automation.porch_notification
          enabled: false
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: back door opened
        - condition: trigger
          id: back door closed
        alias: When back door opened or closed
      - condition: state
        entity_id: input_boolean.privacy
        state: 'off'
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id:
          - camera.elitedesk_backyard
          - camera.elitedesk_living_room
        alias: record living room and backyard
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: garage door opening
        - condition: trigger
          id: garage door closing
      sequence:
      - service: blueiris.trigger_camera
        data: {}
        target:
          entity_id: camera.elitedesk_garage
  mode: parallel
  max: 10
- id: '1666922643665'
  alias: Mail Notification
  description: ''
  trigger:
  - platform: template
    value_template: "{% set trigger = 'false' %}\n{% if now().hour|float(0) > 16 %}\n
      \ {% if state_attr('automation.mail_notification', \n      'last_triggered')
      is not none %} \n    {% if states('sensor.mail_usps_mail') is not none %}\n
      \     {% if states('sensor.mail_usps_mail')|int(0) > 0 %}\n        {% if ((now()
      - timedelta( days = 1 )) - \n           as_local(state_attr('automation.mail_notification',
      \n          'last_triggered'))).days > 0 %}\n          {% if states('input_select.anthony')
      in ['Home', \n          'Just Arrived'] %} {% set trigger = 'true' %}\n          {%
      elif distance(states.device_tracker.iphone) is not none %}\n            {% if
      distance(states.device_tracker.iphone) < 1.5 %}\n              {% set trigger
      = 'true' %}\n            {% endif %}\n          {% endif %}\n        {% endif
      %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endif %}\n{{ trigger
      }}"
    id: send notification
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      message: clear_notification
      data:
        tag: mail
  - service: notify.mobile_app_iphone
    data:
      message: '{{ states(''sensor.mail_usps_mail'') }} {% if states(''sensor.mail_usps_mail'')|float(0)
        == 1 %}peice{%else%}peices{%endif%} of mail {% if states(''sensor.mail_usps_mail'')|float(0)
        == 1 %}was{%else%}were{%endif%} delivered.'
      data:
        entity_id: camera.mail_usps_camera
        tag: mail
  mode: single
- id: '1667193576124'
  alias: Alarm Reminder
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: sensor.anthony_s_echo_show_next_alarm
    state: unavailable
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Check Alexa App
      title: Morning alarm not set
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
        actions:
        - action: Open Alexa App
          title: Open Alexa App
  mode: single
- id: '1668535366974'
  alias: Connected to Car
  description: ''
  trigger:
  - platform: homeassistant
    event: start
    id: home assistant started
    enabled: false
  - platform: time
    at: 00:00:00
    id: reset
    enabled: false
  - platform: event
    event_type: automation_reloaded
    id: reload
    enabled: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: home assistant started
        - condition: trigger
          id: reload
        enabled: false
      sequence:
      - condition: state
        entity_id: input_boolean.weather_notification_sent
        state: 'off'
        enabled: false
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Away
        - condition: state
          entity_id: input_select.anthony
          state: Just Left
        enabled: false
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.weather_notification_sent
        enabled: false
    - conditions:
      - condition: trigger
        id: reset
        enabled: false
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.weather_notification_sent
        enabled: false
    default:
    - if:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
      then:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.stop_music
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      then:
      - parallel:
        - service: button.press
          data: {}
          target:
            entity_id:
            - button.back_door_wake
            - button.front_door_wake
        - service: notify.mobile_app_iphone
          data:
            message: clear_notification
            data:
              tag: car-reminder
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 500
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.front_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door
          state: 'on'
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: lock.back_door
          state: unlocked
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: weather.dark_sky
            below: 48
            attribute: temperature
          - condition: state
            entity_id: input_boolean.weather_notification_sent
            state: 'off'
          enabled: false
      - condition: template
        value_template: '{{ not is_state(''person.riana'', ''home'')

          and not is_state(''person.dana'', ''home'')

          and states(''zone.home'')|int < 2

          }}'
      - service: notify.mobile_app_iphone
        data:
          message: '{% if is_state(''binary_sensor.front_door'', ''on'') or is_state(''lock.front_door'',
            ''unlocked'') %}The front door is unlocked.{% endif %}{% if is_state(''binary_sensor.back_door'',
            ''on'') or is_state(''lock.back_door'', ''unlocked'') %}The back door
            is unlocked.{% endif %} {% if state_attr(''weather.dark_sky'', ''temperature'')
            is defined %}{% if state_attr(''weather.dark_sky'', ''temperature'')|float(48)
            < 48 %}It is {{state_attr(''weather.dark_sky'', ''temperature'')}}°.{%
            endif %}{% endif %}'
          data:
            tag: car-reminder
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.weather_notification_sent
      enabled: false
    enabled: false
  - if:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      attribute: source
      state: Home Assistant
    then:
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.stop_music
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.front_door
        state: 'on'
      - condition: state
        entity_id: binary_sensor.back_door
        state: 'on'
      - condition: state
        entity_id: lock.front_door
        state: unlocked
      - condition: state
        entity_id: lock.back_door
        state: unlocked
      - condition: and
        conditions:
        - condition: numeric_state
          entity_id: weather.dark_sky
          below: 48
          attribute: temperature
        - condition: state
          entity_id: input_boolean.weather_notification_sent
          state: 'off'
        enabled: false
    then:
    - parallel:
      - service: button.press
        data: {}
        target:
          entity_id:
          - button.back_door_wake
          - button.front_door_wake
      - service: notify.mobile_app_iphone
        data:
          message: clear_notification
          data:
            tag: car-reminder
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: lock.back_door
    - service: homeassistant.update_entity
      data: {}
      target:
        entity_id: lock.back_door
    - delay:
        hours: 0
        minutes: 0
        seconds: 2
        milliseconds: 500
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.front_door
        state: 'on'
      - condition: state
        entity_id: binary_sensor.back_door
        state: 'on'
      - condition: state
        entity_id: lock.front_door
        state: unlocked
      - condition: state
        entity_id: lock.back_door
        state: unlocked
      - condition: and
        conditions:
        - condition: numeric_state
          entity_id: weather.dark_sky
          below: 48
          attribute: temperature
        - condition: state
          entity_id: input_boolean.weather_notification_sent
          state: 'off'
        enabled: false
    - condition: template
      value_template: '{{ not is_state(''person.riana'', ''home'')

        and not is_state(''person.dana'', ''home'')

        and states(''zone.home'')|int < 2

        }}'
    - service: notify.mobile_app_iphone
      data:
        message: '{% if is_state(''binary_sensor.front_door'', ''on'') or is_state(''lock.front_door'',
          ''unlocked'') %}The front door is unlocked.{% endif %}{% if is_state(''binary_sensor.back_door'',
          ''on'') or is_state(''lock.back_door'', ''unlocked'') %}The back door is
          unlocked.{% endif %} {% if state_attr(''weather.dark_sky'', ''temperature'')
          is defined %}{% if state_attr(''weather.dark_sky'', ''temperature'')|float(48)
          < 48 %}It is {{state_attr(''weather.dark_sky'', ''temperature'')}}°.{% endif
          %}{% endif %}'
        data:
          tag: car-reminder
          push:
            sound:
              name: default
              critical: 1
              volume: 0.3
  - service: button.press
    data: {}
    target:
      entity_id: button.tare
  mode: single
- id: '1668564599073'
  alias: Reboot AirPort
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.owntone_server
  - platform: state
    entity_id:
    - media_player.owntone_output_desk
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: media_player.owntone_output_nightstand
        state: 'on'
        for:
          hours: 0
          minutes: 1
          seconds: 0
      - condition: state
        entity_id: media_player.owntone_output_desk
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 5
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
    - condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: unavailable
      - condition: state
        entity_id: media_player.owntone_output_desk
        state: unavailable
        for:
          hours: 0
          minutes: 0
          seconds: 5
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.airport_express
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.airport_express
  - if:
    - condition: not
      conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'on'
          - condition: state
            entity_id: media_player.owntone_output_front
            state: 'on'
          - condition: state
            entity_id: media_player.guest_homepods
            state: 'on'
          - condition: state
            entity_id: media_player.owntone_output_living_room_tv
            state: 'on'
          - condition: template
            value_template: "{{ as_local(state_attr('script.lofi', \n        'last_triggered'))
              > now() - timedelta( minutes = 1 ) \nor as_local(state_attr('script.test',
              \n        'last_triggered')) > now() - timedelta( minutes = 1 )\n}}"
          - condition: state
            entity_id: media_player.owntone_output_nightstand
            state: 'on'
          - condition: state
            entity_id: media_player.kitchen_speakers
            state: 'on'
      alias: If not currently playing
    then:
    - delay:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - stop: ''
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.owntone_output_desk
      from: unavailable
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - repeat:
      until:
      - condition: state
        entity_id: media_player.owntone_output_desk
        state: 'on'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.owntone_output_desk
  - repeat:
      until:
      - condition: template
        value_template: '{{ state_attr(''media_player.owntone_output_desk'', ''volume_level'')
          == state_attr(''media_player.spotify_anthony221121'', ''volume_level'')
          }}

          '
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: '{{ state_attr(''media_player.spotify_anthony221121'', ''volume_level'')
            }}

            '
        target:
          entity_id: media_player.owntone_output_desk
  mode: single
- id: '1668917163074'
  alias: Turn off lights at night
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    before: 04:00:00
    after: '23:55:00'
  - condition: state
    entity_id: light.kitchen_lights
    state: 'on'
  - condition: state
    entity_id: binary_sensor.kitchen_2
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  - condition: state
    entity_id: binary_sensor.master_hall_motion
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  - condition: state
    entity_id: binary_sensor.laundry_room_motion
    state: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.kitchen_lights
      - light.kitchen_cabinet_lights
  mode: single
- id: '1668919603349'
  alias: Bathroom Music
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: light turned on
  - platform: device
    type: changed_states
    device_id: c63a794911c38d9e98cbf969b2bc471b
    entity_id: switch.exhaust_fan
    domain: switch
    id: fan on
  - platform: device
    type: turned_off
    device_id: 3c08610e07933d66eb5347257aae98aa
    entity_id: light.bathroom_lights
    domain: light
    id: lights turned off
  - platform: state
    entity_id:
    - media_player.owntone_output_nightstand
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.showering
    from: 'off'
    to: 'on'
    id: showering on
  - platform: state
    entity_id:
    - binary_sensor.showering
    from: 'on'
    to: 'off'
    id: showering off
  - platform: state
    entity_id:
    - media_player.owntone_output_nightstand
    - media_player.owntone_output_desk
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        state: playing
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      - condition: device
        type: is_on
        device_id: 3c08610e07933d66eb5347257aae98aa
        entity_id: light.bathroom_lights
        domain: light
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
      sequence:
      - if:
        - condition: state
          entity_id: media_player.owntone_output_bathroom
          state: 'off'
        then:
        - repeat:
            until:
            - condition: state
              entity_id: media_player.owntone_output_bathroom
              state: 'on'
              for:
                hours: 0
                minutes: 0
                seconds: 3
            sequence:
            - service: media_player.turn_on
              data: {}
              target:
                entity_id: media_player.owntone_output_bathroom
            - wait_for_trigger:
              - platform: state
                entity_id:
                - media_player.owntone_output_bathroom
                to: 'on'
              timeout:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
          alias: Turn on HomePod
      - repeat:
          count: '3'
          sequence:
          - repeat:
              count: '5'
              sequence:
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id: media_player.owntone_output_bathroom
              - service: media_player.volume_set
                data:
                  volume_level: '{% if states(''binary_sensor.showering'') is defined
                    and is_state(''binary_sensor.showering'', ''on'') %} {% set vol
                    = 0.55 %} {% elif states(''switch.exhaust_fan'') is defined and
                    is_state(''switch.exhaust_fan'', ''on'') %} {% set vol = 0.5 %}
                    {% elif state_attr(''media_player.owntone_output_nightstand'',
                    ''volume_level'') is defined and state_attr(''media_player.owntone_output_nightstand'',
                    ''volume_level'') is not none %}  {% set vol =  state_attr(''media_player.owntone_output_nightstand'',
                    ''volume_level'') %}  {% else %} {% set vol = 0.11 %} {% endif
                    %} {{ vol }}

                    '
                target:
                  entity_id:
                  - media_player.spotify_anthony221121
                  - media_player.owntone_output_bathroom
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
            alias: Set Volume
      - if:
        - condition: trigger
          id: showering on
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.owntone_output_nightstand
            state: 'on'
          - condition: state
            entity_id: media_player.owntone_output_desk
            state: 'on'
        then:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_nightstand
            - media_player.owntone_output_garage
            - media_player.guest_homepods
            - media_player.owntone_output_guest_tv
            - media_player.owntone_output_kitchen_homepod
            - media_player.owntone_output_kitchen_right
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: media_player.spotify_anthony221121
              attribute: media_playlist
              state: Music
          then:
          - service: media_player.play_media
            data:
              media_content_type: playlist
              media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
              enqueue: play
            target:
              entity_id: media_player.spotify_anthony221121
        - repeat:
            count: '5'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.6
              target:
                entity_id:
                - media_player.spotify_anthony221121
                - media_player.owntone_output_bathroom
            - service: media_player.turn_off
              data: {}
              target:
                entity_id:
                - media_player.owntone_output_desk
                - media_player.owntone_output_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        else:
        - condition: trigger
          id: showering off
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
        - repeat:
            count: '3'
            sequence:
            - service: media_player.turn_on
              data: {}
              target:
                entity_id:
                - media_player.owntone_output_nightstand
                - media_player.owntone_output_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.27
              target:
                entity_id:
                - media_player.owntone_output_desk
                - media_player.owntone_output_nightstand
                - media_player.spotify_anthony221121
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.bedmotion
        - service: script.morning
          data: {}
    - conditions:
      - condition: device
        type: is_off
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: 0.11
        target:
          entity_id: media_player.owntone_output_bathroom
      - service: media_player.turn_off
        data: {}
        target:
          entity_id: media_player.owntone_output_bathroom
      - if:
        - condition: trigger
          id: showering off
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
        then:
        - repeat:
            count: '5'
            sequence:
            - service: media_player.turn_on
              data: {}
              target:
                entity_id:
                - media_player.owntone_output_nightstand
                - media_player.owntone_output_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.25
              target:
                entity_id:
                - media_player.owntone_output_desk
                - media_player.owntone_output_nightstand
                - media_player.spotify_anthony221121
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.bedmotion
        - service: script.morning
          data: {}
    - conditions:
      - condition: trigger
        id: showering on
      - condition: or
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: Music
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.play_music
  mode: queued
  max: 100
- id: '1668919655434'
  alias: Bathroom Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
    alias: door opened
    id: door opened
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    to: 'off'
    from: 'on'
    id: door closed
    alias: door closed
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: homeassistant
    event: start
    id: startup
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: state
    entity_id:
    - binary_sensor.showering
    to: 'on'
    id: shower started
    alias: shower started
  - device_id: e016de0f5a668458b727b4b8e2d4db6c
    domain: zha
    platform: device
    type: Enter
    subtype: sensor
    alias: occupancy detected
    id: fp1 enter
  - device_id: e016de0f5a668458b727b4b8e2d4db6c
    domain: zha
    platform: device
    type: Leave
    subtype: sensor
    id: occupancy clear
    alias: occupancy clear
  - platform: state
    entity_id:
    - light.bathroom_lights
    from: 'on'
    to: 'off'
    alias: lights turned off
    id: lights turned off
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    from: 'off'
    id: motion detected
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'off'
    from: 'on'
    id: motion clear
    for:
      hours: 0
      minutes: 1
      seconds: 30
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_light
    alias: timer finished
    id: timer finished
  - platform: state
    entity_id:
    - input_boolean.bathroom_occupied
    to: 'on'
    from: 'off'
    id: occupied_boolean
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: occupied_boolean
      sequence:
      - if:
        - condition: device
          type: is_off
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
        then:
        - type: turn_on
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
          brightness_pct: 100
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: shower started
        - condition: and
          conditions:
          - condition: state
            entity_id: light.bathroom_lights
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 7
          - condition: trigger
            id: door opened
          alias: door open
        - condition: and
          conditions:
          - condition: trigger
            id: fp1 enter
          - condition: not
            conditions:
            - condition: state
              entity_id: switch.exhaust_fan
              state: 'on'
          alias: fp1
        - condition: and
          conditions:
          - condition: trigger
            id: motion detected
          - condition: state
            entity_id: light.bathroom_lights
            state: 'off'
            for:
              hours: 0
              minutes: 0
              seconds: 4
        alias: Presence Detected
      - condition: state
        entity_id: light.bathroom_lights
        state: 'off'
      sequence:
      - choose:
        - conditions:
          - condition: sun
            before: sunrise
            alias: Dark Outside
            after: sunset
            enabled: true
          - condition: state
            entity_id: light.bedroom_lights
            state: 'off'
            alias: Bedroom Lights are off
          - condition: state
            entity_id: binary_sensor.bed_occupancy
            state: 'off'
            alias: probably anthony
          - condition: state
            entity_id: input_select.anthony
            state: Home
          sequence:
          - type: turn_on
            device_id: 624405d34a0a0bc8df3990c131a31bd2
            entity_id: light.bathroom_lights
            domain: light
            brightness_pct: 4
            alias: Turn on bathroom lights dimly
        - conditions:
          - condition: sun
            before: sunrise
            alias: Dark Outside
            after: sunset
          - condition: state
            entity_id: light.fan_lights
            state: 'off'
            alias: Fan Lights are off
          - condition: state
            entity_id: binary_sensor.bed_occupancy
            state: 'off'
            alias: probably anthony
          - condition: state
            entity_id: input_select.anthony
            state: Home
          sequence:
          - type: turn_on
            device_id: 624405d34a0a0bc8df3990c131a31bd2
            entity_id: light.bathroom_lights
            domain: light
            brightness_pct: 35
            alias: Turn on bathroom lights less dimly
        default:
        - type: turn_on
          device_id: 624405d34a0a0bc8df3990c131a31bd2
          entity_id: light.bathroom_lights
          domain: light
          brightness_pct: 100
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: state
        entity_id: binary_sensor.showering
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: occupancy clear
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_occupancy
            state: 'off'
          - condition: or
            conditions:
            - condition: trigger
              id: shower stopped
            - condition: trigger
              id: reload
            - condition: trigger
              id: startup
            - condition: and
              conditions:
              - condition: trigger
                id: door closed
              - condition: state
                entity_id: light.bathroom_lights
                state: 'on'
                for:
                  hours: 0
                  minutes: 0
                  seconds: 20
              - condition: state
                entity_id: binary_sensor.bathroom_multi_sensor_motion
                state: 'off'
            - condition: trigger
              id: motion clear
        - condition: trigger
          id: timer finished
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      sequence:
      - type: turn_off
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bathroom_light
    - conditions:
      - condition: trigger
        id: lights turned off
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 7
          milliseconds: 0
      - condition: device
        type: is_off
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - service: button.press
        data: {}
        target:
          entity_id: button.bathroom_presence_status_reset
    - conditions:
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.showering
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bathroom_occupancy
          state: 'off'
        - condition: state
          entity_id: switch.exhaust_fan
          state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'off'
      - condition: or
        conditions:
        - condition: trigger
          id: motion clear
        - condition: trigger
          id: door opened
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: startup
            - condition: trigger
              id: reload
          - condition: state
            entity_id: timer.bathroom_light
            state: idle
      - condition: state
        entity_id: binary_sensor.bathroom_multi_sensor_motion
        state: 'off'
      sequence:
      - service: timer.start
        data:
          duration: 00:01:30
        target:
          entity_id: timer.bathroom_light
  mode: parallel
  max: 10
- id: fp
  alias: Front Porch Not Blueprint
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: silence-{{ camera }}
    id: silence
  - platform: mqtt
    topic: frigate/events
    payload: '{{ camera }}/new'
    value_template: '{{ value_json[''after''][''camera''] }}/{{ value_json[''type'']}}'
    id: frigate-event
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.entry_doors
      state: 'on'
  action:
  - choose:
    - alias: Silence New Object Notifications
      conditions:
      - condition: trigger
        id: silence
      sequence:
      - service: automation.turn_off
        target:
          entity_id: '{{ this.entity_id }}'
        data:
          stop_actions: false
      - delay:
          minutes: 60
      - service: automation.turn_on
        target:
          entity_id: '{{ this.entity_id }}'
    - alias: Frigate Event
      conditions:
      - condition: trigger
        id: frigate-event
      - '{{ is_state(this.entity_id, ''on'') }}'
      - '{{ not this.attributes.last_triggered or (now() - this.attributes.last_triggered).seconds
        > cooldown }}'
      sequence:
      - variables:
          id: '{{ trigger.payload_json[''after''][''id''] }}'
          object: '{{ trigger.payload_json[''after''][''label''] }}'
          label: '{{ object | title }}'
          initial_home: '{{ presence_entity != '''' and is_state(presence_entity,
            ''home'') }}'
          initial_entered_zones: '{{ trigger.payload_json[''after''][''entered_zones'']
            }}'
      - alias: Notifications enabled for object label
        condition: template
        value_template: '{{ not labels|length or object in labels }}'
      - alias: Notify on new object
        choose:
        - conditions:
          - '{{ not zone_only or initial_entered_zones|length > 0 }}'
          - '{{ not zones|length or zones|select(''in'', initial_entered_zones)|list|length
            > 0 }}'
          - '{{ not initial_home }}'
          sequence:
          - choose:
            - conditions: '{{ not group_target }}'
              sequence:
              - device_id: false
                domain: mobile_app
                type: notify
                message: A {{ label }} was detected on the {{ camera_name }} camera.
                data:
                  tag: '{{ id }}'
                  group: frigate-notification-{{ camera }}
                  image: /api/frigate/notifications/{{id}}/snapshot.jpg
                  clickAction: '{{base_url}}/api/frigate/notifications/{{id}}/{{camera}}/clip.mp4'
                  ttl: '{{ iif(critical, 0, 3600000) }}'
                  priority: '{{ iif(critical, ''high'', ''normal'') }}'
                  url: http://elitedesk:81/ui3.htm?cam=FP
                  attachment:
                    url: /api/frigate/notifications/{{id}}/snapshot.jpg
                  push:
                    interruption-level: '{{ iif(critical, ''critical'', ''active'')
                      }}'
                  actions:
                  - action: silence-{{ camera }}
                    title: Silence New Notifications
                    destructive: true
            default:
            - service: notify.{{ group_target }}
              data:
                message: A person was detected at the porch.
                data:
                  tag: '{{ id }}'
                  group: frigate-notification-{{ camera }}
                  image: /api/frigate/notifications/{{id}}/snapshot.jpg
                  clickAction: '{{base_url}}/api/frigate/notifications/{{id}}/{{camera}}/clip.mp4'
                  ttl: '{{ iif(critical, 0, 3600000) }}'
                  priority: '{{ iif(critical, ''high'', ''normal'') }}'
                  url: http://elitedesk:81/ui3.htm?cam=FP
                  attachment:
                    url: /api/frigate/notifications/{{id}}/snapshot.jpg
                  push:
                    interruption-level: '{{ iif(critical, ''critical'', ''active'')
                      }}'
                  actions:
                  - action: silence-{{ camera }}
                    title: Silence New Notifications
                    destructive: true
      - repeat:
          sequence:
          - wait_for_trigger:
            - platform: mqtt
              topic: frigate/events
              payload: '{{ id }}'
              value_template: '{{ value_json[''after''][''id''] }}'
            timeout:
              minutes: 2
            continue_on_timeout: false
          - variables:
              event: '{{ wait.trigger.payload_json }}'
              loitering: '{{ loiter_timer and event[''before''][''motionless_count'']/fps/60
                < loiter_timer and event[''after''][''motionless_count'']/fps/60 >=
                loiter_timer }}'
              new_snapshot: '{{ update_thumbnail and event[''before''][''snapshot_time'']
                != event[''after''][''snapshot_time''] }}'
              home: '{{ presence_entity != '''' and is_state(presence_entity, ''home'')
                }}'
              presence_changed: '{{ presence_entity != '''' and as_datetime(event[''before''][''frame_time''])
                < states[presence_entity].last_changed }}'
              last_zones: '{{ event[''before''][''entered_zones''] }}'
              entered_zones: '{{ event[''after''][''entered_zones''] }}'
              zone_filter: '{{ not zone_only or entered_zones|length > 0 }}'
              stationary_moved: '{{ event[''after''][''position_changes''] > event[''before''][''position_changes'']
                }}'
              zone_only_changed: '{{ zone_only and (entered_zones|length > 0 and not
                last_zones|length) }}'
              entered_zones_changed: '{{ zones|length > 0 and (zones|select(''in'',
                entered_zones)|list|length > 0 and not zones|select(''in'', last_zones)|list|length)
                }}'
              update: '{{ new_snapshot and not loitering and not presence_changed
                and not zone_only_changed and not entered_zones_changed }}'
          - alias: Notify on loitering or significant change
            choose:
            - conditions: '{{ loitering or (not home and zone_filter and (new_snapshot
                or presence_changed or stationary_moved or zone_only_changed or entered_zones_changed))
                }}'
              sequence:
              - choose:
                - conditions: '{{ not group_target }}'
                  sequence:
                  - device_id: false
                    domain: mobile_app
                    type: notify
                    message: A {{ label }} {{ 'is loitering' if loitering else 'was
                      detected' }} on the {{ camera_name }} camera.
                    data:
                      tag: '{{ id }}{{''-loitering'' if loitering}}'
                      group: frigate-notification-{{ camera }}{{'-loitering' if loitering}}
                      image: /api/frigate/notifications/{{id}}/snapshot.jpg
                      clickAction: '{{base_url}}/api/frigate/notifications/{{id}}/{{camera}}/clip.mp4'
                      ttl: '{{ iif(critical, 0, 3600000) }}'
                      priority: '{{ iif(critical, ''high'', ''normal'') }}'
                      url: http://elitedesk:81/ui3.htm?cam=FP
                      attachment:
                        url: /api/frigate/notifications/{{id}}/snapshot.jpg
                      sound: '{{ iif(update, ''none'', ''default'') }}'
                      push:
                        interruption-level: '{{ iif(critical, ''critical'', ''active'')
                          }}'
                      actions:
                      - action: silence-{{ camera }}
                        title: Silence New Notifications
                        destructive: true
                default:
                - service: notify.{{ group_target }}
                  data:
                    message: A {{ label }} {{ 'is loitering' if loitering else 'was
                      detected' }} on the {{ camera_name }} camera.
                    data:
                      tag: '{{ id }}{{''-loitering'' if loitering}}'
                      group: frigate-notification-{{ camera }}{{'-loitering' if loitering}}
                      image: /api/frigate/notifications/{{id}}/snapshot.jpg
                      clickAction: '{{base_url}}/api/frigate/notifications/{{id}}/{{camera}}/clip.mp4'
                      ttl: '{{ iif(critical, 0, 3600000) }}'
                      priority: '{{ iif(critical, ''high'', ''normal'') }}'
                      url: http://elitedesk:81/ui3.htm?cam=FP
                      attachment:
                        url: /api/frigate/notifications/{{id}}/snapshot.jpg
                      sound: '{{ iif(update, ''none'', ''default'') }}'
                      push:
                        interruption-level: '{{ iif(critical, ''critical'', ''active'')
                          }}'
                      actions:
                      - action: silence-{{ camera }}
                        title: Silence New Notifications
                        destructive: true
          until: '{{ not wait.trigger or wait.trigger.payload_json[''type''] == ''end''
            }}'
  mode: parallel
  trigger_variables:
    camera: porch
  variables:
    camera: porch
    camera_name: '{{ camera | replace(''_'', '' '') | title }}'
    base_url: https://maioranihome.duckdns.org
    critical: false
    update_thumbnail: false
    group_target: anthonys_devices
    zone_only: false
    input_zones: []
    zones: '{{ input_zones | list }}'
    input_labels:
    - person
    labels: '{{ input_labels | list }}'
    presence_entity: ''
    cooldown: 100
    loiter_timer: 0
    fps_value: '{{ states(''sensor.'' + camera + ''_camera_fps'') }}'
    fps: '{{ fps_value|int if is_number(fps_value) else 8 }}'
- id: '1670483390344'
  alias: Kitchen Cabinet Pico
  description: ''
  use_blueprint:
    path: cymone-smart/lutron_pico_5_light.yaml
    input:
      pico_1: fb561243a18ef4b5ee04c3ca72dea9e1
      middle_button_action:
      - type: turn_on
        device_id: 12fdf93ade08d994961d501d7730373c
        entity_id: light.kitchen_cabinet_lights
        domain: light
        brightness_pct: 40
      entity:
      - light.kitchen_cabinet_lights
- id: '1670729021317'
  alias: Christmas Lights
  description: Sync with Kitchen Lights
  trigger:
  - platform: state
    entity_id:
    - light.kitchen_lights
  - platform: state
    entity_id:
    - switch.christmas_lights
    from: unavailable
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
    id: reload
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.christmas_lights
        state: 'off'
      - condition: state
        entity_id: light.kitchen_lights
        state: 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.christmas_lights
    - conditions:
      - condition: state
        entity_id: switch.christmas_lights
        state: 'on'
      - condition: state
        entity_id: light.kitchen_lights
        state: 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.christmas_lights
  mode: single
- id: '1670745513720'
  alias: Hallway Lights Off
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    before: 04:00:00
    after: '23:55:00'
  - condition: state
    entity_id: light.hallway_lights
    state: 'on'
  - condition: state
    entity_id: binary_sensor.nest_protect_hallway_occupancy
    state: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.hallway_lights
  mode: single
- id: '1670794990971'
  alias: Living Room Fan Pico
  description: ''
  trigger:
  - platform: device
    device_id: e0d82cb7ed45e4184f837d8ee379f63e
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: on_pressed
  - platform: device
    device_id: e0d82cb7ed45e4184f837d8ee379f63e
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: off_pressed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: on_pressed
      sequence:
      - type: turn_on
        device_id: 12f08520bdd6649730246bea3568917f
        entity_id: switch.living_room_fan
        domain: switch
    - conditions:
      - condition: trigger
        id: off_pressed
      sequence:
      - type: turn_off
        device_id: 12f08520bdd6649730246bea3568917f
        entity_id: switch.living_room_fan
        domain: switch
  mode: queued
  max: 10
- id: '1670799817434'
  alias: Riana Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.riana
    to: Just Arrived
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.owntone_output_master_bedroom_tv
        state: 'on'
      - condition: state
        entity_id: media_player.owntone_output_guest_tv
        state: 'on'
      - condition: state
        entity_id: media_player.kitchen_speakers
        state: 'on'
      - condition: state
        entity_id: media_player.owntone_output_living_room_tv
        state: 'on'
      - condition: state
        entity_id: media_player.guest_homepods
        state: 'on'
      - condition: state
        entity_id: media_player.owntone_output_front
        state: 'on'
      - condition: state
        entity_id: media_player.owntone_output_garage
        state: 'on'
    then:
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_front
        - media_player.owntone_output_kitchen_homepod
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_garage
        - media_player.owntone_output_guest_tv
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
  - if:
    - condition: device
      type: is_off
      device_id: aa29287a53774cb599c5658e30e48d9d
      entity_id: light.kitchen_lights
      domain: light
    - condition: sun
      after: sunset
      after_offset: -00:25:00
    then:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - cover.garage_door
      - platform: state
        entity_id:
        - lock.front_door
      continue_on_timeout: false
      timeout: 00:30:00
    - type: turn_on
      device_id: aa29287a53774cb599c5658e30e48d9d
      entity_id: light.kitchen_lights
      domain: light
      brightness_pct: 18
  mode: single
- id: '1670894312639'
  alias: Notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.toggle
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Home
  - condition: not
    conditions:
    - condition: state
      entity_id: cover.garage_door
      state: open
    - condition: state
      entity_id: cover.garage_door
      state: opening
  action:
  - service: notify.anthonys_devices
    data:
      message: Notification
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.6
  mode: single
- id: '1671419998725'
  alias: Bedroom Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: df24bd878efc1f29899ba74213c4b124
      auto_mode: queued
      top_on:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.morning
      - service: button.press
        data: {}
        target:
          entity_id: button.white
      down_lower:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
      - service: button.press
        data: {}
        target:
          entity_id: button.off
      bottom_off:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.color_loop
      - service: button.press
        data: {}
        target:
          entity_id: button.color
      up_raise:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.ac
      top_on_release: []
      up_raise_release:
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.desktop
- id: '1671430225021'
  alias: Dana's Wall Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: c51c176058dad4748b6065d54c93bec5
      auto_mode: queued
      top_on:
      - parallel:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_east_wall_rope_lights
            - switch.dana_s_north_wall_rope_lights
            - switch.dana_s_west_wall_rope_lights
            - switch.dana_s_south_wall_rope_lights
            - switch.dana_s_south_wall_incandescent_string_lights
        - service: light.turn_on
          data:
            rgb_color:
            - 141
            - 45
            - 245
            brightness_pct: 100
          target:
            entity_id: light.evan_fan
        - service: media_player.turn_on
          data: {}
          target:
            entity_id: media_player.evan
      down_lower:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: switch.dana_s_south_wall_rope_lights
            state: 'off'
          - condition: state
            entity_id: switch.dana_s_west_wall_rope_lights
            state: 'off'
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_west_wall_rope_lights
            - switch.dana_s_south_wall_rope_lights
        else:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_west_wall_rope_lights
            - switch.dana_s_south_wall_rope_lights
      bottom_off:
      - parallel:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_east_wall_rope_lights
            - switch.dana_s_north_wall_rope_lights
            - switch.dana_s_west_wall_rope_lights
            - switch.dana_s_south_wall_rope_lights
            - switch.dana_s_south_wall_incandescent_string_lights
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.evan_fan
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.evan
            - media_player.owntone_output_danas
            - media_player.owntone_output_garage
      up_raise:
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: switch.dana_s_north_wall_rope_lights
            state: 'on'
          - condition: state
            entity_id: switch.dana_s_east_wall_rope_lights
            state: 'on'
          - condition: state
            entity_id: switch.dana_s_south_wall_incandescent_string_lights
            state: ''
        then:
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.dana_s_north_wall_rope_lights
            - switch.dana_s_east_wall_rope_lights
            - switch.dana_s_south_wall_incandescent_string_lights
        else:
        - service: switch.turn_on
          data: {}
          target:
            entity_id:
            - switch.dana_s_north_wall_rope_lights
            - switch.dana_s_east_wall_rope_lights
            - switch.dana_s_south_wall_incandescent_string_lights
      top_on_release: []
      up_raise_release:
      down_lower_release: []
      middle_stop_release: []
      middle_stop:
      - if:
        - condition: state
          entity_id: light.evan_fan
          state: 'on'
        then:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.evan_fan
        else:
        - service: light.turn_on
          data:
            rgb_color:
            - 141
            - 45
            - 245
            brightness_pct: 100
          target:
            entity_id: light.evan_fan
- id: '1671606640908'
  alias: Bathroom Occupancy Override
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.bathroom_door
    to: 'on'
    from: 'off'
    id: 'off'
  - platform: event
    event_type: automation_reloaded
    id: reload
  - platform: homeassistant
    event: start
    id: start
  - platform: device
    type: turned_off
    device_id: 624405d34a0a0bc8df3990c131a31bd2
    entity_id: light.bathroom_lights
    domain: light
    id: lights turned off
  - platform: state
    entity_id:
    - light.bathroom_lights
    to: 'on'
    from: 'off'
    id: wave
  - platform: device
    device_id: 7c247296aac3c00b267bb165baab5a7c
    domain: zwave_js
    type: event.value_notification.central_scene
    property: scene
    property_key: '001'
    endpoint: 0
    command_class: 91
    subtype: Endpoint 0 Scene 001
    id: turned on
  - platform: state
    entity_id:
    - binary_sensor.showering
    to: 'on'
    from: 'off'
    id: showering
  - platform: state
    entity_id:
    - binary_sensor.bathroom_multi_sensor_motion
    to: 'on'
    from: 'off'
    id: other wave
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bathroom_door
        state: 'off'
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'off'
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.bathroom_door
            state: 'off'
            for:
              hours: 0
              minutes: 1
              seconds: 0
          - condition: or
            conditions:
            - condition: trigger
              id: wave
            - condition: trigger
              id: other wave
        - condition: trigger
          id: 'on'
        - condition: trigger
          id: turned on
        - condition: trigger
          id: showering
      sequence:
      - condition: state
        entity_id: binary_sensor.bathroom_door
        state: 'off'
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bathroom_occupied
    - conditions:
      - condition: state
        entity_id: input_boolean.bathroom_occupied
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: 'off'
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: trigger
              id: reload
            - condition: trigger
              id: start
          - condition: device
            type: is_off
            device_id: 624405d34a0a0bc8df3990c131a31bd2
            entity_id: light.bathroom_lights
            domain: light
        - condition: trigger
          id: lights turned off
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bathroom_occupied
  mode: queued
  max: 10
- id: '1671929632563'
  alias: Dining Room Light
  description: ''
  trigger:
  - device_id: 767effc5535cb9c6264f0419d61cfeb7
    domain: zha
    platform: device
    type: Leave
    subtype: sensor
    id: sensor leave
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sensor leave
      - condition: state
        entity_id: switch.dining_room_light
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.dining_room_light
  mode: single
- id: '1672034605114'
  alias: Master Bedroom Kitchen Light Pico
  description: ''
  use_blueprint:
    path: stephack/core-pico.yaml
    input:
      pico_remote: 71473ec4967297f4adc37260dfb2d76a
      auto_mode: single
      down_lower: []
      bottom_off:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_cabinet_lights
- id: '1672543042441'
  alias: Bathroom Exhaust Pico
  description: ''
  trigger:
  - platform: device
    device_id: f7083fcff763724ef4d397a51acc5cf9
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: 'on'
  - platform: device
    device_id: f7083fcff763724ef4d397a51acc5cf9
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.bathroom_occupied
          state: 'off'
        then:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.bathroom_occupied
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.exhaust
  mode: queued
  max: 10
- id: '1673433463589'
  alias: Night Light
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closet opened
  - platform: state
    entity_id:
    - binary_sensor.bed_occupancy
    from: 'off'
    to: 'on'
    id: bed entered
  - type: opened
    platform: device
    device_id: 40b6acb50076a1f15ff0e73120d2f04e
    entity_id: binary_sensor.bedroom_door
    domain: binary_sensor
    id: door opened
  condition:
  - condition: state
    entity_id: script.morning
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: closet opened
        - condition: trigger
          id: door opened
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      - condition: sun
        after: sunset
        before: sunrise
      - condition: not
        conditions:
        - condition: state
          entity_id: script.morning
          state: 'on'
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
          transition: 2
          brightness_pct: 18
        target:
          entity_id: light.bed_lights
      - wait_for_trigger:
        - platform: state
          entity_id:
          - light.light_switch
          from: 'off'
          to: 'on'
        timeout:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.light_switch
          - light.light_switch_corner
    - conditions:
      - condition: trigger
        id: bed entered
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      sequence:
      - type: turn_off
        device_id: e88ef9e31b97cb86c917bfd035861b2f
        entity_id: light.bed_lights
        domain: light
        enabled: false
      - service: script.night
        data: {}
  mode: single
- id: '1677100682580'
  alias: Auto-update
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.anthony
    to:
    - utd
    - raytheon
    - collin
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: update.alarm_firmware
      state: 'on'
    - condition: state
      entity_id: update.bed_esp_firmware
      state: 'on'
    - condition: state
      entity_id: update.desklights_firmware
      state: 'on'
    - condition: state
      entity_id: update.lightswitch_firmware
      state: 'on'
    - condition: state
      entity_id: update.midea_firmware
      state: 'on'
    - condition: state
      entity_id: update.usbswitch_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb1_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb2_firmware
      state: 'on'
    - condition: state
      entity_id: update.wyzebulb3_firmware
      state: 'on'
    - condition: state
      entity_id: update.z_wave_js_to_mqtt_update
      state: 'on'
    - condition: state
      entity_id: update.esphome_update
      state: 'on'
    - condition: state
      entity_id: update.studio_code_server_update
      state: 'on'
  action:
  - parallel:
    - if:
      - condition: state
        entity_id: update.z_wave_js_to_mqtt_update
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.z_wave_js_to_mqtt_update
    - if:
      - condition: state
        entity_id: update.esphome_update
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.esphome_update
    - if:
      - condition: state
        entity_id: update.studio_code_server_update
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.studio_code_server_update
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - parallel:
    - if:
      - condition: state
        entity_id: update.alarm_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.alarm_firmware
    - if:
      - condition: state
        entity_id: update.bed_esp_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.bed_esp_firmware
    - if:
      - condition: state
        entity_id: update.desklights_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.desklights_firmware
    - if:
      - condition: state
        entity_id: update.lightswitch_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.lightswitch_firmware
    - if:
      - condition: state
        entity_id: update.midea_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.midea_firmware
    - if:
      - condition: state
        entity_id: update.usbswitch_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.usbswitch_firmware
    - if:
      - condition: state
        entity_id: update.wyzebulb1_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.wyzebulb1_firmware
    - if:
      - condition: state
        entity_id: update.wyzebulb2_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.wyzebulb2_firmware
    - if:
      - condition: state
        entity_id: update.wyzebulb3_firmware
        state: 'on'
      then:
      - service: update.install
        data: {}
        target:
          entity_id: update.wyzebulb3_firmware
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: script.night
    data: {}
  mode: single
- id: '1677121828248'
  alias: Turn off TVs
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.spotify_anthony221121
    attribute: source
    to: DESKTOP-PC
    from: Home Assistant
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.owntone_output_front
      state: 'on'
    - condition: state
      entity_id: media_player.owntone_output_living_room_tv
      state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.lrtv
      - switch.fronttv
  mode: single
- id: '1678008305202'
  alias: Start music after shutting down computer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.desktop
    from: 'on'
    to: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.spotify_anthony221121
      state: playing
  action:
  - service: script.lofi
    data: {}
  mode: single
