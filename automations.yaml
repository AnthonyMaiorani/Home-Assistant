- id: '1546210609741'
  alias: Morning Automation
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.bedroom_dot_next_alarm''),
      1) %} {% set current_time = as_timestamp(states(''sensor.date_time'').replace('','',
      ''''), 0) %} {% set pre_time = 2 %} {{ current_time >= alarm_time - pre_time
      }}

      '
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: homeassistant.turn_on
    target:
      entity_id:
      - script.white
      - input_boolean.bedmotion
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.bed_occupancy
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 4
    continue_on_timeout: false
  mode: restart
- id: 43a25b65afed4a4680f5ec81172f11e8
  alias: Startup Actions
  description: Set Theme, Ensure Location Input Select is Updated
  trigger:
  - event: start
    platform: homeassistant
  action:
  - parallel:
    - data:
        name: ios-dark-mode-dark-blue
      service: frontend.set_theme
    - condition: zone
      entity_id: person.anthony
      zone: zone.home
    - service: input_select.select_option
      target:
        entity_id: input_select.anthony
      data:
        option: Home
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.govee_cyan
  initial_state: true
  mode: single
- id: '1617634628204'
  alias: Automating
  description: Reset automating bool used for light switch
  trigger:
  - platform: state
    entity_id: input_boolean.automating
    to: 'on'
  condition: []
  action:
  - wait_template: ''
    timeout: '1.8'
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.automating
  mode: single
- id: '1620642299524'
  alias: Motion Bypass
  description: Turn lights on if bed motion sensing bypass is enabled
  trigger:
  - platform: state
    entity_id: input_boolean.bedmotion
    to: 'on'
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - service: script.white
  mode: single
- id: '1620710706685'
  alias: Color Loop
  description: Adjust color loop state
  trigger:
  - platform: time_pattern
    seconds: /3
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_number.colorloopstate
        state: '4.0'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.colorloopstate
        data:
          value: 0
    default:
    - service: input_number.increment
      target:
        entity_id: input_number.colorloopstate
  mode: single
- id: '1621577255605'
  alias: Left Home
  description: Turns bedroom off when leaving home, and ensures bedroom stays off
  trigger:
  - platform: state
    entity_id: light.desk_lights
    from: 'off'
    to: 'on'
    for: 00:05:00
  - platform: state
    entity_id: light.fan_lights
    from: 'off'
    to: 'on'
    for: 00:05:00
  - platform: state
    entity_id: switch.windows
    for: 00:01:00
    from: 'off'
    to: 'on'
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: leave
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  action:
  - parallel:
    - service: script.stuff_off
      data: {}
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - switch.ac
    - service: button.press
      data: {}
      target:
        entity_id: button.shutdown
  mode: single
- id: '1621816232606'
  alias: Taylor Wyze Power
  description: Control power to Apartment Wyze cameras based on home presence
  trigger:
  - platform: time_pattern
    minutes: /2
  - platform: zone
    entity_id: person.taylor
    zone: zone.taylor_s_home
    event: enter
  - platform: zone
    entity_id: device_tracker.life360_taylor
    zone: zone.taylor_s_home
    event: leave
  - platform: homeassistant
    event: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        state: Taylor's Home
        entity_id: device_tracker.life360_taylor
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.apartment
        data: {}
    default:
    - condition: state
      entity_id: group.apartment
      state: 'off'
    - service: homeassistant.turn_on
      target:
        entity_id: group.apartment
      data: {}
  mode: single
- id: '1627401846713'
  alias: Arrived Home
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_select.anthony
    state: Just Arrived
  action:
  - parallel:
    - service: script.turn_on
      target:
        entity_id: script.stuff_on
      data: {}
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.desktop
  mode: single
- id: '1627443167507'
  alias: Bedroom Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: Motion
  - platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closetopen
  - platform: state
    entity_id: binary_sensor.closet
    from: 'on'
    to: 'off'
    id: closetclosed
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: closetopen
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been opened
          title: Motion detected in bedroom
    - conditions:
      - condition: trigger
        id: Motion
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom door has been opened
          title: Motion detected in bedroom
    - conditions:
      - condition: trigger
        id: closetclosed
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been closed
          title: Motion detected in bedroom
    default: []
  mode: single
- id: '1627778209718'
  alias: Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    for:
      hours: 0
      minutes: 40
      seconds: 0
    id: Home
  - platform: state
    entity_id: input_select.anthony
    id: Away
    to: Just Left
    for: 00:10:00
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: leave
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Away
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Arrived
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Left
    default: []
  mode: single
- id: '1627779396737'
  alias: Door Opened
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.anthony
    state: Home
  - condition: time
    after: 07:00:00
    before: 01:00:00
  - condition: state
    entity_id: light.desk_lights
    state: 'on'
  action:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.fan_lights
          state: 'off'
        sequence:
        - service: script.color_loop
          data: {}
        - condition: state
          entity_id: binary_sensor.webcam
          attribute: friendly_name
          state: 'off'
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 100
      - conditions:
        - condition: state
          entity_id: light.shapes_007f
          state: 'on'
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'off'
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 100
      default: []
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.bedmotion
  mode: single
- id: '1627966300438'
  alias: Close Blinds When Dark
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
  condition:
  - condition: state
    entity_id: cover.bedroom_blinds
    state: open
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.blinds
  mode: single
- id: '1629524719390'
  alias: Closet Lights
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.closet
    to: 'on'
    id: 'on'
  - platform: state
    entity_id: binary_sensor.closet
    id: 'off'
    to: 'off'
  - platform: state
    entity_id: light.closet_lights
    id: lighton
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: light.closet_lights
    id: lightoff
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
          brightness_pct: 2
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          brightness_pct: 100
    - conditions:
      - condition: trigger
        id: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.closet_lights
    - conditions:
      - condition: trigger
        id: startup
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.closet
            state: 'on'
          - condition: state
            entity_id: light.desk_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.closet_lights
            data:
              effect: Color Loop
              brightness_pct: 2
          - service: light.turn_on
            target:
              entity_id: light.closet_lights
            data:
              brightness_pct: 100
        - conditions:
          - condition: state
            entity_id: binary_sensor.closet
            state: 'on'
          - condition: state
            entity_id: light.desk_lights
            state: 'off'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.closet_lights
            data:
              rgb_color:
              - 255
              - 255
              - 255
              effect: None
        - conditions:
          - condition: state
            entity_id: binary_sensor.closet
            state: 'off'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.closet_lights
        default: []
    - conditions:
      - condition: trigger
        id: lighton
      - condition: state
        entity_id: binary_sensor.closet
        state: 'off'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.closet_lights
    default: []
  mode: single
- id: '1629947581379'
  alias: Detect Wyze Sensor Issue
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    to: 'off'
    for:
      hours: 24
      minutes: 0
      seconds: 0
  condition:
  - condition: zone
    entity_id: device_tracker.iphone
    zone: zone.home
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Wyze sensors have stopped responding
      title: Issue Detected
  mode: single
- id: '1635104348023'
  alias: Front Porch Camera Notification
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.front_porch_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.riana
      state: Just Arrived
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Person detected at Front Porch
      data:
        image: /local/FP.jpg
  mode: single
- id: '1635205275088'
  alias: Backyard Camera Notification
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.backyard_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: template
    value_template: '{{states(''person.riana'') != ''home''}}'
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Person detected at Backyard
      data:
        image: /local/backyard.jpg
  mode: single
- id: '1639191711934'
  alias: Dim Nanoleaf when using computer
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.desktop_pc_lastactive
  condition:
  - condition: state
    entity_id: light.shapes_007f
    state: 'on'
  - condition: template
    value_template: '{{ state_attr(''light.shapes_007f'',''brightness'') | float >
      153 }}'
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.desktop_pc_lastactive
      state: unknown
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.fan_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          brightness_pct: 60
    default:
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        brightness_pct: 40
  - choose:
    - conditions:
      - condition: state
        entity_id: light.fan_lights
        state: 'off'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - data:
          brightness: 255
          effect: Color Loop
          rgbw_color:
          - 0
          - 255
          - 255
          - 0
        service: light.turn_on
        target:
          entity_id:
          - light.bedroom_lights
    default: []
  - service: button.press
    data: {}
    target:
      entity_id: button.mousepad_on
  mode: single
- id: '1639192672045'
  alias: Nanoleaf Scene Changer
  description: Cycle Favorite Nanoleaf Scenes
  trigger:
  - platform: time_pattern
    minutes: /30
    id: normal
  - platform: state
    entity_id: light.smart_bulb_1
    attribute: effect
    id: music
    from: Music
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        after: 09:59:00
        before: '23:59:00'
      - condition: not
        conditions:
        - condition: state
          entity_id: light.smart_bulb_1
          attribute: Effect
          state: Music
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.nanoleaf_scenes
        data:
          option: "{{ state_attr('input_select.nanoleaf_scenes', 'options')\n    |\
            \ reject('in', [states('input_select.nanoleaf_scenes')])\n    | reject('in',\
            \ 'moonlight')\n    | reject('in', 'Lightscape')\n    | reject('in', 'Night\
            \ light')\n    | reject('in', 'Tron Legacy')\n    | reject('in', 'Pink\
            \ To Blue')\n    | reject('in', 'Rain')\n    | reject('in', 'TRON CITY')\n\
            \    | reject('in', 'Waterfall')\n    | reject('in', 'Playstation Blue')\n\
            \    | reject('in', 'Bedtime')\n    | reject('in', 'Aurora magic')\n \
            \   | list | random }}\n"
    - conditions:
      - condition: state
        entity_id: light.smart_bulb_1
        attribute: Effect
        state: Music
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.nanoleaf_music
        data:
          option: "{{ state_attr('input_select.nanoleaf_music', 'options')\n    |\
            \ reject('in', [states('input_select.nanoleaf_music')])\n    | list |\
            \ random }}\n"
    default:
    - service: input_select.select_option
      target:
        entity_id: input_select.nanoleaf_scenes
      data:
        option: "{{ state_attr('input_select.nanoleaf_scenes', 'options')\n    | reject('in',\
          \ [states('input_select.nanoleaf_scenes')])\n    | list | random }}\n"
  - condition: template
    value_template: '{{ state_attr("light.shapes_007f", "effect") != "Webcam" and
      states(''light.shapes_007f'') == ''on''}} '
  - service: light.turn_on
    target:
      entity_id: light.shapes_007f
    data:
      effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
  mode: single
- id: '1641384613637'
  alias: Webcam Lighting
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.webcam
    to: 'on'
    id: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - binary_sensor.webcam
    id: 'off'
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.discord_active
    to: 'off'
    id: discordquit
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.fan_lights
            state: None
            attribute: effect
          sequence:
          - service: button.press
            target:
              entity_id:
              - button.white
            data: {}
          - service: light.turn_on
            target:
              entity_id: light.shapes_007f
            data:
              brightness_pct: 70
              effect: Webcam
        default:
        - service: button.press
          target:
            entity_id:
            - button.color
          data: {}
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 55
            effect: Webcam
    - conditions:
      - condition: trigger
        id: discordquit
      - condition: state
        entity_id: light.bedroom_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.webcam
        state: 'on'
      sequence:
      - service: button.press
        target:
          entity_id:
          - button.deletereg
        data: {}
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
    default: []
  mode: parallel
  max: 2
- id: '1644476253725'
  alias: Bed Occupancy
  description: If motion detected in bed under certain circumstances, turn off overhead
    lights.
  trigger:
  - platform: state
    entity_id: binary_sensor.bed_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0.6
  condition:
  - condition: state
    entity_id: input_boolean.bedmotion
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.fan_lights
        state: 'on'
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
    - conditions:
      - condition: state
        entity_id: light.bed_lights
        state: 'on'
      - condition: state
        entity_id: light.shapes_007f
        state: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.bed_lights
    default: []
  mode: single
- id: '1645695901319'
  alias: Enable Morning Automation
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.bedroom_dot_next_alarm
    to: unavailable
    id: no alarm
  - platform: state
    entity_id: sensor.bedroom_dot_next_alarm
    from: unavailable
    id: alarm
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.morning_lights_on
    - conditions:
      - condition: trigger
        id: no alarm
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.morning_lights_on
    default: []
  mode: restart
- id: '1652125399924'
  alias: Riana Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.riana
    to: Just Arrived
    for: 00:20:00
    id: Home
  - platform: state
    entity_id:
    - device_tracker.life360_riana
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: zone
    entity_id: device_tracker.life360_riana
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: device_tracker.life360_riana
    zone: zone.home
    event: leave
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.riana
    default: []
  mode: single
- id: '1653601692731'
  alias: AC Controls
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.ac_timer_start
    id: buttonpress
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac
    id: timerfinished
  - platform: state
    entity_id:
    - input_button.ac_mode
    id: mode
  - platform: state
    entity_id:
    - input_button.ac_temp_up
    id: tempup
  - platform: state
    entity_id:
    - input_button.ac_temp_down
    id: tempdown
  - platform: state
    entity_id:
    - input_button.ac_fan_up
    id: fanup
  - platform: state
    entity_id:
    - input_button.ac_fan_down
    id: fandown
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: buttonpress
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.ac
      - parallel:
        - service: remote.send_command
          data:
            device: ac
            command: temp_down
            num_repeats: 30
            delay_secs: 0.1
          target:
            entity_id: remote.bedroom_rm4_remote
        - service: timer.start
          data:
            duration: 0:25:00
          target:
            entity_id: timer.ac
    - conditions:
      - condition: trigger
        id: timerfinished
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.ac
    - conditions:
      - condition: trigger
        id: mode
      sequence:
      - service: remote.send_command
        data:
          command: mode
          device: ac
        entity_id: remote.bedroom_rm4_remote
    - conditions:
      - condition: trigger
        id: tempup
      sequence:
      - data:
          command: temp_up
          device: ac
        entity_id: remote.bedroom_rm4_remote
        service: remote.send_command
    - conditions:
      - condition: trigger
        id: tempdown
      sequence:
      - data:
          command: temp_down
          device: ac
        entity_id: remote.bedroom_rm4_remote
        service: remote.send_command
    - conditions:
      - condition: trigger
        id: fanup
      sequence:
      - data:
          command: fan_up
          device: ac
        entity_id: remote.bedroom_rm4_remote
        service: remote.send_command
    - conditions:
      - condition: trigger
        id: fandown
      sequence:
      - data:
          command: fan_down
          device: ac
        entity_id: remote.bedroom_rm4_remote
        service: remote.send_command
    default: []
  mode: parallel
  max: 20
