- id: '1546210609741'
  alias: Morning Automation
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.bedroom_dot_next_alarm''),
      999999999999) %} {% set current_time = as_timestamp(states(''sensor.date_time'').replace('','',
      ''''), 0) %} {% set pre_time = 2 %} {{ current_time >= alarm_time - pre_time
      }}

      '
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 9
      milliseconds: 0
  - service: automation.turn_off
    data: {}
    target:
      entity_id: automation.bed_occupancy
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.bedroom_lights
  - parallel:
    - service: light.turn_on
      data:
        transition: 45
        effect: None
        color_temp: 500
        brightness: 255
      target:
        entity_id: light.fan_lights
    - service: light.turn_on
      data:
        effect: Vibrant Sunrise
        transition: 45
        brightness_pct: 100
      target:
        entity_id: light.shapes_007f
  - delay:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.morning
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.bedmotion
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.bed_occupancy
  - service: automation.trigger
    data: {}
    target:
      entity_id: automation.nanoleaf_scene_changer
  mode: single
- id: '1653601692731'
  alias: AC Boost Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    id: buttonpress
    to: 'on'
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.ac
  - platform: state
    entity_id:
    - input_boolean.ac_boost
    - switch.ac
    to: 'off'
  condition: []
  action:
  - if:
    - condition: trigger
      id: buttonpress
    then:
    - service: timer.start
      data:
        duration: 0:25:00
      target:
        entity_id: timer.ac
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.ac_boost
    - service: timer.cancel
      data: {}
      target:
        entity_id: timer.ac
  mode: single
- id: 43a25b65afed4a4680f5ec81172f11e8
  alias: Startup Actions
  description: Set Theme, Ensure Location Input Select is Updated
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.ac_controls
  - parallel:
    - data:
        name: ios-dark-mode-dark-blue
      service: frontend.set_theme
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.govee_cyan
    - if:
      - condition: zone
        entity_id: person.anthony
        zone: zone.home
      then:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - if:
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'on'
      then:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.ac
      else:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.ac
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.ac_controls
  initial_state: true
  mode: single
- id: '1620642299524'
  alias: Motion Bypass Control
  description: Turn lights on if bed motion sensing bypass is enabled
  trigger:
  - platform: state
    entity_id: input_boolean.bedmotion
    to: 'on'
  condition:
  - condition: state
    entity_id: light.fan_lights
    state: 'off'
  action:
  - service: script.morning
    data: {}
  mode: single
- id: '1620710706685'
  alias: Color Loop
  description: Adjust color loop state
  trigger:
  - platform: time_pattern
    seconds: /3
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_number.colorloopstate
        state: '4.0'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.colorloopstate
        data:
          value: 0
    default:
    - service: input_number.increment
      target:
        entity_id: input_number.colorloopstate
  mode: single
- id: '1621577255605'
  alias: Left Home
  description: Turns bedroom off when leaving home, and ensures bedroom stays off
  trigger:
  - platform: state
    entity_id: light.desk_lights
    from: 'off'
    to: 'on'
    for: 00:05:00
  - platform: state
    entity_id: light.fan_lights
    from: 'off'
    to: 'on'
    for: 00:05:00
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: leave
  - platform: time_pattern
    minutes: /20
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  action:
  - parallel:
    - service: script.night
      data: {}
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - climate.bedroom_ac
  mode: single
- id: '1621816232606'
  alias: Taylor Wyze Power
  description: Control power to Apartment Wyze cameras based on home presence
  trigger:
  - platform: time_pattern
    minutes: /2
  - platform: zone
    entity_id: person.taylor
    zone: zone.taylor_s_home
  - platform: homeassistant
    event: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        state: Taylor's Home
        entity_id: person.taylor
      - condition: state
        entity_id: group.apartment
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        target:
          entity_id: group.apartment
        data: {}
    - conditions:
      - condition: state
        entity_id: group.apartment
        state: 'off'
      - condition: not
        conditions:
        - condition: zone
          entity_id: device_tracker.taylor
          zone: zone.taylor_s_home
      - condition: not
        conditions:
        - condition: state
          entity_id: person.taylor
          state: unavailable
      sequence:
      - service: homeassistant.turn_on
        target:
          entity_id: group.apartment
        data: {}
    default: []
  mode: single
- id: '1627443167507'
  alias: Bedroom Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_door
    to: 'on'
    id: Motion
  - platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
    id: closetopen
  - platform: state
    entity_id: binary_sensor.closet
    from: 'on'
    to: 'off'
    id: closetclosed
  condition:
  - condition: template
    value_template: '{{states(''person.anthony'') != ''home''}}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: closetopen
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: Motion
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom door has been opened
          title: Motion detected in bedroom
          data:
            group: bedroom
    - conditions:
      - condition: trigger
        id: closetclosed
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Bedroom closet has been closed
          title: Motion detected in bedroom
          data:
            group: bedroom
    default: []
  mode: single
- id: '1627778209718'
  alias: Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.anthony
    to: Just Arrived
    for:
      hours: 0
      minutes: 40
      seconds: 0
    id: Home
  - platform: state
    entity_id: input_select.anthony
    id: Away
    to: Just Left
    for: 00:10:00
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: leave
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Home
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Away
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Arrived
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.anthony
        data:
          option: Just Left
    default: []
  mode: single
- id: '1627779396737'
  alias: Door Opened
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bedroom_door
    to: 'on'
    from: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
      sequence:
      - parallel:
        - service: script.morning
          data: {}
        - if:
          - condition: state
            entity_id: input_boolean.ac_boost
            state: 'off'
          then:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.ac_boost
          else: []
        - service: notify.mobile_app_iphone
          data:
            message: Play music?
            data:
              tag: music
              push:
                interruption-level: passive
              shortcut:
                name: LoFi
                ignore_result: ignore
    - conditions:
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: time
        after: 07:00:00
        before: 01:00:00
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - parallel:
        - choose:
          - conditions:
            - condition: state
              entity_id: light.fan_lights
              state: 'off'
            sequence:
            - service: script.color_loop
              data: {}
            - condition: state
              entity_id: binary_sensor.webcam
              attribute: friendly_name
              state: 'off'
            - service: light.turn_on
              target:
                entity_id: light.shapes_007f
              data:
                brightness_pct: 100
          - conditions:
            - condition: state
              entity_id: light.shapes_007f
              state: 'on'
            - condition: state
              entity_id: binary_sensor.webcam
              state: 'off'
            sequence:
            - service: light.turn_on
              target:
                entity_id: light.shapes_007f
              data:
                brightness_pct: 100
          default: []
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.bedmotion
    default: []
  mode: single
- id: '1627966300438'
  alias: Close Blinds When Dark
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: +00:30:00
  condition:
  - condition: state
    entity_id: cover.bedroom_blinds
    state: open
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.blinds
  mode: single
- id: '1629524719390'
  alias: Closet Lights Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.closet
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
          brightness_pct: 2
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          brightness_pct: 100
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      - condition: state
        entity_id: light.desk_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          rgb_color:
          - 255
          - 255
          - 255
          effect: None
    - conditions:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'off'
      - condition: state
        entity_id: light.closet_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.closet_lights
    default: []
  mode: single
- id: '1635104348023'
  alias: Camera Notifications
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.front_porch_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    id: fp
  - platform: state
    entity_id: binary_sensor.backyard_motion
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    id: by
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: fp
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.riana
          state: Just Arrived
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Person detected at Front Porch
          data:
            image: /local/FP.jpg
    - conditions:
      - condition: trigger
        id: by
      - condition: template
        value_template: '{{states(''person.riana'') != ''home''}}'
      sequence:
      - service: notify.mobile_app_iphone
        data:
          message: Person detected at Backyard
          data:
            image: /local/backyard.jpg
    default: []
  mode: single
- id: '1644476253725'
  alias: Bed Occupancy Detected
  description: If motion detected in bed under certain circumstances, turn off overhead
    lights.
  trigger:
  - platform: state
    entity_id: binary_sensor.bed_occupancy
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0.6
  condition:
  - condition: state
    entity_id: input_boolean.bedmotion
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        before: 05:00:00
        after: '22:00:00'
      - condition: state
        entity_id: light.desk_lights
        state: 'on'
      - condition: state
        entity_id: binary_sensor.webcam
        state: 'on'
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.call
    - conditions:
      - condition: state
        entity_id: light.fan_lights
        state: 'on'
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.fan_off
    default: []
  mode: single
- id: '1645695901319'
  alias: Enable Morning Automation
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.bedroom_dot_next_alarm
    to: unavailable
    id: no alarm
  - platform: state
    entity_id: sensor.bedroom_dot_next_alarm
    from: unavailable
    id: alarm
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: alarm
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.morning_lights_on
    - conditions:
      - condition: trigger
        id: no alarm
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.morning_lights_on
    default: []
  mode: restart
- id: '1652125399924'
  alias: Riana Presence Detection
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.riana
    to: Just Arrived
    for: 00:20:00
    id: Home
  - platform: state
    entity_id:
    - person.riana
    id: Away
    to: Just Left
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: enter
    id: Just Arrived
  - platform: zone
    entity_id: person.riana
    zone: zone.home
    event: leave
    id: Just Left
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - service: input_select.select_option
        data:
          option: Home
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - service: input_select.select_option
        data:
          option: Away
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - service: input_select.select_option
        data:
          option: Just Arrived
        target:
          entity_id: input_select.riana
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - service: input_select.select_option
        data:
          option: Just Left
        target:
          entity_id: input_select.riana
    default: []
  mode: single
- id: '1656373322370'
  alias: Cool Room
  description: ''
  trigger:
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: enter
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.riana
      state: Just Arrived
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - condition: state
    state: Just Arrived
    entity_id: input_select.anthony
  - wait_for_trigger:
    - platform: state
      entity_id:
      - cover.garage_door
    - platform: state
      entity_id:
      - lock.front_door
    continue_on_timeout: false
    timeout: 00:30:00
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.ac_boost
  - wait_for_trigger:
    - platform: zone
      entity_id: person.anthony
      zone: zone.home
      event: leave
    continue_on_timeout: false
    timeout: 00:25:00
  - service: climate.turn_off
    data: {}
    target:
      entity_id: climate.bedroom_ac
  mode: single
- id: '1656925466000'
  alias: Alarm Reminder
  description: ''
  trigger:
  - platform: time
    at: 00:01:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: sensor.bedroom_dot_next_alarm
    state: unavailable
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Check Alexa App
      title: Morning alarm not set
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
        actions:
        - action: Open Alexa App
          title: Open Alexa App
  mode: single
- id: '1658727301790'
  alias: USB Control
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  - platform: zone
    entity_id: person.anthony
    zone: zone.home
    event: leave
  - platform: state
    entity_id:
    - light.desk_lights
    - light.fan_lights
    - switch.desktop
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.usb_hub
    state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.usb_hub
  mode: queued
- id: '1660977660346'
  alias: Set Temperature
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ac_thermostat_temperature
  - platform: state
    entity_id:
    - switch.ac
    - input_boolean.ac_boost
    to: 'on'
  condition:
  - condition: template
    value_template: "{{ (not is_state('sensor.ac_thermostat_temperature', 'unknown')
      and not \nis_state_attr('climate.bedroom_ac', \"temperature\", \nstates('sensor.ac_thermostat_temperature')|int))
      \nor is_state('input_boolean.ac_boost', 'on') }}"
  action:
  - service: climate.set_temperature
    data:
      hvac_mode: cool
      temperature: '{{states(''sensor.ac_thermostat_temperature'') |int}}'
    target:
      entity_id: climate.bedroom_ac
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - if:
    - condition: state
      entity_id: input_boolean.ac_boost
      state: 'on'
    then:
    - service: climate.set_preset_mode
      data:
        preset_mode: boost
      target:
        entity_id: climate.bedroom_ac
    else:
    - service: climate.set_preset_mode
      data:
        preset_mode: none
      target:
        entity_id: climate.bedroom_ac
  mode: queued
- id: '1661502555805'
  alias: Nanoleaf Scene Changer and Auto Brightness
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.nanoleaf_scene
    - sensor.nanoleaf_auto_brightness
  - platform: state
    entity_id:
    - light.shapes_007f
    from: 'off'
    to: 'on'
  - platform: event
    event_type: script_started
    context: {}
  - platform: event
    event_type: event_template_reloaded
  - platform: event
    event_type: automation_reloaded
  condition:
  - condition: template
    value_template: "{{ (not is_state('sensor.nanoleaf_scene', 'unknown') and not
      \nis_state_attr('light.shapes_007f', \"effect\", \nstates('sensor.nanoleaf_scene')))
      \nor \n(not is_state('sensor.nanoleaf_scene', 'unknown') and not \nis_state_attr('light.shapes_007f',
      \"brightness\", \nstates('sensor.nanoleaf_auto_brightness')|int - 2)) }}"
  action:
  - if:
    - condition: template
      value_template: "{{ (not is_state('sensor.nanoleaf_scene', 'unknown') and not
        \nis_state_attr('light.shapes_007f', \"effect\", \nstates('sensor.nanoleaf_scene')))
        \ }}"
    then:
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        effect: '{{ states(''sensor.nanoleaf_scene'') }}'
  - if:
    - condition: template
      value_template: "{{(not is_state('sensor.nanoleaf_scene', 'unknown') and not
        \nis_state_attr('light.shapes_007f', \"brightness\", \nstates('sensor.nanoleaf_auto_brightness')|int
        - 2)) }}"
    then:
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        brightness: '{{ states(''sensor.nanoleaf_auto_brightness'') }}'
  mode: queued
- id: '1661505890362'
  alias: Spotify Refresh
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.shapes_007f
    to: 'on'
  - platform: event
    event_type: automation_reloaded
  condition: []
  action:
  - repeat:
      until:
      - condition: state
        entity_id: light.shapes_007f
        state: 'off'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
  mode: single
