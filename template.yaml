- binary_sensor:
  - name: "Showering"
    unique_id: showering
    state: >
      {{ is_state('binary_sensor.shower', 'on') and 
      is_state('binary_sensor.bathroom_door_zigbee', 'off') and
      is_state('input_boolean.bathroom_occupied', 'on') and
      is_state('light.bathroom_lights', 'on') and 
      is_state_attr('light.bathroom_lights', 'brightness', 255) and 
      (utcnow() > states.light.bathroom_lights.last_changed + timedelta(minutes=3))}}
  - name: "Discord Active"
    state: >
      {{ states('sensor.discord')|float(-1) > 0}}
    unique_id: discord_active
  - name: "Expand Card"
    unique_id: expand_card
    state: > 
      {% if states('switch.ac') is defined and states('switch.lrtv') is defined 
      and states('media_player.owntone_server') is defined %} 
      {{ not is_state('switch.ac', 'on') and not is_state('switch.lrtv', 'on') 
      and not is_state('media_player.owntone_server', 'playing') }}
      {% endif %}
  - name: "Bedroom On"
    state: >
      {{ is_state('light.bedroom_lights', 'on') }}
    unique_id: bedroom_on
  - name: "Evan Home"
    state: >
      {{ is_state('input_boolean.toggle', 'on') }}
    unique_id: evan_home
  - name: "Entry Doors"
    state: > 
      {{ is_state('sensor.alarm_front_garage_door', 'O') }}
    unique_id: entry_doors
  - name: "Master Hall Motion"
    state: > 
      {{ is_state('sensor.alarm_motion', 'O') }}
    unique_id: master_hall_motion
- sensor:
  - name: "AC Thermostat Temperature"
    unique_id: ac_thermostat_temperature
    state: >
      {% if states('person.anthony')|lower in ['utd', 'raytheon', 'away', 'not_home'] 
      or not is_state('switch.ac', "on") or is_state('script.night', "on") %} unknown
      {% elif is_state("input_boolean.ac_boost", "on") -%} 61 
      {% elif is_state("binary_sensor.bedroom_door", "on") and 
      is_state("person.riana", "home") -%} 76
      {% elif is_state("switch.desktop", "on") -%} 75
      {% elif is_state("light.fan_lights", "on") -%} 73 
      {%- else -%} 71
      {%- endif %}
  - name: "Alarm Display"
    unique_id: alarm_display
    state: >
      {% if states.sensor.anthony_s_echo_show_next_alarm.state in ['unknown' ,'unavailable'] or 
      (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state) -
      now()) > as_timedelta("00 22:00:00,000000") -%} 0
      {% elif as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).day != now().day -%}
      {{ (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).strftime("%s") | int) | timestamp_custom("%A at %-I:%M %p", false) }}
      {%- else -%} 
      {{ (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).strftime("%s") | int) | timestamp_custom("%-I:%M %p", false) }}
      {%- endif %}
  - name: "Nanoleaf Auto-Brightness"
    unique_id: nanoleaf_auto_brightness
    state: >
      {# Off #}
      {% if not states('input_select.anthony') in ['Just Arrived', 'Home'] or
      ( is_state('light.bedroom_lights', 'off') and expand('light.bedroom_lights')
      |selectattr('state','in',['unavailable','unknown','none'])|list|count < 1) -%} 0
      {# In call with color loop #}
      {% elif is_state('switch.desktop', 'on') and is_state('binary_sensor.webcam', 'on') and 
      is_state_attr('light.fan_lights', 'effect', 'Color Loop') -%} 142
      {# In call with lights white #}
      {% elif is_state('switch.desktop', 'on') and
      is_state('binary_sensor.webcam', 'on') and
      is_state('light.fan_lights', 'on') -%} 204
      {# Night call #}
      {% elif is_state('light.fan_lights', 'on') and state_attr('light.bed_lights', 'rgb_color')
      | join(' ') == '0 255 255' and 
      is_state_attr('light.bed_lights', 'effect', 'None')%} 25
      {# Door opened #}
      {% elif is_state('binary_sensor.bedroom_door', 'on') and 
      is_state('light.fan_lights', 'on')-%} 254
      {# At desk with lights on #}
      {% elif is_state('switch.desktop', 'on') and 
      is_state('light.fan_lights', 'on') -%} 153
      {# Window open #}
      {% elif is_state('cover.bedroom_blinds', 'open') and 
      is_state('sun.sun', 'above_horizon') -%} 153
      {# At desk with lights off #}
      {% elif is_state('switch.desktop', 'on') -%} 102
      {# Normal #}
      {% elif is_state('light.fan_lights', 'on') -%} 254
      {# In bed #}
      {% elif is_state('light.bedroom_lights', 'on') -%} 63
      {%- else -%} 0
      {%- endif %} 
- trigger:
  - platform: time_pattern
    seconds: /3
  sensor:
    - name: colorloopstate
      unique_id: color_loop_state
      state: >
        {% if states('sensor.colorloopstate')|int(0) == 4 %} 0
        {% else %} {{ states('sensor.colorloopstate')|int(0) + 1 }}
        {% endif %}
- trigger:
  - platform: event
    event_type: event_change_nanoleaf
  - platform: time_pattern
    minutes: /30
  - platform: state
    entity_id:
      - binary_sensor.webcam
  - platform: state
    entity_id:
      - media_player.spotify_anthony221121
    to: 
      - "playing"
      - "idle"
      - "paused"
  - platform: state
    entity_id:
      - light.shapes_007f
    from: "off"
    to: "on"
  - platform: state
    entity_id:
      - light.shapes_ee82
    from: "off"
    to: "on"
  - platform: state
    entity_id:
      - media_player.owntone_output_desk
    to: 
      - "on"
      - "off"
  - platform: numeric_state
    entity_id: media_player.owntone_output_desk
    above: 0.24
    attribute: volume_level
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: numeric_state
    entity_id: media_player.owntone_output_desk
    below: 0.25
    attribute: volume_level
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
      - media_player.spotify_anthony221121
    attribute: media_playlist
  sensor:
    - name: "Nanoleaf Scene"
      unique_id: nanoleaf_scene
      state: >
        {# Define Scenes #}

        {# Regular Scenes #}
        {% set defaultScenes = ['Cosmos', 'Dynamic Blue', 'Ocean', 
        'Vaporwave', 'Rainbow', 'energy'] %}
        {% set nightScenes = ['moonlight', 'Lightscape', 'Night light', 
        'Tron Legacy', 'Pink To Blue', 'Rain', 'TRON CITY', 'Waterfall', 
        'Playstation Blue', 'Bedtime', 'Aurora magic', 'Holodek'] %}
        {% set holidayScenes = ['Christmas', 'Christmas Candy Cane', 
        'Christmas Flow', 'Christmas Tree'] %}
        {% set musicScenes = ['Shooting Stars', 'Cotton Candy', 'Pop Rocks',
        'Rhythmic Northern Lights', 'Meteor Shower', 'Soda', 
        'Pulse Pop Beats', 'Energize', 'Electric purple', 'Mood Movie', 
        'Water Cooler', 'Clubbing', 'Snowy Holiday', 'Lofi Sound'] %}
        {% set lessChillMusicScenes = ['cool thing', 'Hip Hop', 'Prism',
        'Tachyon Light2', 'Oceanworks'] %}

        {# Build List of Scenes #}
        {% set sceneChoices = defaultScenes %}
        {% set unnecessaryTrigger = false %}

        {# Night Scenes #}
        {% if now().hour < 7 and is_state('switch.desktop', 'off') %}  
        {% set sceneChoices = sceneChoices + nightScenes %}
        {%- endif %}  

        {# Holiday Scenes #}
        {% if now().date().month == 12 %}
        {% set sceneChoices = sceneChoices + holidayScenes %}
        {%- endif %} 

        {# Off #}
        {% if is_state('light.bedroom_lights', 'off') and expand('light.bedroom_lights')
        |selectattr('state','in',['unavailable','unknown','none'])|list|count < 1 -%}
        {% set sceneChoices = ['unknown'] %}

        {# In call #}
        {% elif is_state("binary_sensor.webcam", 'on') -%}
        {% set sceneChoices = ['Webcam'] %}

        {# Music #}
        {% elif is_state('switch.desktop', 'off') 
        and (is_state('media_player.owntone_output_desk', 'on') and
        state_attr('media_player.owntone_output_desk', 'volume_level') >= 0.25 and 
        is_state('media_player.spotify_anthony221121', 'playing')
        and state_attr('media_player.spotify_anthony221121', 'volume_level') >= 0.42) and not 
        state_attr('light.bed_lights', 'rgb_color')| join(' ') == '0 255 255'
        and not is_state('binary_sensor.macbook_audio_input_in_use', 'on') 
        and not is_state('binary_sensor.macbook_camera_in_use', 'on')  -%} 
        {% set sceneChoices = musicScenes %}
        {% if state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is defined and 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is not none and not 'lofi' in 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') -%} 
        {% set sceneChoices = sceneChoices + lessChillMusicScenes %} {%- endif %} 
        {%- endif %} 

        {# Unnecessary Trigger #}
        {% if now().minute != 30 and now().minute != 0 and 
        state_attr('light.shapes_007f', 'effect') is defined and 
        state_attr('light.shapes_007f', 'effect') in sceneChoices -%}
        {% set sceneChoices = [state_attr('light.shapes_007f', 'effect')] %}
        {% set unnecessaryTrigger = true %}
        {%- endif %} 

        {# Exclude active scene #}
        {% if not unnecessaryTrigger %} {% set sceneChoices = sceneChoices | 
        reject('in', [state_attr('light.shapes_007f', 'effect'),
        state_attr('light.shapes_ee82', 'effect')]) | list %} {% endif %}

        {# Pick a scene #}
        {{ sceneChoices | random }}