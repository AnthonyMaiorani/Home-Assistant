- button:
  - name: "Cancel alarms today"
    unique_id: alexa_cancel_alarms_today
    press:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: "\"cancel all my alarms today\""
        target:
          entity_id: media_player.anthony_s_echo_show
  - name: "Trigger connected to car"
    unique_id: trigger_connected_to_car
    press:
      - service: automation.trigger
        target: 
          entity_id: automation.connected_to_car
  - name: "Cancel next alarm"
    unique_id: alexa_cancel_next_alarm
    press:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: "\"cancel my {{ states('sensor.alarm_display') }} alarm\""
        target:
          entity_id: media_player.anthony_s_echo_show
  - name: "Alexa Stop"
    unique_id: alexa_stop
    press:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: "\"stop\""
        target:
          entity_id: media_player.anthony_s_echo_show
  - name: "One minute alarm"
    unique_id: alexa_one_minute_alarm
    press:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: "\"set an alarm for {{ (now() + timedelta( minutes = 1 )).strftime('%I:%M %p') }} \""
        target:
          entity_id: media_player.anthony_s_echo_show
- binary_sensor:
  - name: "Anthony Home"
    state: >
      {{ is_state('input_select.anthony', 'Home') or 
      is_state('input_select.anthony', 'Just Arrived') }}
    unique_id: anthony_home
  - name: "Riana Home"
    state: >
      {{ is_state('input_select.riana', 'Home') or 
      is_state('input_select.riana', 'Just Arrived') }}
    unique_id: riana_home
  - name: "Desktop Power"
    state: >
      {{ is_state('binary_sensor.desktop_ping', 'on') or
      not( is_state('sensor.desktop_pc_lastactive', 'unavailable')
        or is_state('binary_sensor.webcam', 'unavailable')
        or is_state('sensor.discord', 'unavailable')
      )}}
    unique_id: desktop_power
  - name: "Discord Active"
    state: >
      {{ states('sensor.discord')|float(-1) > 0}}
    unique_id: discord_active
  - name: "SignalRGB Active"
    state: >
      {{ states('sensor.signalrgb')|float(-1) > 0}}
    unique_id: signalrgb_active
  - name: "AirPods Connected"
    state: >
      {{ "Anthony’s AirPods Pro" in state_attr('sensor.macbook_air_active_audio_output', 
      'All Audio Output') or "Anthony’s AirPods Pro #2" in 
      state_attr('sensor.macbook_air_active_audio_output', 
      'All Audio Output') or "Anthony’s AirPods" in 
      state_attr('sensor.macbook_air_active_audio_output', 
      'All Audio Output') }}
    unique_id: airpods_connected
  - name: "Bedroom On"
    state: >
      {{ is_state('switch.bedroomtoggle', 'on') }}
    unique_id: bedroom_on
  - name: "Home Alone"
    state: >
      {{ is_state('input_boolean.guest', 'off') and 
      ((is_state('input_select.anthony', 'Home') or 
      is_state('input_select.anthony', 'Just Arrived'))
      and not ((is_state('input_select.riana', 'Home') or
      is_state('input_select.riana', 'Just Arrived'))
      or states('zone.home')|int(2) > 1)) or (
      states('zone.home')|int(2) == 2) and (is_state('input_select.taylor_presence', 'Just Arrived') or is_state('input_select.taylor_presence', 'Home'))  }}
    unique_id: home_alone
  - name: "Entry Doors"
    state: > 
      {{ is_state('sensor.alarm_front_garage_door', 'O') }}
    unique_id: entry_doors
  - name: "Master Hall Motion"
    state: > 
      {{ is_state('sensor.alarm_motion', 'O') }}
    unique_id: master_hall_motion
- sensor:
  - name: "Shade Height"
    unique_id: shade_height
    state: >
      {% set deg2rad = pi/180 %}

      {%- macro norm(x, min, max) %}
        {{ (x - min) / (max - min) }}
      {%- endmacro %}

      {%- macro h2perc(x) %}
        {{ 100 * float(norm(x, h_min, h_max)) }}
      {%- endmacro %}

      {%- macro clipv(x, x_min, x_max) %}
        {{ max(min(x, x_max), x_min) }}
      {%- endmacro %}

      {% set win_azi = 96 %}
      {% set d = 0.3 %}
      {% set h_max = 1.22 %}
      {% set h_min = 0 %}

      {% set fov = deg2rad * 90 %}

      {% set sun_azi = state_attr('sun.sun', 'azimuth') %}
      {% set sun_ele = state_attr('sun.sun', 'elevation') %}

      {% set def_h = h_max %}
      
      {% set alpha = deg2rad * sun_ele %}
      {% set gamma = deg2rad * (win_azi - sun_azi) %}    

      {% set h = (d / cos(gamma)) * tan(alpha) %}

      {% if (alpha > 0) and (gamma | abs < fov) %}
          {{ clipv(h2perc(h) | round(0) | int , 0, 100) }}
      {% else %}  
          {{ clipv(h2perc(def_h) | round(0) | int , 0, 100) }}
      {% endif %}
  - name: "Ecobee Current Action"
    unique_id: ecobee_current_action
    state: >
      {{ state_attr('climate.home', 'hvac_action') }}
  - name: "AC Thermostat Temperature"
    unique_id: ac_thermostat_temperature
    state: >
      {% if not (states('input_select.anthony')|lower in ['just arrived', 'home'] or not states('input_select.taylor')|lower in ['just arrived', 'home']) 
      or not is_state('switch.ac', "on") %} unknown
      {% elif is_state("input_boolean.ac_boost", "on") -%} 61 
      {% elif is_state("binary_sensor.bedroom_door", "on") and is_state("person.riana", "home") -%} 75
      {% elif is_state("binary_sensor.bedroom_chair", "on") and not is_state("binary_sensor.bed_occupancy", "on") -%} 73
      {% elif is_state("light.fan_lights", "on") -%} 71
      {%- else -%} 71
      {%- endif %}
  - name: "Alarm Display"
    unique_id: alarm_display
    state: >
      {% if states.sensor.anthony_s_echo_show_next_alarm.state in ['unknown' ,'unavailable'] or 
      (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state) -
      now()) > as_timedelta("00 22:00:00,000000") -%} 0
      {% elif as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).day != now().day -%}
      {{ (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).strftime("%s") | int) | timestamp_custom("%A at %-I:%M %p", true) }}
      {%- else -%} 
      {{ (as_datetime(states.sensor.anthony_s_echo_show_next_alarm.state).strftime("%s") | int) | timestamp_custom("%-I:%M %p", true) }}
      {%- endif %}
  - name: "Nanoleaf Auto-Brightness"
    unique_id: nanoleaf_auto_brightness
    state: >
      {# Off #}
      {% if (not states('input_select.anthony') in ['Just Arrived', 'Home'] and not states('person.taylor', 'home')) or
      ( is_state('light.bedroom_lights', 'off') and is_state('light.govee', 'off')) -%} 0
      {# In call with color loop #}
      {% elif is_state('binary_sensor.desktop_power', 'on') and is_state('binary_sensor.webcam', 'on') and 
      is_state_attr('light.fan_lights', 'effect', 'Color Loop') -%} 178
      {# In call with lights white #}
      {% elif is_state('binary_sensor.desktop_power', 'on') and
      is_state('binary_sensor.webcam', 'on') and
      is_state('light.fan_lights', 'on') -%} 204
      {# In call with lights off #}
      {% elif is_state('binary_sensor.desktop_power', 'on') and
      is_state('binary_sensor.webcam', 'on') and not
      is_state('light.fan_lights', 'on') -%} 102
      {# Night call #}
      {% elif not is_state('light.fan_lights', 'on') and not is_state('light.wled', 'on') and 
      is_state('light.govee', 'on') and is_state('light.bed', 'on') %} 23
      {# Door opened #}
      {% elif is_state('binary_sensor.bedroom_door', 'on') and 
      is_state('light.fan_lights', 'on')-%} 254
      {# At desk with lights on #}
      {% elif is_state('binary_sensor.desktop_power', 'on') and 
      is_state('light.fan_lights', 'on') -%} 153
      {# Window open #}
      {% elif is_state('cover.bedroom_blinds', 'open') -%} 102
      {# At desk with lights off #}
      {% elif is_state('binary_sensor.desktop_power', 'on') and 
      is_state('binary_sensor.bed_occupancy', 'off')-%} 102
      {# Normal #}
      {% elif is_state('light.fan_lights', 'on') -%} 254
      {# In bed #}
      {# {% elif is_state('light.bedroom_lights', 'on') and not
      is_state_attr('light.bed_lights', 'effect', 'None') -%} 63 #}
      {% elif is_state('light.wled', 'on') -%} 63
      {%- else -%} 0
      {%- endif %} 
- trigger:
  - platform: time_pattern
    seconds: /3
  sensor:
    - name: colorloopstate
      unique_id: color_loop_state
      state: >
        {% if states('sensor.colorloopstate')|int(0) == 4 %} 0
        {% else %} {{ states('sensor.colorloopstate')|int(0) + 1 }}
        {% endif %}
- trigger:
  - platform: event
    event_type: event_change_nanoleaf
    id: event
  - platform: time_pattern
    minutes: /30
  - platform: state
    entity_id:
      - binary_sensor.webcam
#  - platform: state
#    entity_id:
#      - media_player.spotify_anthony221121
#    to: 
#      - "playing"
#      - "idle"
#      - "paused"
  - platform: state
    entity_id:
      - binary_sensor.macbook_air_camera_in_use
    from: "off"
    to: "on"
  - platform: state
    entity_id:
      - light.shapes_007f
    from: "off"
    to: "on"
  - platform: state
    entity_id:
      - light.shapes_ee82
    from: "off"
    to: "on"
  # - platform: state
  #   entity_id:
  #     - media_player.owntone_output_anthony_s_desk
  #   to: 
  #     - "on"
  #     - "off"
  # - platform: numeric_state
  #   entity_id: media_player.owntone_output_anthony_s_desk
  #   above: 0.24
  #   attribute: volume_level
  #   for:
  #     hours: 0
  #     minutes: 0
  #     seconds: 2
  # - platform: numeric_state
  #   entity_id: media_player.owntone_output_anthony_s_desk
  #   below: 0.25
  #   attribute: volume_level
  #   for:
  #     hours: 0
  #     minutes: 0
  #     seconds: 2
  # - platform: state
  #   entity_id:
  #     - media_player.spotify_anthony221121
  #   attribute: media_playlist
  sensor:
    - name: "Nanoleaf Scene"
      unique_id: nanoleaf_scene
      state: >
        {# Define Scenes #}

        {# Regular Scenes #}
        {% set defaultScenes = ['Cosmos', 'Dynamic Blue', 'Ocean', 
        'Rainbow'] %}
        {% set nightScenes = ['moonlight', 'Lightscape', 'Night light',
        'Pink To Blue', 'Playstation Blue', 'Bedtime', 
        'Aurora magic', 'Holodek'] %}
        {% set holidayScenes = ['Christmas', 'Christmas Candy Cane', 
        'Christmas Flow', 'Christmas Tree'] %}
        {% set musicScenes = ['Shooting Stars', 'Cotton Candy', 'Pop Rocks',
        'Rhythmic Northern Lights', 'Meteor Shower', 'Soda', 
        'Pulse Pop Beats', 'Energize', 'Electric purple', 'Mood Movie', 
        'Water Cooler', 'Clubbing', 'Snowy Holiday', 'Lofi Sound'] %}
        {% set lessChillMusicScenes = ['cool thing', 'Hip Hop', 
        'Tachyon Light2', 'Oceanworks'] %}
        {% set darkScenes = ['TRON CITY', 'Tron Legacy', 'Vaporwave', 'energy'] %}

        {# Build List of Scenes #}
        {% set sceneChoices = defaultScenes %}
        {% set unnecessaryTrigger = false %}

        {# Night Scenes #}
        {% if now().hour < 7 and is_state('switch.desktop', 'off') %}  
        {% set sceneChoices = sceneChoices + nightScenes %}

          {# If in call on laptop #}
          {% if states('sensor.macbook_air_active_camera') in ['unavailable', 'Inactive'] %}
          {% set sceneChoices = sceneChoices + darkScenes %}
          {%- endif %} 
        {%- endif %}  

        {# Holiday Scenes #}
        {% if now().date().month == 12 %}
        {% set sceneChoices = sceneChoices + holidayScenes %}
        {%- endif %} 

        {# Off #}
        {% if is_state('light.bedroom_lights', 'off') and expand('light.bedroom_lights')
        |selectattr('state','in',['unavailable','unknown','none'])|list|count < 1 -%}
        {% set sceneChoices = ['unknown'] %}

        {# In call #}
        {% elif is_state("binary_sensor.webcam", 'on') -%}
        {% set sceneChoices = ['Webcam'] %}

        {# Music #}
        {# {% elif is_state('switch.desktop', 'off') 
        and (is_state('media_player.owntone_output_anthony_s_desk', 'on') and
        state_attr('media_player.owntone_output_anthony_s_desk', 'volume_level') >= 0.25 and 
        is_state('media_player.spotify_anthony221121', 'playing')
        and state_attr('media_player.spotify_anthony221121', 'volume_level') >= 0.42) and not 
        state_attr('light.bed_lights', 'rgb_color')| join(' ') == '0 255 255'
        and not is_state('binary_sensor.macbook_audio_input_in_use', 'on') 
        and not is_state('binary_sensor.macbook_camera_in_use', 'on')  -%} 
        {% set sceneChoices = musicScenes %}
        {% if state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is defined and 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is not none and not 'lofi' in 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') -%} 
        {% set sceneChoices = sceneChoices + lessChillMusicScenes %} {%- endif %} 
        {%- endif %} #}

        {% elif is_state('switch.desktop', 'off') 
        and (is_state('media_player.owntone_output_anthony_s_desk', 'on') and
        state_attr('media_player.owntone_output_anthony_s_desk', 'volume_level') >= 0.25 and 
        is_state('media_player.spotify_anthony221121', 'playing')
        and state_attr('media_player.spotify_anthony221121', 'volume_level') >= 0.42)
        and not is_state('binary_sensor.macbook_audio_input_in_use', 'on') 
        and not is_state('binary_sensor.macbook_camera_in_use', 'on')  -%} 
        {% set sceneChoices = musicScenes %}
        {% if state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is defined and 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') 
        is not none and not 'lofi' in 
        state_attr('media_player.spotify_anthony221121', 'media_playlist') -%} 
        {% set sceneChoices = sceneChoices + lessChillMusicScenes %} {%- endif %} 
        {%- endif %} 

        {# Unnecessary Trigger #}
        {% if now().minute != 30 and now().minute != 0 and 
        now().second > 0 and now().microsecond > 300000 and
        state_attr('light.shapes_007f', 'effect') is defined and 
        state_attr('light.shapes_007f', 'effect') in sceneChoices and not
        trigger.id == "event" -%}
        {% set sceneChoices = [state_attr('light.shapes_007f', 'effect')] %}
        {% set unnecessaryTrigger = true %}
        {%- endif %} 

        {# Exclude active scene #}
        {% if not unnecessaryTrigger %} {% set sceneChoices = sceneChoices | 
        reject('in', [state_attr('light.shapes_007f', 'effect'),
        state_attr('light.shapes_ee82', 'effect')]) | list %} {% endif %}

        {# Pick a scene #}
        {{ sceneChoices | random }}