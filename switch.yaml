# - platform: command_line
#   switches:
#     u6_pro_led:
#       friendly_name: "U6-Pro LED"
#       command_on: !secret u6_pro_on
#       command_off: !secret u6_pro_off
- platform: template
  switches:
    ac_boost:
      unique_id: ac_boost
      friendly_name: "AC Boost"
      value_template: "{{ is_state('input_boolean.ac_boost', 'on') }}"
      turn_on:
        - service: input_boolean.turn_on
          target:
              entity_id: input_boolean.ac_boost
      turn_off:
        - service: input_boolean.turn_off
          target:
              entity_id: input_boolean.ac_boost
    privacy:
      friendly_name: "Privacy"
      unique_id: privacy
      value_template: "{{ is_state('input_boolean.privacy', 'on') }}"
      turn_on:
        - service: input_boolean.turn_on
          target:
              entity_id: input_boolean.privacy
      turn_off:
        - service: input_boolean.turn_off
          target:
              entity_id: input_boolean.privacy
    bedroomtoggle:
      unique_id: bedroom_toggle
      value_template: "{{ is_state('light.bedroom_lights', 'on') }}"
      turn_on:
        - parallel:
          - service: script.morning
          # - service: climate.set_hvac_mode
          #   data:
          #     hvac_mode: cool
          #   target:
          #     entity_id: climate.bedroom_ac
      turn_off:
        - parallel:
          - service: script.night
          - service: media_player.turn_off
            target:
              entity_id:
                - media_player.owntone_output_desk
                - media_player.owntone_output_nightstand
                - media_player.owntone_output_bathroom
          - service: climate.turn_off
            target:
              entity_id:
                - climate.bedroom_ac
    ac:
      friendly_name: AC
      unique_id: ac
      value_template: "{{ is_state('climate.bedroom_ac', 'cool') }}"
      turn_on:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: cool
        target:
          entity_id: climate.bedroom_ac
      turn_off:
      - service: climate.turn_off
        target:
          entity_id: climate.bedroom_ac
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.ac_boost
      - service: timer.cancel
        target:
          entity_id: timer.ac
    lrtv:
      unique_id: lrtv
      friendly_name: Living Room TV
      value_template: "{{ not is_state('media_player.living_room_denon', 'off') }}"
      turn_on:
        - service: media_player.turn_on
          entity_id:
            - media_player.living_room
      turn_off:
        - service: media_player.turn_off
          entity_id:
            - media_player.living_room
            - media_player.owntone_output_living_room_tv
    fronttv:
      unique_id: fronttv
      friendly_name: Front TV
      value_template: "{{ not states('media_player.front') in ['standby', 'unavailable'] }}"
      turn_on:
        - service: media_player.turn_on
          entity_id:
            - media_player.front
      turn_off:
        - service: media_player.turn_off
          entity_id:
            - media_player.front
            - media_player.owntone_output_front
    guesttv:
      unique_id: guesttv
      friendly_name: Guest TV
      value_template: "{{ is_state('media_player.guest_tv', 'on') }}"
      turn_on:
        - service: media_player.turn_on
          entity_id:
            - media_player.guest_tv
      turn_off:
        - service: media_player.turn_off
          entity_id:
            - media_player.guest_tv
            - media_player.owntone_output_guest_tv
    mastertv:
      unique_id: mastertv
      friendly_name: Master TV
      value_template: "{{ is_state('remote.master_bedroom_tv', 'on') }}"
      turn_on:
        - service: media_player.turn_on
          entity_id:
            - media_player.master_bedroom_tv
      turn_off:
        - service: media_player.turn_off
          entity_id:
            - media_player.master_bedroom_tv
            - media_player.owntone_output_master_bedroom_tv
    desktop:
      unique_id: desktop
      friendly_name: Desktop
      value_template: "{{ states('binary_sensor.desktop_power') }}"
      turn_on:
        - service: wake_on_lan.send_magic_packet
          data:
            mac: !secret desktop
      turn_off:
        - service: button.press
          target:
            entity_id:
              - button.shutdown