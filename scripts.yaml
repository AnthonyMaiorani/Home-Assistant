fan_off:
  alias: Lights Off
  sequence:
  - parallel:
    - service: light.turn_on
      target:
        entity_id:
        - light.glide
      data:
        rgb_color:
        - 0
        - 126
        - 255
        brightness_pct: 1
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - light.fan_lights
        - input_boolean.bedmotion
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        brightness_pct: 25
    - data: {}
      service: homeassistant.turn_on
      target:
        entity_id:
        - input_boolean.automating
        - input_boolean.govee_cyan
        - group.misc_leds
    - parallel:
      - data:
          brightness: 255
          effect: Color Loop
          color_name: cyan
        service: light.turn_on
        target:
          entity_id:
          - light.bed_lights
          - light.desk_lights
          - light.rgb_light_switch
      - if:
        - condition: state
          entity_id: binary_sensor.closet
          state: 'on'
        then:
        - service: light.turn_on
          target:
            entity_id: light.closet_lights
          data:
            effect: Color Loop
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        - condition: template
          value_template: '{{ states("input_select.nanoleaf_scenes") == states("input_select.nanoleaf_scenes")
            }}'
      then:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
  mode: single
  icon: mdi:ceiling-light
color_loop:
  alias: Color
  sequence:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_boolean.govee_cyan
          state: 'on'
        sequence:
        - service: media_player.play_media
          target:
            entity_id: media_player.bedroom_dot
          data:
            media_content_type: routine
            media_content_id: rainbow
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.govee_cyan
          data: {}
      default:
      - service: light.turn_on
        target:
          entity_id:
          - light.glide
        data: {}
    - service: homeassistant.turn_on
      data: {}
      target:
        entity_id:
        - input_boolean.automating
        - group.misc_leds
    - data:
        brightness: 255
        effect: Color Loop
        rgbw_color:
        - 0
        - 255
        - 255
        - 0
      service: light.turn_on
      target:
        entity_id:
        - light.bedroom_lights
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
      then:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          brightness_pct: 100
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 55
            effect: Webcam
      - conditions:
        - condition: template
          value_template: '{{ as_timestamp(now(), 301) < as_timestamp(states(''sensor.desktop_pc_lastactive''),
            0) + 300 }}'
        - condition: state
          entity_id: binary_sensor.bedroom_door
          state: 'off'
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 60
      default:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          brightness_pct: 100
    - if:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      then:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        - condition: template
          value_template: '{{ states("input_select.nanoleaf_scenes") == states("input_select.nanoleaf_scenes")
            }}'
      then:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
  mode: single
  icon: mdi:lightbulb-on
music:
  alias: Music
  sequence:
  - parallel:
    - service: media_player.play_media
      target:
        entity_id: media_player.bedroom_dot
      data:
        media_content_type: routine
        media_content_id: music mode
    - service: light.turn_on
      target:
        entity_id: light.desk_lights
      data:
        brightness_pct: 90
    - service: light.turn_on
      data:
        effect: Music
      target:
        entity_id:
        - light.bedroom_lights
        - light.closet_lights
    - service: input_select.select_option
      target:
        entity_id: input_select.nanoleaf_music
      data:
        option: "{{ state_attr('input_select.nanoleaf_music', 'options')\n    | reject('in',\
          \ [states('input_select.nanoleaf_music')])\n    | list | random }}\n"
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        brightness_pct: 100
        effect: '{{ states(''input_select.nanoleaf_music'') }}'
  mode: single
  icon: mdi:party-popper
call:
  alias: Call
  sequence:
  - parallel:
    - service: input_boolean.turn_on
      target:
        entity_id:
        - input_boolean.govee_cyan
        - input_boolean.automating
      data: {}
    - service: light.turn_on
      target:
        entity_id:
        - light.glide
      data:
        rgb_color:
        - 0
        - 126
        - 255
        brightness_pct: 1
    - service: light.turn_on
      target:
        entity_id:
        - light.bed_lights
      data:
        effect: None
        rgb_color:
        - 0
        - 255
        - 255
        brightness_pct: 100
    - service: light.turn_on
      target:
        entity_id:
        - light.rgb_light_switch
      data:
        effect: None
        rgb_color:
        - 0
        - 255
        - 255
        brightness_pct: 50
    - service: light.turn_on
      target:
        entity_id: light.shapes_007f
      data:
        brightness_pct: 10
        effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
    - data: {}
      service: homeassistant.turn_off
      target:
        entity_id:
        - switch.clock
        - light.fan_lights
        - light.desk_lights
        - light.closet_lights
        - switch.desktop
  - service: light.turn_on
    target:
      entity_id:
      - light.bed_lights
    data:
      effect: None
      rgb_color:
      - 0
      - 255
      - 255
  mode: single
  icon: mdi:phone
night:
  sequence:
  - data: {}
    service: homeassistant.turn_off
    target:
      entity_id:
      - light.bedroom_lights
      - light.closet_lights
      - light.shapes_007f
      - light.glide
      - group.misc_leds
      - switch.blinds
      - switch.desktop
  alias: Night
  mode: single
  icon: mdi:weather-night
morning:
  alias: Morning
  sequence:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_boolean.govee_cyan
          state: 'on'
        sequence:
        - service: media_player.play_media
          target:
            entity_id: media_player.bedroom_dot
          data:
            media_content_type: routine
            media_content_id: rainbow
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.govee_cyan
          data: {}
      default:
      - service: light.turn_on
        target:
          entity_id:
          - light.glide
        data: {}
    - data:
        brightness: 255
        effect: None
        color_temp: 400
      service: light.turn_on
      target:
        entity_id: light.fan_lights
    - choose:
      - conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 70
            effect: Webcam
      - conditions:
        - condition: template
          value_template: '{{ as_timestamp(now(), 301) < as_timestamp(states(''sensor.desktop_pc_lastactive''),
            0) + 300 }}'
        - condition: state
          entity_id: binary_sensor.bedroom_door
          state: 'off'
        sequence:
        - service: light.turn_on
          target:
            entity_id: light.shapes_007f
          data:
            brightness_pct: 70
      default:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          brightness_pct: 100
    - data: {}
      service: homeassistant.turn_on
      target:
        entity_id:
        - group.misc_leds
        - input_boolean.automating
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: binary_sensor.webcam
          state: 'on'
        - condition: template
          value_template: '{{ states("input_select.nanoleaf_scenes") == states("input_select.nanoleaf_scenes")
            }}'
      then:
      - service: light.turn_on
        target:
          entity_id: light.shapes_007f
        data:
          effect: '{{ states(''input_select.nanoleaf_scenes'') }}'
    - if:
      - condition: state
        entity_id: binary_sensor.closet
        state: 'on'
      then:
      - service: light.turn_on
        target:
          entity_id: light.closet_lights
        data:
          effect: Color Loop
    - data:
        brightness: 255
        effect: Color Loop
        color_name: cyan
      service: light.turn_on
      target:
        entity_id:
        - light.bed_lights
        - light.desk_lights
        - light.rgb_light_switch
    - service: input_select.select_option
      data:
        option: Home
      target:
        entity_id: input_select.anthony
  mode: single
  icon: mdi:white-balance-sunny
