fan_off:
  alias: Lights Off
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.morning
      - script.call
      - script.color_loop
      - script.night
  - parallel:
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - light.fan_lights
        - input_boolean.bedmotion
        - switch.katchy
        - light.hallway_lights
    - service: homeassistant.turn_on
      data: {}
      target:
        entity_id:
        - switch.lumi_lumi_plug_maus01_switch_2
        - light.shapes_483c
        - light.shapes_4948_2
        - light.shapes_007f
        - light.shapes_4948
        - light.shapes_ee82
    - data:
        brightness: 255
        effect: Color Loop
        color_name: cyan
      service: light.turn_on
      target:
        entity_id:
        - light.light_switch
        - light.light_switch_corner
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'on'
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.goxlr
      else:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.goxlr
      enabled: false
    - service: light.turn_on
      data:
        brightness_pct: 35
      target:
        entity_id:
        - light.bed
        - light.wled
        - light.rope
        - light.lines
    - if:
      - condition: state
        entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
        state: 'off'
      then:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
  mode: restart
  icon: mdi:ceiling-light
color_loop:
  alias: Color
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.call
      - script.fan_off
      - script.morning
      - script.night
  - parallel:
    - data:
        brightness: 255
        effect: Color Loop
        rgbw_color:
        - 0
        - 255
        - 255
        - 0
      service: light.turn_on
      target:
        entity_id:
        - light.bedroom_lights
    - if:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: media_player.owntone_output_anthony_s_desk
          attribute: volume_level
          below: 0.1
        - condition: numeric_state
          entity_id: media_player.owntone_output_anthony_s_nightstand
          attribute: volume_level
          below: 0.1
      then:
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: Music
        then:
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.18
              target:
                entity_id:
                - media_player.spotify_anthony221121
                - media_player.owntone_output_anthony_s_desk
                - media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        else:
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.13
              target:
                entity_id:
                - media_player.spotify_anthony221121
                - media_player.owntone_output_anthony_s_desk
                - media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
    - service: light.turn_on
      data:
        brightness_pct: 100
      target:
        entity_id:
        - light.wled
        - light.bed
        - light.govee
        - light.shapes_483c
        - light.shapes_4948_2
        - light.rope
        - light.lines
    - service: switch.turn_on
      data: {}
      target:
        entity_id:
        - switch.usb_hub
        - switch.lumi_lumi_plug_maus01_switch_2
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'on'
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.goxlr
      else:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.goxlr
        enabled: false
    - if:
      - condition: sun
        after: sunrise
        before: sunset
      - condition: numeric_state
        entity_id: weather.dark_sky
        attribute: temperature
        below: 85
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
        for:
          hours: 0
          minutes: 1
          seconds: 0
      - condition: numeric_state
        entity_id: sensor.pirateweather_daytime_high_temperature_0d
        below: 95
      - condition: state
        entity_id: cover.bedroom_blinds
        state: closed
      then:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.bedroom_blinds
    - if:
      - condition: and
        conditions:
        - condition: state
          entity_id: light.wyze_bulb_1
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_2
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_3
          state: unavailable
        alias: relay was turned off
      then:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - light.wyze_bulb_1
          from: unavailable
        - platform: state
          entity_id:
          - light.wyze_bulb_2
          from: unavailable
        - platform: state
          entity_id:
          - light.wyze_bulb_3
          from: unavailable
      - data:
          brightness: 255
          effect: Color Loop
          rgbw_color:
          - 0
          - 255
          - 255
          - 0
        service: light.turn_on
        target:
          entity_id:
          - light.fan_lights
      else:
      - data:
          brightness: 255
          effect: Color Loop
          rgbw_color:
          - 0
          - 255
          - 255
          - 0
        service: light.turn_on
        target:
          entity_id:
          - light.fan_lights
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.light_switch_relay
  mode: single
  icon: mdi:lightbulb-on
music:
  alias: Music
  sequence:
  - parallel:
    - service: input_button.press
      data: {}
      target:
        entity_id: input_button.activategoveemusic
    - service: light.turn_on
      data:
        effect: Music
        brightness_pct: 100
        rgbw_color:
        - 0
        - 0
        - 255
        - 0
      target:
        entity_id:
        - light.bedroom_lights
    - service: light.turn_on
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
        - light.shapes_4948
  mode: single
  icon: mdi:party-popper
call:
  alias: Call
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.night
      - script.morning
      - script.color_loop
      - script.fan_off
  - parallel:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.bedmotion
        - input_boolean.privacy
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.desktop
        - switch.usb_hub
        - switch.lumi_lumi_plug_maus01_switch_2
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.fan_lights
        - light.hallway_lights
    - if:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: media_playlist
        state: Music
      then:
      - service: script.lofi
        data: {}
      - service: media_player.volume_set
        data:
          volume_level: 0.07
        target:
          entity_id:
          - media_player.spotify_anthony221121
      - repeat:
          count: 100
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
              - media_player.owntone_output_anthony_s_nightstand
          - service: media_player.volume_set
            data:
              volume_level: 0.07
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
          - service: media_player.volume_set
            data:
              volume_level: 0.14
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      else:
      - service: media_player.volume_set
        data:
          volume_level: 0.12
        target:
          entity_id:
          - media_player.spotify_anthony221121
      - repeat:
          count: 100
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
              - media_player.owntone_output_anthony_s_nightstand
          - service: media_player.volume_set
            data:
              volume_level: 0.11
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
          - service: media_player.volume_set
            data:
              volume_level: 0.21
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
    - if:
      - condition: time
        after: '23:00:00'
        before: 06:00:00
        alias: night
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.kitchen_lights
          - light.living_room_lights
          - light.rotunda_lights
          - light.living_room_fan
          - light.kitchen_cabinet_lights
          - light.master_hallway_light
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.gym_fan
          - switch.living_room_fan
          - switch.porch_light
          - switch.laundry_room_light
          - switch.garage_light
      alias: turn off home lights if alone and night
    - event: event_change_nanoleaf
      event_data: {}
    - repeat:
        count: 200
        sequence:
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.wled
        - service: light.turn_on
          data:
            brightness: 10
          target:
            entity_id:
            - light.bed
            - light.rope
            - light.lines
        - service: light.turn_on
          data:
            brightness: 5
          target:
            entity_id:
            - light.govee
        - service: switch.turn_off
          data: {}
          target:
            entity_id:
            - switch.usb_hub
            - switch.goxlr
        - service: light.turn_on
          target:
            entity_id:
            - light.light_switch
            - light.light_switch_corner
          data:
            effect: None
            rgb_color:
            - 0
            - 255
            - 255
            brightness_pct: 30
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 500
        - service: light.turn_on
          data:
            brightness: 23
          target:
            entity_id:
            - light.shapes_4948_2
            - light.shapes_483c
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.bedroom_blinds
  mode: restart
  icon: mdi:phone
night:
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.morning
      - script.call
      - script.color_loop
      - script.fan_off
      - script.play_music
  - parallel:
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.bedroom_lights
        - light.govee
        - light.shapes_ee82
        - light.shapes_4948
        - light.wled
        - light.bed
        - light.rope
        - light.lines
        - light.shapes_483c
        - light.shapes_4948_2
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.bedroom_blinds
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.desktop
        - switch.lumi_lumi_plug_maus01_switch_2
    - if:
      - condition: state
        state: 'on'
        entity_id: binary_sensor.bed_occupancy
      then:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.usb_hub
      alias: turn off mouse dock
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.bedmotion
    - if:
      - condition: time
        after: '23:00:00'
        before: 06:00:00
        alias: night
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.kitchen_lights
          - light.living_room_lights
          - light.rotunda_lights
          - light.living_room_fan
          - light.kitchen_cabinet_lights
          - light.master_hallway_light
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.gym_fan
          - switch.living_room_fan
          - switch.porch_light
          - switch.laundry_room_light
          - switch.garage_light
      alias: turn off home lights if alone and night
    - repeat:
        count: '120'
        sequence:
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.shapes_ee82
            - light.shapes_4948
            - light.shapes_007f
            - light.wled
            - light.shapes_4948_2
            - light.shapes_483c
            - light.lines
            - light.rope
            - light.govee
            - light.bed
            - light.light_switch
            - light.light_switch_corner
        - delay:
            hours: 0
            minutes: 0
            seconds: 1
            milliseconds: 0
      enabled: true
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'on'
        - condition: time
          after: '23:00:00'
          before: 06:00:00
      then:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.hallway_lights
      alias: hallway light
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.anthony
          state: Home
        - condition: state
          entity_id: input_select.anthony
          state: Just Arrived
      then:
      - if:
        - condition: state
          entity_id: binary_sensor.bed_occupancy
          state: 'on'
        - condition: time
          before: 08:00:00
          after: '22:00:00'
        - condition: not
          conditions:
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: media_playlist
            state: lofi
          - condition: state
            entity_id: media_player.spotify_anthony221121
            attribute: source
            state: Home Assistant
          - condition: state
            entity_id: media_player.spotify_anthony221121
            state: playing
        then:
        - service: script.turn_on
          data: {}
          target:
            entity_id: script.lofi
        else:
        - service: media_player.volume_set
          data:
            volume_level: 0.07
          target:
            entity_id:
            - media_player.spotify_anthony221121
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.07
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.14
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        alias: music
      alias: music
    - if:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      - condition: state
        entity_id: person.taylor
        state: home
      - condition: state
        entity_id: switch.ac
        state: 'on'
      - condition: state
        entity_id: input_boolean.ac_boost
        state: 'off'
      - condition: sun
        before: sunrise
        after: sunset
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.acfanhigh
    - if:
      - condition: state
        entity_id: switch.acfanhigh
        state: 'on'
      then:
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: media_player.volume_set
        data:
          volume_level: 0.12
        target:
          entity_id:
          - media_player.spotify_anthony221121
      - repeat:
          count: '3'
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: 0.12
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
          - service: media_player.volume_set
            data:
              volume_level: 0.24
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      else:
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - condition: state
        entity_id: switch.acfanhigh
        state: 'on'
      - service: media_player.volume_set
        data:
          volume_level: 0.12
        target:
          entity_id:
          - media_player.spotify_anthony221121
      - repeat:
          count: '3'
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: 0.12
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_desk
          - service: media_player.volume_set
            data:
              volume_level: 0.24
            target:
              entity_id:
              - media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      alias: increase volume if ac fan high
    - service: automation.turn_off
      data:
        stop_actions: true
      target:
        entity_id:
        - automation.morning_lights_on
        - automation.bathroom_music
    - if:
      - condition: template
        value_template: '{{ true }}'
      then:
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.morning_lights_on
          - automation.bathroom_music
    - service: homeassistant.update_entity
      data: {}
      target:
        entity_id: sensor.anthony_s_echo_show_next_alarm
    - service: automation.turn_on
      data: {}
      target:
        entity_id:
        - automation.nanoleaf_scene_changer_and_auto_brightness
        - automation.bed_occupancy
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'on'
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.goxlr
      else:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.goxlr
  alias: Night
  mode: restart
  icon: mdi:weather-night
morning:
  alias: Morning
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.night
      - script.color_loop
      - script.call
      - script.fan_off
  - parallel:
    - data:
        brightness_pct: 100
      service: light.turn_on
      target:
        entity_id:
        - light.govee
        - light.wled
        - light.bed
        - light.rope
        - light.lines
    - data:
        brightness: 255
        effect: Color Loop
        color_name: cyan
      service: light.turn_on
      target:
        entity_id:
        - light.light_switch
        - light.light_switch_corner
    - service: input_select.select_option
      data:
        option: Home
      target:
        entity_id: input_select.anthony
    - if:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: media_player.owntone_output_anthony_s_desk
          attribute: volume_level
          below: 0.1
        - condition: numeric_state
          entity_id: media_player.owntone_output_anthony_s_nightstand
          attribute: volume_level
          below: 0.1
      then:
      - if:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: Music
        then:
        - service: media_player.volume_set
          data:
            volume_level: 0.18
          target:
            entity_id: media_player.spotify_anthony221121
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.18
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.36
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        else:
        - service: media_player.volume_set
          data:
            volume_level: 0.13
          target:
            entity_id: media_player.spotify_anthony221121
        - repeat:
            count: '3'
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.13
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_desk
            - service: media_player.volume_set
              data:
                volume_level: 0.26
              target:
                entity_id:
                - media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
    - service: homeassistant.turn_on
      data: {}
      target:
        entity_id:
        - switch.lumi_lumi_plug_maus01_switch_2
        - light.shapes_483c
        - light.shapes_4948_2
        - light.shapes_007f
        - light.shapes_4948
        - light.shapes_ee82
    - if:
      - condition: sun
        after: sunrise
        before: sunset
      - condition: numeric_state
        entity_id: weather.dark_sky
        attribute: temperature
        below: 85
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
        for:
          hours: 0
          minutes: 1
          seconds: 0
      - condition: numeric_state
        entity_id: sensor.pirateweather_daytime_high_temperature_0d
        below: 95
      - condition: state
        entity_id: cover.bedroom_blinds
        state: closed
      then:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.bedroom_blinds
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.acfanhigh
    - if:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      - condition: and
        conditions:
        - condition: state
          entity_id: input_select.taylor_presence
          state: Home
        - condition: state
          entity_id: input_select.taylor_presence
          state: Just Arrived
      then:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bedmotion
      enabled: true
    - if:
      - condition: state
        entity_id: switch.desktop
        state: 'on'
      then:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.goxlr
      else:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.goxlr
        enabled: false
    - if:
      - condition: and
        conditions:
        - condition: state
          entity_id: light.wyze_bulb_1
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_2
          state: unavailable
        - condition: state
          entity_id: light.wyze_bulb_3
          state: unavailable
        alias: relay was turned off
      then:
      - repeat:
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: 100
              hs_color:
              - 30.353
              - 33.597
              effect: None
            target:
              entity_id: light.fan_lights
          until:
          - condition: state
            entity_id: light.wyze_bulb_1
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
          - condition: state
            entity_id: light.wyze_bulb_2
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
          - condition: state
            entity_id: light.wyze_bulb_3
            state: 'on'
            for:
              hours: 0
              minutes: 0
              seconds: 1
      else:
      - service: light.turn_on
        data:
          brightness_pct: 100
          hs_color:
          - 30.353
          - 33.597
          effect: None
        target:
          entity_id: light.fan_lights
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.light_switch_relay
    - if:
      - condition: state
        entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
        state: 'off'
      then:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.nanoleaf_scene_changer_and_auto_brightness
  mode: single
  icon: mdi:white-balance-sunny
start_car:
  alias: Start Car
  sequence:
  - if:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: time
      before: '11:00:00'
      after: 07:00:00
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: state
      entity_id: person.anthony
      state: home
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.ac_boost
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: cover.garage_door
        state: open
    - condition: or
      conditions:
      - condition: state
        entity_id: person.anthony
        state: home
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.garage_door
    - wait_for_trigger:
      - platform: state
        entity_id:
        - cover.garage_door
        to: opening
      continue_on_timeout: false
      timeout: 00:01:00
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.accord_remotestart
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: drone_mobile.refresh_device_status_accord
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.accord_ignitionstatus
        state: 'on'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.accord_remotestart
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: drone_mobile.refresh_device_status_accord
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - sensor.accord_ignitionstatus
      to: 'On'
    timeout:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.accord_ignitionstatus
        state: 'On'
    then:
    - service: notify.mobile_app_iphone
      data:
        message: Remote start failed
  mode: single
  icon: mdi:car
lofi:
  alias: LoFi
  sequence:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.anthony
      state: Home
  - if:
    - condition: state
      entity_id: script.stop_music
      state: 'on'
    then:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - script.stop_music
        to: 'off'
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.play_music
  - if:
    - condition: state
      entity_id: media_player.owntone_output_anthony_s_desk
      state: unavailable
    - condition: state
      entity_id: media_player.owntone_output_anthony_s_nightstand
      state: unavailable
    then:
    - service: hassio.addon_restart
      data:
        addon: 4b3d1287_homepod_connect_dev
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_front
        - media_player.owntone_output_front_homepod
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_garage_homepod
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.owntone_output_bathroom
        from: unavailable
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
    - repeat:
        count: 2
        sequence:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_server
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_front_homepod
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_garage_homepod
            - media_player.owntone_output_guest_left
            - media_player.owntone_output_guest_right
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
  - service: media_player.select_source
    data:
      source: librespot-java (pipe)
    target:
      entity_id: media_player.owntone_server
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_anthony_s_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_anthony_s_nightstand
      - media_player.owntone_output_garage_homepod
      - media_player.guest_speakers
      - media_player.owntone_output_kitchen_left
      - media_player.owntone_output_kitchen_right
      - media_player.owntone_output_front_homepod
      - media_player.owntone_output_owntone_output_front_left
      - media_player.kitchen_speakers
      - media_player.owntone_output_soundbar
      - media_player.owntone_output_guest_right
      - media_player.owntone_output_guest_left
  - repeat:
      count: '7'
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Home Assistant" not in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        then:
        - service: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
      - service: media_player.select_source
        continue_on_error: true
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
    alias: Set Spotify Output to Home Assistant
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
    then:
    - service: hassio.addon_restart
      data:
        addon: 4b3d1287_homepod_connect_dev
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_front
        - media_player.owntone_output_front_homepod
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_garage_homepod
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.owntone_output_bathroom
        from: unavailable
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
    - repeat:
        count: 2
        sequence:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_server
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_front_homepod
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_garage_homepod
            - media_player.owntone_output_guest_left
            - media_player.owntone_output_guest_right
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
    alias: Restart Addon if couldn't set Spotify to Home Assistant
  - repeat:
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Home Assistant" not in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        then:
        - service: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
      - service: media_player.select_source
        continue_on_error: true
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
    alias: Set Spotify Output to Home Assistant
  - service: media_player.volume_set
    data:
      volume_level: "{% if states('binary_sensor.bed_occupancy') is defined and is_state('binary_sensor.bed_occupancy',
        'on') %}\n    {% set vol =  0.08 %}\n{% elif now().hour >= 23 or now().hour
        < 6 %}\n    {% set vol = 0.08 %}\n{% else %}\n    {% set vol = 0.13 %}\n{%
        endif %} {{ vol }}\n"
    target:
      entity_id:
      - media_player.spotify_anthony221121
      - media_player.owntone_server
  - service: media_player.play_media
    continue_on_error: true
    data:
      media_content_type: playlist
      media_content_id: https://open.spotify.com/playlist/3j3uK2xjqyD1nvAaBX5YRa
      enqueue: play
    target:
      entity_id: media_player.spotify_anthony221121
  - repeat:
      until:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: shuffle
        state: true
      sequence:
      - service: media_player.shuffle_set
        continue_on_error: true
        data:
          shuffle: true
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
  - service: media_player.repeat_set
    continue_on_error: true
    data:
      repeat: all
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.spotify_anthony221121
  - parallel:
    - alias: Turn on Desk Speakers
      if:
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_desk
        state: 'off'
      then:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.owntone_output_anthony_s_desk
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_desk
            state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_desk
      - if:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_desk
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_anthony_s_desk
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_anthony_s_desk
        else:
        - service: automation.trigger
          data:
            skip_condition: true
          target:
            entity_id: automation.reboot_airport
    - alias: Turn on Nightstand Speaker
      if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_anthony_s_nightstand
      then:
      - repeat:
          until:
          - condition: template
            value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
              'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == 1}}\n"
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - service: media_player.volume_set
            data:
              volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'')) }}

                '
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - repeat:
          until:
          - condition: template
            value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
              'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == 1}}\n"
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - service: media_player.volume_set
            data:
              volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'')) }}

                '
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - repeat:
          until:
          - condition: template
            value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
              'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == 1}}\n"
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - service: media_player.volume_set
            data:
              volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'')) }}

                '
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
    - alias: Turn on Bathroom Speaker
      if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_bathroom
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      then:
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.bathroom_music
    - if:
      - condition: time
        after: 07:00:00
        before: '23:00:00'
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      then:
      - parallel:
        - if:
          - condition: state
            state: 'off'
            entity_id: switch.lrtv
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.lrtv
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.living_room_denon
          - delay:
              hours: 0
              minutes: 0
              seconds: 38
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.49
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          alias: Turn on Living Room TV
          else:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.living_room_denon
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          enabled: false
        - if:
          - condition: state
            entity_id: media_player.owntone_output_front
            state: 'off'
          then:
          - repeat:
              count: '3'
              sequence:
              - service: switch.turn_on
                data: {}
                target:
                  entity_id: switch.fronttv
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id: media_player.owntone_output_front
              - service: media_player.volume_set
                data:
                  volume_level: 0.4
                target:
                  entity_id:
                  - media_player.owntone_output_front
              - service: media_player.volume_set
                data:
                  volume_level: 0.4
                target:
                  entity_id: media_player.gym_tv
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
          alias: Turn on Front TV
          enabled: false
        - if:
          - condition: or
            conditions:
            - condition: state
              entity_id: media_player.owntone_output_kitchen_left
              state: 'off'
            - condition: state
              entity_id: media_player.owntone_output_kitchen_right
              state: 'off'
          then:
          - repeat:
              count: '20'
              sequence:
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id:
                  - media_player.kitchen_speakers
                  - media_player.owntone_output_kitchen_left
                  - media_player.owntone_output_kitchen_right
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 2
                  milliseconds: 0
              - if:
                - condition: state
                  entity_id: media_player.living_room_tv
                  state: playing
                then:
                - service: media_player.volume_set
                  data:
                    volume_level: 0.2
                  target:
                    entity_id:
                    - media_player.kitchen_speakers
                    - media_player.owntone_output_kitchen_left
                    - media_player.owntone_output_kitchen_right
                else:
                - service: media_player.volume_set
                  data:
                    volume_level: 0.45
                  target:
                    entity_id:
                    - media_player.kitchen_speakers
                    - media_player.owntone_output_kitchen_left
                    - media_player.owntone_output_kitchen_right
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 2
                  milliseconds: 0
          alias: Turn on Kitchen HomePod
        - if:
          - condition: state
            entity_id: media_player.owntone_output_garage_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_garage_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id: media_player.owntone_output_garage_homepod
          alias: Turn on Garage Speaker
          enabled: false
        - if:
          - condition: state
            entity_id: media_player.owntone_output_front_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_front_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id:
              - media_player.owntone_output_front_homepod
          alias: Turn on Front HomePod
        alias: Turn on other speakers
      else: []
      enabled: true
  - alias: If Owntone not playing, restart Addon and start over
    if:
    - condition: or
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: lofi
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_nightstand
          state: 'on'
        enabled: true
    then:
    - service: hassio.addon_restart
      data:
        addon: 4b3d1287_homepod_connect_dev
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_front
        - media_player.owntone_output_front_homepod
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_garage_homepod
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
        - media_player.owntone_output_owntone_output_front_left
        - media_player.owntone_output_soundbar
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.owntone_output_bathroom
        from: unavailable
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
    - repeat:
        count: 2
        sequence:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_server
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_front_homepod
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_garage_homepod
            - media_player.owntone_output_guest_left
            - media_player.owntone_output_guest_right
            - media_player.owntone_output_owntone_output_front_left
            - media_player.owntone_output_soundbar
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.lofi
  mode: restart
  icon: mdi:meditation
play_music:
  alias: Play Music
  sequence:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.anthony
      state: Just Arrived
    - condition: state
      entity_id: input_select.anthony
      state: Home
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.lofi
  - if:
    - condition: state
      entity_id: script.stop_music
      state: 'on'
    then:
    - wait_for_trigger:
      - platform: state
        entity_id:
        - script.stop_music
        to: 'off'
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
  - service: media_player.select_source
    data:
      source: librespot-java (pipe)
    target:
      entity_id: media_player.owntone_server
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_anthony_s_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_anthony_s_nightstand
      - media_player.owntone_output_garage_homepod
      - media_player.guest_speakers
      - media_player.owntone_output_kitchen_left
      - media_player.owntone_output_kitchen_right
      - media_player.owntone_output_front_homepod
      - media_player.owntone_output_owntone_output_front_left
      - media_player.kitchen_speakers
      - media_player.owntone_output_soundbar
      - media_player.owntone_output_guest_right
      - media_player.owntone_output_guest_left
  - repeat:
      count: '7'
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Home Assistant" not in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        then:
        - service: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
      - service: media_player.select_source
        continue_on_error: true
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
    alias: Set Spotify Output to Home Assistant
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: source
        state: Home Assistant
    then:
    - service: hassio.addon_restart
      data:
        addon: 4b3d1287_homepod_connect_dev
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_front
        - media_player.owntone_output_front_homepod
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_garage_homepod
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.owntone_output_bathroom
        from: unavailable
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
    - repeat:
        count: 2
        sequence:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_server
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_front_homepod
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_garage_homepod
            - media_player.owntone_output_guest_left
            - media_player.owntone_output_guest_right
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id: media_player.spotify_anthony221121
    alias: Restart Addon if couldn't set Spotify to Home Assistant
  - repeat:
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Home Assistant" not in state_attr(''media_player.spotify_anthony221121'',
            ''source_list'')}}'
        then:
        - service: homeassistant.reload_config_entry
          data: {}
          target:
            entity_id: media_player.spotify_anthony221121
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
      - service: media_player.select_source
        continue_on_error: true
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
    alias: Set Spotify Output to Home Assistant
  - if:
    - condition: time
      after: 00:00:00
      before: 08:55:00
      alias: morning
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.riana
        state: Home
      - condition: state
        entity_id: input_select.riana
        state: Just Arrived
    then:
    - service: media_player.volume_set
      data:
        volume_level: 0.2
      target:
        entity_id:
        - media_player.spotify_anthony221121
        - media_player.owntone_server
      alias: set volume quieter
    else:
    - service: media_player.volume_set
      data:
        volume_level: 0.28
      target:
        entity_id:
        - media_player.spotify_anthony221121
        - media_player.owntone_server
      alias: set normal volume
    alias: set volume
  - service: media_player.play_media
    continue_on_error: true
    data:
      media_content_type: playlist
      media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
      enqueue: play
    target:
      entity_id: media_player.spotify_anthony221121
  - repeat:
      until:
      - condition: state
        entity_id: media_player.spotify_anthony221121
        attribute: shuffle
        state: true
      sequence:
      - service: media_player.shuffle_set
        continue_on_error: true
        data:
          shuffle: true
        target:
          entity_id: media_player.spotify_anthony221121
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.spotify_anthony221121
  - parallel:
    - alias: Turn on Desk Speakers
      if:
      - condition: state
        entity_id: media_player.owntone_output_anthony_s_desk
        state: 'off'
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
      then:
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_desk
            state: 'on'
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_desk
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      - if:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_desk
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_anthony_s_desk
        else:
        - service: automation.trigger
          data:
            skip_condition: true
          target:
            entity_id: automation.reboot_airport
      else:
      - if:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_desk
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_anthony_s_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_anthony_s_desk
        else:
        - service: automation.trigger
          data:
            skip_condition: true
          target:
            entity_id: automation.reboot_airport
    - alias: Turn on Nightstand Speaker
      if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_anthony_s_nightstand
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
      then:
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_anthony_s_nightstand
            state: 'on'
          sequence:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      - repeat:
          until:
          - condition: template
            value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
              'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
              'volume_level') == 1}}\n"
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'')) }}

                '
            target:
              entity_id: media_player.owntone_output_anthony_s_nightstand
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      else:
      - if:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_nightstand
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: "{{ state_attr('media_player.owntone_output_anthony_s_nightstand',
                'volume_level') == \n2 * (state_attr('media_player.spotify_anthony221121',
                'volume_level')) \nor state_attr('media_player.owntone_output_anthony_s_nightstand',
                'volume_level') == 1}}\n"
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ 2 * (state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'')) }}

                  '
              target:
                entity_id: media_player.owntone_output_anthony_s_nightstand
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
        else: []
    - alias: Turn on Bathroom Speaker
      if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_bathroom
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: state
        entity_id: light.bathroom_lights
        state: 'on'
      then:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.owntone_output_anthony_s_nightstand
          to: 'on'
        timeout:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.bathroom_music
    - alias: Turn on other speakers if nobody else home
      if:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.home_alone
        state: 'on'
      - condition: state
        entity_id: input_boolean.showering
        state: 'off'
      then:
      - parallel:
        - if:
          - condition: state
            state: 'off'
            entity_id: switch.lrtv
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.lrtv
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.living_room_denon
          - delay:
              hours: 0
              minutes: 0
              seconds: 38
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.49
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          alias: Turn on Living Room TV
          else:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.living_room_denon
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          enabled: false
        - if:
          - condition: state
            entity_id: media_player.owntone_output_front
            state: 'off'
          then:
          - repeat:
              count: '3'
              sequence:
              - service: switch.turn_on
                data: {}
                target:
                  entity_id: switch.fronttv
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id: media_player.owntone_output_front
              - service: media_player.volume_set
                data:
                  volume_level: 0.4
                target:
                  entity_id:
                  - media_player.owntone_output_front
              - service: media_player.volume_set
                data:
                  volume_level: 0.4
                target:
                  entity_id: media_player.gym_tv
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
          alias: Turn on Front TV
          enabled: false
        - if:
          - condition: or
            conditions:
            - condition: state
              entity_id: media_player.owntone_output_kitchen_left
              state: 'off'
            - condition: state
              entity_id: media_player.owntone_output_kitchen_right
              state: 'off'
          then:
          - repeat:
              count: '7'
              sequence:
              - service: media_player.turn_on
                data: {}
                target:
                  entity_id:
                  - media_player.kitchen_speakers
                  - media_player.owntone_output_kitchen_left
                  - media_player.owntone_output_kitchen_right
              - service: media_player.volume_set
                data:
                  volume_level: 0.45
                target:
                  entity_id:
                  - media_player.kitchen_speakers
                  - media_player.owntone_output_kitchen_left
                  - media_player.owntone_output_kitchen_right
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 1
                  milliseconds: 0
          alias: Turn on Kitchen HomePod
        - if:
          - condition: state
            entity_id: media_player.owntone_output_garage_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_garage_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id: media_player.owntone_output_garage_homepod
          alias: Turn on Garage Speaker
          enabled: false
        - if:
          - condition: state
            entity_id: media_player.owntone_output_front_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_front_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id:
              - media_player.owntone_output_front_homepod
          alias: Turn on Front HomePod
        alias: Turn on other speakers
      else: []
      enabled: true
  - alias: If Owntone not playing, restart Addon and start over
    if:
    - condition: or
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: media_playlist
          state: Music
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_server
          state: playing
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.owntone_output_anthony_s_nightstand
          state: 'on'
    then:
    - service: hassio.addon_restart
      data:
        addon: 4b3d1287_homepod_connect_dev
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        entity_id:
        - media_player.owntone_server
        - media_player.owntone_output_bathroom
        - media_player.owntone_output_anthony_s_desk
        - media_player.owntone_output_front
        - media_player.owntone_output_front_homepod
        - media_player.owntone_output_kitchen_left
        - media_player.owntone_output_kitchen_right
        - media_player.owntone_output_living_room_tv
        - media_player.owntone_output_master_bedroom_tv
        - media_player.owntone_output_anthony_s_nightstand
        - media_player.owntone_output_garage_homepod
        - media_player.owntone_output_guest_left
        - media_player.owntone_output_guest_right
        - media_player.owntone_output_owntone_output_front_left
        - media_player.owntone_output_soundbar
    - wait_for_trigger:
      - platform: state
        entity_id:
        - media_player.owntone_output_bathroom
        from: unavailable
      timeout:
        hours: 0
        minutes: 0
        seconds: 45
        milliseconds: 0
    - repeat:
        count: 2
        sequence:
        - service: media_player.turn_off
          data: {}
          target:
            entity_id:
            - media_player.owntone_server
            - media_player.owntone_output_bathroom
            - media_player.owntone_output_anthony_s_desk
            - media_player.owntone_output_front
            - media_player.owntone_output_front_homepod
            - media_player.owntone_output_kitchen_left
            - media_player.owntone_output_kitchen_right
            - media_player.owntone_output_living_room_tv
            - media_player.owntone_output_master_bedroom_tv
            - media_player.owntone_output_anthony_s_nightstand
            - media_player.owntone_output_garage_homepod
            - media_player.owntone_output_guest_left
            - media_player.owntone_output_guest_right
            - media_player.owntone_output_owntone_output_front_left
            - media_player.owntone_output_soundbar
    - service: script.turn_on
      data: {}
      target:
        entity_id:
        - script.play_music
  mode: restart
  icon: mdi:music-note
stop_music:
  alias: Stop Music
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id:
      - script.lofi
      - script.play_music
  - service: hassio.addon_restart
    data:
      addon: 4b3d1287_homepod_connect_dev
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: homeassistant.reload_config_entry
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_anthony_s_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_front_homepod
      - media_player.owntone_output_kitchen_left
      - media_player.owntone_output_kitchen_right
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_anthony_s_nightstand
      - media_player.owntone_output_garage_homepod
      - media_player.owntone_output_guest_left
      - media_player.owntone_output_guest_right
      - media_player.owntone_output_front_left
      - media_player.owntone_output_soundbar
      - media_player.guest_speakers
      - media_player.kitchen_speakers
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.owntone_output_bathroom
      from: unavailable
    timeout:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - repeat:
      count: 2
      sequence:
      - service: media_player.turn_off
        data: {}
        target:
          entity_id:
          - media_player.owntone_server
          - media_player.owntone_output_bathroom
          - media_player.owntone_output_anthony_s_desk
          - media_player.owntone_output_front
          - media_player.owntone_output_front_homepod
          - media_player.owntone_output_kitchen_left
          - media_player.owntone_output_kitchen_right
          - media_player.owntone_output_living_room_tv
          - media_player.owntone_output_master_bedroom_tv
          - media_player.owntone_output_anthony_s_nightstand
          - media_player.owntone_output_garage_homepod
          - media_player.owntone_output_guest_left
          - media_player.owntone_output_guest_right
  - service: homeassistant.reload_config_entry
    data: {}
    target:
      entity_id: media_player.spotify_anthony221121
  mode: single
  icon: mdi:stop
