fan_off:
  alias: Lights Off
  sequence:
  - parallel:
    - service: light.turn_on
      data:
        rgbw_color:
        - 0
        - 125
        - 255
        - 0
        brightness: 2
      target:
        entity_id: light.glide
    - service: homeassistant.turn_off
      data: {}
      target:
        entity_id:
        - light.fan_lights
        - input_boolean.bedmotion
        - switch.katchy
    - data: {}
      service: homeassistant.turn_on
      target:
        entity_id:
        - input_boolean.govee_cyan
        - light.shapes_007f
        - light.shapes_ee82
        - light.wled
    - data:
        brightness: 255
        effect: Color Loop
        color_name: cyan
      service: light.turn_on
      target:
        entity_id:
        - light.bed_lights
        - light.desk_lights
        - light.light_switch
        - light.light_switch_corner
        - light.closet_lights
  mode: single
  icon: mdi:ceiling-light
color_loop:
  alias: Color
  sequence:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_boolean.govee_cyan
          state: 'on'
        sequence:
        - service: input_button.press
          data: {}
          target:
            entity_id: input_button.activategoveerainbow
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.govee_cyan
          data: {}
      default:
      - service: light.turn_on
        target:
          entity_id:
          - light.glide
        data: {}
    - service: homeassistant.turn_on
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
        - light.wled
    - data:
        brightness: 255
        effect: Color Loop
        rgbw_color:
        - 0
        - 255
        - 255
        - 0
      service: light.turn_on
      target:
        entity_id:
        - light.bedroom_lights
        - light.closet_lights
  mode: single
  icon: mdi:lightbulb-on
music:
  alias: Music
  sequence:
  - parallel:
    - service: input_button.press
      data: {}
      target:
        entity_id: input_button.activategoveemusic
    - service: light.turn_on
      target:
        entity_id: light.desk_lights
      data:
        brightness_pct: 90
    - service: light.turn_on
      data:
        effect: Music
        brightness_pct: 100
        rgbw_color:
        - 0
        - 0
        - 255
        - 0
      target:
        entity_id:
        - light.bedroom_lights
        - light.closet_lights
    - service: light.turn_on
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
  mode: single
  icon: mdi:party-popper
call:
  alias: Call
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.govee_cyan
    data: {}
  - parallel:
    - service: light.turn_on
      target:
        entity_id:
        - light.bed_lights
      data:
        effect: None
        rgb_color:
        - 0
        - 255
        - 255
        brightness_pct: 100
    - service: light.turn_on
      target:
        entity_id:
        - light.light_switch
        - light.light_switch_corner
      data:
        effect: None
        rgb_color:
        - 0
        - 255
        - 255
        brightness_pct: 50
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.bedmotion
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.desktop
        - switch.usb_hub
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.fan_lights
        - light.closet_lights
        - light.desk_lights
    - service: light.turn_on
      data:
        rgbw_color:
        - 0
        - 125
        - 255
        - 0
        brightness: 2
      target:
        entity_id: light.glide
  mode: single
  icon: mdi:phone
night:
  sequence:
  - parallel:
    - service: input_button.press
      data: {}
      target:
        entity_id: input_button.activategoveeoff
    - service: light.turn_off
      data: {}
      target:
        entity_id:
        - light.shapes_007f
        - light.bedroom_lights
        - light.closet_lights
        - light.glide
        - light.shapes_ee82
        - light.wled
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.bedroom_blinds
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.desktop
    - if:
      - condition: state
        state: 'on'
        entity_id: binary_sensor.bed_occupancy
      then:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.usb_hub
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.bedmotion
    - repeat:
        count: '300'
        sequence:
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.shapes_007f
            - light.shapes_ee82
        - delay:
            hours: 0
            minutes: 0
            seconds: 0
            milliseconds: 200
  alias: Night
  mode: restart
  icon: mdi:weather-night
morning:
  alias: Morning
  sequence:
  - parallel:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_boolean.govee_cyan
          state: 'on'
        sequence:
        - service: input_button.press
          data: {}
          target:
            entity_id: input_button.activategoveerainbow
        - service: input_boolean.turn_off
          target:
            entity_id: input_boolean.govee_cyan
          data: {}
      default:
      - service: light.turn_on
        target:
          entity_id:
          - light.glide
        data: {}
    - service: light.turn_on
      data:
        brightness_pct: 100
        hs_color:
        - 30.353
        - 33.597
        effect: None
      target:
        entity_id: light.fan_lights
    - data: {}
      service: homeassistant.turn_on
      target:
        entity_id:
        - light.shapes_007f
        - light.shapes_ee82
        - light.wled
    - data:
        brightness: 255
        effect: Color Loop
        color_name: cyan
      service: light.turn_on
      target:
        entity_id:
        - light.bed_lights
        - light.desk_lights
        - light.light_switch
        - light.light_switch_corner
        - light.closet_lights
    - service: input_select.select_option
      data:
        option: Home
      target:
        entity_id: input_select.anthony
  mode: single
  icon: mdi:white-balance-sunny
start_car:
  alias: Start Car
  sequence:
  - if:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: time
      before: '11:00:00'
      after: 07:00:00
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: state
      entity_id: person.anthony
      state: home
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.ac_boost
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: cover.garage_door
        state: open
    - condition: or
      conditions:
      - condition: state
        entity_id: person.anthony
        state: home
      - condition: state
        entity_id: input_select.anthony
        state: Home
      - condition: state
        entity_id: input_select.anthony
        state: Just Arrived
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.garage_door
    - wait_for_trigger:
      - platform: state
        entity_id:
        - cover.garage_door
        to: opening
      continue_on_timeout: false
      timeout: 00:01:00
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.accord_remotestart
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: drone_mobile.refresh_device_status_accord
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.accord_ignitionstatus
        state: 'on'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.accord_remotestart
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: drone_mobile.refresh_device_status_accord
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - sensor.accord_ignitionstatus
      to: 'on'
    timeout:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.accord_ignitionstatus
        state: 'on'
    then:
    - service: notify.mobile_app_iphone
      data:
        message: Remote start failed
  mode: single
  icon: mdi:car
lofi:
  alias: LoFi
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.play_music
  - service: media_player.select_source
    data:
      source: librespot-java (pipe)
    target:
      entity_id: media_player.owntone_server
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_kitchen_homepod
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_nightstand
      - media_player.owntone_output_garage
      - media_player.owntone_output_guest_left
      - media_player.owntone_output_guest_right
      - media_player.owntone_output_guest_tv
  - repeat:
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
      sequence:
      - service: media_player.select_source
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
  - service: media_player.volume_set
    data:
      volume_level: "{% if states('binary_sensor.bed_occupancy') is defined and is_state('binary_sensor.bed_occupancy',
        'on') %}\n    {% set vol =  0.13 %}\n{% elif now().hour >= 23 or now().hour
        < 6 %}\n    {% set vol = 0.13 %}\n{% else %}\n    {% set vol = 0.25 %}\n{%
        endif %} {{ vol }}\n"
    target:
      entity_id:
      - media_player.spotify_anthony221121
      - media_player.owntone_server
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'on'
      - condition: time
        before: 06:00:00
        after: 00:00:00
    then:
    - service: media_player.play_media
      data:
        media_content_type: playlist
        media_content_id: https://open.spotify.com/playlist/5FmmxErJczcrEwIFGIviYo
        enqueue: play
      target:
        entity_id: media_player.spotify_anthony221121
    else:
    - service: media_player.play_media
      data:
        media_content_type: playlist
        media_content_id: https://open.spotify.com/playlist/0vvXsWCC9xrXsKd4FyS8kM
        enqueue: play
      target:
        entity_id: media_player.spotify_anthony221121
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.spotify_anthony221121
  - parallel:
    - if:
      - condition: state
        entity_id: media_player.owntone_output_desk
        state: 'off'
      then:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.owntone_output_desk
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_desk
            state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_desk
      - if:
        - condition: state
          entity_id: media_player.owntone_output_desk
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_desk
        else:
        - service: automation.trigger
          data: {}
          target:
            entity_id: automation.reboot_airport
      alias: Turn on Desk Speakers
    - if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_nightstand
      then:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id:
          - media_player.owntone_output_nightstand
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_nightstand
            state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_nightstand
      - repeat:
          until:
          - condition: template
            value_template: '{{ state_attr(''media_player.owntone_output_nightstand'',
              ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
              ''volume_level'') }}

              '
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            target:
              entity_id: media_player.owntone_output_nightstand
      alias: Turn on Nightstand Speaker
    - if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_bathroom
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      then:
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.bathroom_music
      alias: Turn on Bathroom Speaker
    - if:
      - condition: template
        value_template: '{{ not is_state(''person.riana'', ''home'')

          and not is_state(''person.dana'', ''home'')

          and states(''zone.home'')|int < 2

          and is_state(''binary_sensor.bed_occupancy'', ''off'')

          }}'
        alias: Nobody else home
      then:
      - parallel:
        - if:
          - condition: state
            entity_id: switch.lrtv
            state: 'off'
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.lrtv
          - delay:
              hours: 0
              minutes: 0
              seconds: 40
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.turn_off
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_living_room
              - media_player.owntone_output_living_room_homepod
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_living_room
              - media_player.owntone_output_living_room_homepod
          alias: Turn on Living Room TV
        - if:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_bathroom
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id: media_player.owntone_output_bathroom
          alias: Turn on Bathroom HomePod
        - if:
          - condition: state
            entity_id: switch.fronttv
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_front
          - service: media_player.volume_set
            data:
              volume_level: 0.4
            target:
              entity_id:
              - media_player.owntone_output_front
          - service: media_player.volume_set
            data:
              volume_level: 0.25
            target:
              entity_id: media_player.gym_tv
          alias: Turn on Front TV
        - if:
          - condition: state
            entity_id: media_player.owntone_output_kitchen_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_kitchen_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id:
              - media_player.owntone_output_kitchen_homepod
          alias: Turn on Kitchen HomePod
        - if:
          - condition: state
            entity_id: media_player.owntone_output_garage
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_garage
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id: media_player.owntone_output_garage
          alias: Turn on Garage Speaker
        alias: Turn on other speakers
      else: []
      enabled: false
  mode: single
  icon: mdi:meditation
play_music:
  alias: Play Music
  sequence:
  - service: script.turn_off
    data: {}
    target:
      entity_id: script.lofi
  - service: media_player.select_source
    data:
      source: librespot-java (pipe)
    target:
      entity_id: media_player.owntone_server
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_kitchen_homepod
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_nightstand
      - media_player.owntone_output_garage
      - media_player.owntone_output_guest_left
      - media_player.owntone_output_guest_right
      - media_player.owntone_output_guest_tv
  - repeat:
      while:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.spotify_anthony221121
          attribute: source
          state: Home Assistant
      sequence:
      - service: media_player.select_source
        data:
          source: Home Assistant
        target:
          entity_id: media_player.spotify_anthony221121
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: media_player.spotify_anthony221121
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.spotify_anthony221121
          attribute: source
          to: Home Assistant
        timeout:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
  - service: media_player.volume_set
    data:
      volume_level: 0.28
    target:
      entity_id:
      - media_player.spotify_anthony221121
      - media_player.owntone_server
  - service: media_player.play_media
    data:
      media_content_type: playlist
      media_content_id: https://open.spotify.com/playlist/1FXZPGh51QQyNUmADd5ssN
      enqueue: play
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.shuffle_set
    data:
      shuffle: true
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.repeat_set
    data:
      repeat: all
    target:
      entity_id: media_player.spotify_anthony221121
  - service: media_player.media_next_track
    data: {}
    target:
      entity_id: media_player.spotify_anthony221121
  - parallel:
    - if:
      - condition: state
        entity_id: media_player.owntone_output_desk
        state: 'off'
      then:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.owntone_output_desk
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_desk
            state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_desk
      - if:
        - condition: state
          entity_id: media_player.owntone_output_desk
          state: 'on'
        then:
        - repeat:
            until:
            - condition: template
              value_template: '{{ state_attr(''media_player.owntone_output_desk'',
                ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') }}

                  '
              target:
                entity_id: media_player.owntone_output_desk
        else:
        - service: automation.trigger
          data: {}
          target:
            entity_id: automation.reboot_airport
      alias: Turn on Desk Speakers
    - if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_nightstand
      then:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id:
          - media_player.owntone_output_nightstand
      - repeat:
          until:
          - condition: state
            entity_id: media_player.owntone_output_nightstand
            state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_nightstand
      - repeat:
          until:
          - condition: template
            value_template: '{{ state_attr(''media_player.owntone_output_nightstand'',
              ''volume_level'') == state_attr(''media_player.spotify_anthony221121'',
              ''volume_level'') }}

              '
          sequence:
          - service: media_player.volume_set
            data:
              volume_level: '{{ state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') }}

                '
            target:
              entity_id: media_player.owntone_output_nightstand
      alias: Turn on Nightstand Speaker
    - if:
      - condition: state
        state: 'off'
        entity_id: media_player.owntone_output_bathroom
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      then:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.owntone_output_nightstand
          to: 'on'
        timeout:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: automation.trigger
        data:
          skip_condition: false
        target:
          entity_id: automation.bathroom_music
      alias: Turn on Bathroom Speaker
    - if:
      - condition: template
        value_template: '{{ not is_state(''person.riana'', ''home'')

          and not is_state(''person.dana'', ''home'')

          and states(''zone.home'')|int < 2

          and is_state(''binary_sensor.bed_occupancy'', ''off'')

          }}'
        alias: Nobody else home
      then:
      - parallel:
        - if:
          - condition: state
            entity_id: switch.lrtv
            state: 'off'
          then:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.lrtv
          - delay:
              hours: 0
              minutes: 0
              seconds: 40
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.living_room_denon
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.volume_set
            data:
              volume_level: 0.35
            target:
              entity_id: media_player.owntone_output_living_room_tv
          - service: media_player.turn_off
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_living_room
              - media_player.owntone_output_living_room_homepod
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_living_room
              - media_player.owntone_output_living_room_homepod
          alias: Turn on Living Room TV
        - if:
          - condition: state
            entity_id: media_player.owntone_output_bathroom
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_bathroom
          - service: media_player.volume_set
            data:
              volume_level: 0.5
            target:
              entity_id: media_player.owntone_output_bathroom
          alias: Turn on Bathroom HomePod
        - if:
          - condition: state
            entity_id: switch.fronttv
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.owntone_output_front
          - service: media_player.volume_set
            data:
              volume_level: 0.4
            target:
              entity_id:
              - media_player.owntone_output_front
          - service: media_player.volume_set
            data:
              volume_level: 0.25
            target:
              entity_id: media_player.gym_tv
          alias: Turn on Front TV
        - if:
          - condition: state
            entity_id: media_player.owntone_output_kitchen_homepod
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_kitchen_homepod
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id:
              - media_player.owntone_output_kitchen_homepod
          alias: Turn on Kitchen HomePod
        - if:
          - condition: state
            entity_id: media_player.owntone_output_garage
            state: 'off'
          then:
          - service: media_player.turn_on
            data: {}
            target:
              entity_id:
              - media_player.owntone_output_garage
          - service: media_player.volume_set
            data:
              volume_level: 0.45
            target:
              entity_id: media_player.owntone_output_garage
          alias: Turn on Garage Speaker
        alias: Turn on other speakers
      else:
      - condition: state
        entity_id: binary_sensor.bed_occupancy
        state: 'off'
      - condition: device
        type: is_on
        device_id: 624405d34a0a0bc8df3990c131a31bd2
        entity_id: light.bathroom_lights
        domain: light
      - if:
        - condition: state
          entity_id: media_player.owntone_output_bathroom
          state: 'off'
        then:
        - service: media_player.turn_on
          data: {}
          target:
            entity_id:
            - media_player.owntone_output_bathroom
        - wait_for_trigger:
          - platform: state
            entity_id:
            - media_player.owntone_output_bathroom
            to: 'on'
          timeout:
            hours: 0
            minutes: 0
            seconds: 5
            milliseconds: 0
        - repeat:
            until:
            - condition: template
              value_template: '{% if states(''binary_sensor.showering'') is defined
                and is_state(''binary_sensor.showering'', ''on'')  %}  {% set vol
                =  0.55 %} {% else %} {% set vol = state_attr(''media_player.spotify_anthony221121'',
                ''volume_level'') %} {% endif %}

                {{ state_attr(''media_player.owntone_output_bathroom'', ''volume_level'')
                == vol }}

                '
            sequence:
            - service: media_player.volume_set
              data:
                volume_level: '{% if states(''binary_sensor.showering'') is defined
                  and is_state(''binary_sensor.showering'', ''on'')  %}  {% set vol
                  =  0.55 %} {% else %} {% set vol = state_attr(''media_player.spotify_anthony221121'',
                  ''volume_level'') %} {% endif %}

                  {{ vol }}

                  '
              target:
                entity_id: media_player.owntone_output_bathroom
        alias: Turn on Bathroom HomePod
      enabled: false
      alias: Turn on other speakers if nobody else home
  mode: single
  icon: mdi:music-note
stop_music:
  alias: Stop Music
  sequence:
  - service: hassio.addon_restart
    data:
      addon: 63120367_homepod-connect
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: homeassistant.reload_config_entry
    data: {}
    target:
      entity_id:
      - media_player.owntone_server
      - media_player.owntone_output_bathroom
      - media_player.owntone_output_desk
      - media_player.owntone_output_front
      - media_player.owntone_output_kitchen_homepod
      - media_player.owntone_output_living_room_tv
      - media_player.owntone_output_master_bedroom_tv
      - media_player.owntone_output_nightstand
      - media_player.owntone_output_garage
      - media_player.owntone_output_guest_tv
      - media_player.owntone_output_guest_left
      - media_player.owntone_output_guest_right
  - wait_for_trigger:
    - platform: state
      entity_id:
      - media_player.owntone_output_bathroom
      from: unavailable
    timeout:
      hours: 0
      minutes: 0
      seconds: 45
      milliseconds: 0
  - repeat:
      count: 2
      sequence:
      - service: media_player.turn_off
        data: {}
        target:
          entity_id:
          - media_player.owntone_server
          - media_player.owntone_output_bathroom
          - media_player.owntone_output_desk
          - media_player.owntone_output_front
          - media_player.owntone_output_kitchen_homepod
          - media_player.owntone_output_living_room_tv
          - media_player.owntone_output_master_bedroom_tv
          - media_player.owntone_output_nightstand
          - media_player.owntone_output_garage
          - media_player.owntone_output_guest_left
          - media_player.owntone_output_guest_right
          - media_player.owntone_output_guest_tv
  mode: single
  icon: mdi:stop
