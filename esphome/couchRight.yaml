esphome:
  name: couchright
  friendly_name: "Couch Right"

external_components:
  source: github://rednblkx/HAP-ESPHome@main
  refresh: 0s

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: 5.2.1
    platform_version: 6.7.0
    sdkconfig_options:
      CONFIG_COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_LWIP_MAX_SOCKETS: "16"
      CONFIG_MBEDTLS_HKDF_C: y

wifi:
  ssid: !secret ssid
  password: !secret password
  fast_connect: on
  enable_btm: true
  #output_power: 8.5dB
  manual_ip:
    static_ip: ${static_ip}
    gateway: !secret gateway
    subnet: !secret subnet
    dns1: !secret dns1

substitutions:
  static_ip: 192.168.1.77

captive_portal:
logger:
api:
ota:
  platform: esphome
#bluetooth_proxy:
#  active: true
#esp32_ble_tracker:
button:
- platform: homekit_base
  factory_reset:
    name: "Reset HomeKit pairings"
- platform: restart
  name: "Restart"

homekit_base:
  setup_code: '159-35-777'
  setup_id: "CRGT"

homekit:
  light:
    - id: couch_right

light:
  - id: couch_right
    platform: monochromatic
    name: "Couch Right"
    output: couchRightOutput

output:
  - platform: template
    id: couchRightOutput
    type: float
    write_action:
      - cover.stop: couchRight
      - if:
          condition:
            lambda: return ((state > 0) && (state < 100));
          then:
          - lambda: |-
              if (state > id(couchRight).position) { id(openCouchRight).turn_on(); } 
              else if (state < id(couchRight).position) { id(closeCouchRight).turn_on(); }
          - delay: !lambda "return abs(state - (id(couchRight).position)) * 8000;" # Delay based on desired vs current pos
      - if:
          condition:
            lambda: return (state == 0);
          then:
          - cover.stop: couchRight
          - switch.turn_on: closeCouchRight
          - delay: 8500ms
      - if:
          condition:
            lambda: return (state == 100);
          then:
          - cover.stop: couchRight
          - switch.turn_on: openCouchRight
          - delay: 8500ms
      - cover.stop: couchRight

cover:
  - platform: template
    name: "Right"
    id: couchRight
    optimistic: true #remove this
#    lambda: |-
#      return id(rightDistance).state; 
    has_position: true
    open_action:
      - cover.stop: couchRight
      - switch.turn_on: openCouchRight
      - delay: 8500ms
      - cover.stop: couchRight
    close_action:
      - cover.stop: couchRight
      - switch.turn_on: closeCouchRight
      - delay: 8500ms
      - cover.stop: couchRight
    stop_action:
      - switch.turn_off: closeCouchRight
      - switch.turn_off: openCouchRight
    position_action: # If desired position is higher than current position, open, else close
      - cover.stop: couchRight
      - lambda: |-
          if (pos > id(couchRight).position) { id(openCouchRight).turn_on(); } 
          else if (pos < id(couchRight).position) { id(closeCouchRight).turn_on(); }
      - delay: !lambda "return abs(pos - (id(couchRight).position)) * 8000;" # Delay based on desired vs current pos
      - cover.stop: couchRight

switch:
  - platform: gpio
    id: closeCouchRight
    pin: GPIO17 # IN1 / 
    inverted: True
    restore_mode: ALWAYS_OFF
    internal: true
  - platform: gpio
    id: openCouchRight
    pin: GPIO16 # IN2 / 
    inverted: True
    restore_mode: ALWAYS_OFF
    internal: true

#i2c:
#    scl: 26
#    sda: 27
#    scan: true

#sensor:
#  - platform: vl53l0x
#    name: "Distance"
#    id: rightDistance
#    update_interval: 500ms
#    unit_of_measurement: "cm" #remove
#    filters:
#      - multiply: 100
#      - delta: 0.3
#      - calibrate_linear:
#          - 0.0 -> 0.0
#          - 1000.0 -> 1.0